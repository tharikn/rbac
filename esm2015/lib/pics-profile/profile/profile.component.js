import { Component, EventEmitter, Output } from '@angular/core';
import { FormGroup, Validators, FormControl } from '@angular/forms';
import { AppConstants } from '../@core/constants/app-constants';
import { AlertService } from '../@core/service/alert.service';
import { ThemeService } from '../@core/service/theme.service';
import { CustomValidator } from '../@core/validator/custom-validator';
import { fontSetList, themeList } from '../@core/constants/theme-constants';
import { LocalService } from '../@core/service/local.service';
import { RBACINFO } from '../@core/urls/rbac-url.config';
import * as i0 from "@angular/core";
import * as i1 from "../@core/service/auth.service";
import * as i2 from "@angular/forms";
import * as i3 from "../@core/service/http.service";
import * as i4 from "../../profile.service";
import * as i5 from "../@core/service/attachments.service";
import * as i6 from "../@core/service/data-store.service";
import * as i7 from "../@shared/alert/alert.component";
import * as i8 from "primeng/inputmask";
import * as i9 from "primeng/checkbox";
import * as i10 from "primeng/button";
import * as i11 from "@angular/common";
import * as i12 from "primeng/inputtext";
import * as i13 from "primeng/ripple";
import * as i14 from "../@core/directives/password-toggle.directive";
export class ProfileComponent {
    constructor(injector, authService, formBuilder, httpService, profileService, attachmentService, _storeservice) {
        this.authService = authService;
        this.formBuilder = formBuilder;
        this.httpService = httpService;
        this.profileService = profileService;
        this.attachmentService = attachmentService;
        this._storeservice = _storeservice;
        this.passwordSuccess = new EventEmitter();
        this.isValid = false;
        this.themes = [];
        this.fontSetList = [];
        this.checked = false;
        this.RBACORG = new RBACINFO();
        this.optinPapper = false;
        this.errors = AppConstants.errorList;
        this.externalOnly = false;
        this.localstorage = injector.get(LocalService);
        this.alertService = injector.get(AlertService);
        this.themeService = injector.get(ThemeService);
        this.themes = themeList;
        this.fontSetList = fontSetList;
        this.userid = sessionStorage.getItem('id');
        this.selectedTheme = this.localstorage.getItem('SELECTED_THEME') || 'default';
        this.selectedFont = this.localstorage.getItem('SELECTED_FONT') || '13';
        this.initializeResetPasswordForm();
        this.initializeForm();
    }
    ngOnInit() {
        this.userId = sessionStorage.getItem('id');
        const roleid = sessionStorage.getItem('role_id');
        if (roleid === '28') {
            this.externalOnly = true;
        }
        ;
        this.orgSubs = this._storeservice.currentStore.subscribe((res) => {
            if (res['RBACORG'] && res['RBACORG'] !== '') {
                this.RBACORG = res['RBACORG'];
                console.log(this.RBACORG, 'RBACORG Profile');
                this.environment = this.RBACORG['environment'];
                this.orgId = parseInt(this.RBACORG['orgID']);
                if (this.environment) {
                    this.getUserInfo();
                    this.fontSlider();
                }
                if (this.RBACORG.optinPapperless) {
                    this.userForm.addControl('opt_in_for_paperless_documentation', new FormControl(''));
                    this.getUserPreferenceList();
                }
            }
        });
    }
    get contactData() {
        return this.userForm.get('contactData');
    }
    createRow(x) {
        return new FormGroup({
            phone: new FormControl((x === null || x === void 0 ? void 0 : x.phone_number) ? x === null || x === void 0 ? void 0 : x.phone_number : '', [Validators.required, Validators.pattern(/\(\d{3}\) \d{3}-\d{4}/)]),
            HomePhone: new FormControl((x === null || x === void 0 ? void 0 : x.homephone) ? x === null || x === void 0 ? void 0 : x.homephone : '', [Validators.required, Validators.pattern(/\(\d{3}\) \d{3}-\d{4}/)])
        });
    }
    addSerice() {
        this.contactData.push(this.createRow());
        const items = this.userForm.get('contactData');
        console.log(items, 'items addSerice');
    }
    removeSerice(i) {
        this.contactData.removeAt(i);
        const items = this.userForm.get('contactData');
        console.log(items, 'items removeSerice');
    }
    initializeResetPasswordForm() {
        this.resetPasswordForm = this.formBuilder.group({
            id: sessionStorage.getItem('id'),
            mailid: sessionStorage.getItem('email'),
            currentpassword: ['', Validators.required],
            newpassword: [
                '',
                Validators.compose([
                    Validators.required,
                    CustomValidator.patternValidator(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[`!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~])[A-Za-z\d`!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]{8,16}$/, { hasSpace: true }),
                    CustomValidator.patternValidator(/\d/, { hasNumber: true }),
                    CustomValidator.patternValidator(/[A-Z]/, { hasCapitalCase: true }),
                    CustomValidator.patternValidator(/[a-z]/, { hasSmallCase: true }),
                    CustomValidator.patternValidator(/[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/, { hasSpecialCharacters: true }),
                    Validators.minLength(8)
                ])
            ],
            conformpassword: ['', Validators.required]
        }, {
            validators: [this.passwordMatchValidator, this.passwordValidator]
        });
    }
    initializeForm() {
        this.userForm = this.formBuilder.group({
            firstname: ['', Validators.required],
            middlename: [''],
            lastname: ['', Validators.required],
            // username: ['', Validators.required],
            // dob:[''],
            phone: ['', [Validators.required, Validators.pattern(/\(\d{3}\) \d{3}-\d{4}/)]],
            HomePhone: ['', [Validators.required, Validators.pattern(/\(\d{3}\) \d{3}-\d{4}/)]],
            //dob: ['', Validators.required],
            opt_in_for_paperless_documentation: [''],
            email: ['', [Validators.required, Validators.pattern(AppConstants.regexEmail)]],
            alternate_email: ['', [Validators.required, Validators.pattern(AppConstants.regexEmail)]],
            contactData: this.formBuilder.array([this.createRow()]),
        });
    }
    get resetFormcontrols() {
        const isInvalid = this.resetPasswordForm.controls['newpassword'].status;
        const newpassword = this.resetPasswordForm.value['newpassword'];
        if (isInvalid === 'INVALID' && newpassword !== '') {
            this.isValid = true;
        }
        else {
            this.isValid = false;
        }
        return this.resetPasswordForm.controls;
    }
    passwordValidator(group) {
        const { newpassword, conformpassword } = group.value;
        if (!newpassword)
            return null;
        return newpassword !== conformpassword ? { NoPassswordMatch: 'Password does not match' } : null;
    }
    passwordMatchValidator(group) {
        const { currentpassword, newpassword } = group.value;
        if (!currentpassword)
            return null;
        return currentpassword === newpassword ? { newPasswordSame: 'New Password same as Current Password' } : null;
    }
    getUserInfo() {
        this.profileService.getAllUserList(this.userid).subscribe((res) => {
            var _a, _b, _c;
            const patchValuedata = res.data;
            const providerData = patchValuedata.provider[0];
            this.thumbnail = ((_b = (_a = patchValuedata.additionalinfo) === null || _a === void 0 ? void 0 : _a.thumbnail) === null || _b === void 0 ? void 0 : _b.url) || '';
            this.userForm.patchValue({
                firstname: patchValuedata.firstname,
                middlename: patchValuedata.middlename,
                lastname: patchValuedata.lastname,
                // username: patchValuedata.username,
                // dob: patchValuedata.dob ? new Date(patchValuedata.dob) : null,
                email: patchValuedata.email,
                alternate_email: providerData.alternate_email,
                HomePhone: providerData.homephone,
            });
            if (providerData.phone.length == 10) {
                const value = providerData.phone;
                const mobile = `(${value.slice(0, 3)}) ${value.slice(3, 6)}-${value.slice(6)}`;
                this.userForm.patchValue({
                    phone: mobile
                });
            }
            else {
                this.userForm.patchValue({
                    phone: providerData.phone
                });
            }
            const control = this.userForm.controls['contactData'];
            control.controls = [];
            (_c = providerData === null || providerData === void 0 ? void 0 : providerData.phone_numbers) === null || _c === void 0 ? void 0 : _c.forEach(x => {
                control.push(this.createRow(x));
            });
        });
    }
    get formValidate() {
        return this.userForm.controls;
    }
    getUserPreferenceList() {
        this.profileService.getUserPreference(this.userid).subscribe((res) => {
            const patchValuedata = res.data;
            this.userForm.patchValue({
                opt_in_for_paperless_documentation: patchValuedata.opt_in_for_paperless_documentation,
            });
        });
    }
    handleFileInput(fileValue) {
        const target = fileValue.target;
        const file = target.files[0];
        this.uploadedFile = fileValue.target.files[0].name;
        this.imageData = {
            contentType: fileValue.target.files[0].type,
            fileName: `user-profileimage/${this.userid}/${this.uploadedFile}`
        };
        if (this.validateImage(fileValue.target.files)) {
            this.attachmentService.uploadKey(this.imageData).subscribe((res) => {
                this.urlPath = res.data;
                const uploadAttachment = document.getElementById('file');
                const uploadAttachmentDetails = uploadAttachment.files[0];
                this.httpService.putUpload(this.urlPath, uploadAttachmentDetails, uploadAttachmentDetails.type).subscribe((_resp) => {
                    this.alertService.success('Uploaded Successfully!');
                    const reader = new FileReader();
                    reader.onload = () => {
                        this.thumbnail = reader.result;
                    };
                    reader.readAsDataURL(file);
                    this.attachType = fileValue.target.files[0].type;
                }, error => {
                    if (error.status == 0) {
                        this.alertService.error(AppConstants.errorMessage);
                        this.uploadedFile = '';
                        this.urlPath = '';
                    }
                });
            }, _error => {
                this.alertService.error(AppConstants.errorMessage);
            });
        }
    }
    updateprofile() {
        const userData = this.userForm.getRawValue();
        if (this.uploadedFile) {
            userData.additionalinfo = {
                photo: this.imageData,
                thumbnail: this.imageData
            };
        }
        // const validate = this.userForm.valid
        // if(validate){}
        this.profileService.updateUser(userData, this.userid).subscribe(() => {
            this.profileService.getProfile({
                url: this.thumbnail,
                name: this.userForm.value.firstname
            });
            if (this.RBACORG.optinPapperless) {
                this.userForm.addControl('opt_in_for_paperless_documentation', new FormControl(''));
                this.updateStyling();
            }
            this.alertService.success('Profile updated successfully');
        });
    }
    updateStyling() {
        const body = {
            type: 'USER_THEME_PREFERENCES',
            mappedid: this.userid,
            config: JSON.stringify({ theme: this.selectedTheme, font: this.selectedFont }),
            opt_in_for_paperless_documentation: this.userForm.value.opt_in_for_paperless_documentation
        };
        this.profileService.saveUserPreference(body).subscribe(() => {
            // This is intentional
        });
    }
    setTheme(event) {
        this.profileService.setTheme(event);
    }
    setFont(event) {
        this.profileService.setFont(event);
    }
    setRangeFont(modal) {
        this.profileService.setRangeFont(modal);
    }
    changePassword() {
        this.formSubmitted = true;
        if (!this.resetPasswordForm.valid) {
            return;
        }
        const obj = {
            id: Number(this.resetPasswordForm.value['id']),
            currentpassword: this.resetPasswordForm.value['currentpassword'],
            newpassword: this.resetPasswordForm.value['newpassword']
        };
        this.authService.ResetPassword(obj).subscribe(_res => {
            this.passwordSuccess.emit('change-password');
            this.authService.logout();
        }, err => {
            var _a;
            if (typeof ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message) === 'string') {
                this.alertService.error('Current Password is Invalid.');
            }
            else {
                this.alertService.error(AppConstants.errorMessage);
            }
        });
    }
    validateImage(file) {
        const fileSize = Number(file[0].size) / 1024;
        const filetype = file[0].type.replace('image/', '');
        if (filetype === 'jpg' || filetype === 'jpeg' || filetype === 'png' || filetype === 'gif') {
            if (fileSize < 50) {
                return true;
            }
            else {
                this.alertService.warn('File is bigger than 50 KB');
                return false;
            }
        }
        else {
            this.alertService.warn(`${filetype} format is not supported`);
            return false;
        }
    }
    clearForm() {
        this.userForm.controls['firstname'].reset();
        this.userForm.controls['middlename'].reset();
        this.userForm.controls['lastname'].reset();
        this.userForm.controls['alternate_email'].reset();
        this.userForm.controls['phone'].reset();
        this.userForm.controls['HomePhone'].reset();
        this.userForm.controls['phone'].reset();
        this.userForm.controls['HomePhone'].reset();
        this.thumbnail = '';
    }
    reset() {
        this.resetPasswordForm.controls['conformpassword'].reset();
        this.resetPasswordForm.controls['newpassword'].reset();
        this.resetPasswordForm.controls['currentpassword'].reset();
        this.formSubmitted = false;
    }
    removeThumbnail() {
        this.thumbnail = '';
    }
    ngOnDestroy() {
        if (this.socketSubscription) {
            this.socketSubscription.unsubscribe();
        }
        this.orgSubs.unsubscribe();
    }
    fontSlider() {
        const rangeSlider = document.getElementById('rs-range-line');
        const rangeBullet = document.getElementById('rs-bullet');
        rangeSlider.addEventListener('input', showSliderValue, false);
        function showSliderValue() {
            rangeBullet.innerHTML = rangeSlider.value;
            const bulletPosition = (Number(rangeSlider.value) / Number(rangeSlider.max));
            rangeBullet.style.left = (bulletPosition * 578) + 'px';
        }
    }
}
ProfileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProfileComponent, deps: [{ token: i0.Injector }, { token: i1.AuthService }, { token: i2.FormBuilder }, { token: i3.HttpService }, { token: i4.ProfileService }, { token: i5.AttachmentsService }, { token: i6.DataStoreService }], target: i0.ɵɵFactoryTarget.Component });
ProfileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ProfileComponent, selector: "core-profile", outputs: { passwordSuccess: "passwordSuccess" }, ngImport: i0, template: "<app-alert></app-alert>\r\n<div class=\"card w-100 profile\">\r\n  <div class=\"container-group h-100\" [formGroup]=\"userForm\">\r\n    <div class=\"left-container\">\r\n      <div class=\"nav flex-column nav-pills py-4 px-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        <a class=\"nav-link d-flex align-items-center mb-3 active\" id=\"v-pills-home-tab\" data-toggle=\"pill\"\r\n          href=\"#v-pills-home\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">person</span>\r\n          Edit Profile\r\n        </a>\r\n        <a class=\"nav-link d-flex align-items-center mb-3\" id=\"v-pills-profile-tab\" data-toggle=\"pill\"\r\n          href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">lock_open</span>\r\n          Change Password\r\n        </a>\r\n        <a class=\"nav-link d-flex align-items-center\" id=\"v-theme-a\" data-toggle=\"pill\" href=\"#theme_tab\" role=\"tab\"\r\n          aria-controls=\"theme_tab\" aria-selected=\"false\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">palette</span>\r\n          Theme\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"right-container\">\r\n      <div class=\"tab-content py-4 px-4\" id=\"v-pills-tabContent\">\r\n        <!-- Edit Profile Tab -->\r\n        <div class=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\r\n          <div class=\"strip_head toggleleft mb-3\">\r\n            <span class=\"report_head font-weight-bold\">Edit Profile</span>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid pic-upload-group row justify-content-md-center\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 text-center\">\r\n              <figure class=\"mt-2 mb-2 pic-upload justify-content-md-center\">\r\n                <img width=\"64\" class=\"rounded-circle border\" [src]=\"thumbnail || 'assets/images/user-empty.png'\"\r\n                  alt=\"upload\" />\r\n                <label for=\"file\" role=\"button\"\r\n                  class=\"material-icon material-symbols-outlined p-1 rounded-circle bg-primary text-white file-upload-btn\">edit</label>\r\n                <input type=\"file\" id=\"file\" aria-hidden=\"true\" style=\"visibility: hidden; display: none\"\r\n                  (change)=\"handleFileInput($event)\" />\r\n              </figure>\r\n              <button class=\"btn btn-primary\" *ngIf=\"thumbnail\" (click)=\"removeThumbnail()\">Remove</button>\r\n              <p><small>Image size max 50KB</small></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"fname\" class=\"referral-form-labels\">\r\n                First Name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"fname\" type=\"text\" formControlName=\"firstname\" placeholder=\"Enter First Name\"\r\n                aria-describedby=\"fname\" pInputText />\r\n              <div *ngIf=\"userForm.get('firstname').hasError('required')\" class=\"text-danger\">\r\n                First name is required.\r\n              </div>\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"mname\" class=\"referral-form-labels\">Middle Name </label>\r\n              <input id=\"mname\" type=\"text\" placeholder=\"Enter Middle Name\" formControlName=\"middlename\"\r\n                aria-describedby=\"mname\" pInputText />\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"lName\" class=\"referral-form-labels\">\r\n                last name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"lName\" type=\"text\" placeholder=\"Enter Last Name\" formControlName=\"lastname\" pInputText\r\n                aria-describedby=\"lName\" />\r\n              <div *ngIf=\"userForm.get('lastname').hasError('required')\" class=\"text-danger\">\r\n                Last name is required.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <!-- <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"userName\" class=\"referral-form-labels\">\r\n                User Name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"userName\" type=\"text\" readonly=\"true\" placeholder=\"Enter User Name\" formControlName=\"username\"\r\n                aria-describedby=\"userName\" pInputText />\r\n            </div> -->\r\n            <!-- <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"dateformat\" class=\"referral-form-labels\">\r\n                DOB -->\r\n            <!-- <span class=\"requiredfield text-danger\">*</span> -->\r\n            <!-- </label>      \r\n              <p-calendar placeholder=\"Select Date Of Birth\" formControlName=\"dob\" dateFormat=\"yy-mm-dd\"\r\n                [showOnFocus]=\"true\" inputId=\"dateformat\">\r\n              </p-calendar>\r\n            </div>\r\n          </div> -->\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\" *ngIf=\"externalOnly\">\r\n              <label for=\"usersAlterEmailid\" class=\"referral-form-labels\">\r\n                Alternative Email ID\r\n                <!-- <span class=\"requiredfield text-danger\">*</span> -->\r\n              </label>\r\n              <input id=\"usersAlterEmailid\" placeholder=\"Enter Alternative Email ID\" formControlName=\"alternate_email\"\r\n                type=\"text\" pInputText />\r\n              <div *ngIf=\"userForm.get('alternate_email').hasError('pattern')\" class=\"text-danger\">\r\n                Please enter valid email.\r\n              </div>\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"usersEmailid\" class=\"referral-form-labels\">\r\n                Email ID\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"usersEmailid\" placeholder=\"Enter Email ID\" formControlName=\"email\" type=\"text\" pInputText\r\n                readonly />\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"phone\" class=\"referral-form-labels\">\r\n                Cell Phone\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <p-inputMask id=\"phone\" mask=\"(999) 999-9999\" styleClass=\"w-100\"\r\n                formControlName=\"phone\" placeholder=\"Enter Cell Phone\" aria-describedby=\"phone\"></p-inputMask>\r\n              <div *ngIf=\"userForm.get('phone').hasError('required')\" class=\"text-danger\">\r\n                Cell phone number is required.\r\n              </div>\r\n\r\n              <div *ngIf=\"userForm.get('phone').hasError('pattern')\" class=\"text-danger\">\r\n                Please enter valid cell phone number.\r\n              </div>\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"HomePhone\" class=\"referral-form-labels\">Home Phone </label>\r\n              <p-inputMask id=\"HomePhone\" mask=\"(999) 999-9999\" [autoClear]=\"false\" styleClass=\"w-100\"\r\n                formControlName=\"HomePhone\" placeholder=\" Enter Home Phone\" aria-describedby=\"HomePhone\"></p-inputMask>\r\n              <div *ngIf=\"userForm.get('HomePhone').hasError('pattern')\" class=\"text-danger\">\r\n                Please enter valid home phone number.\r\n              </div>\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\" *ngIf=\"externalOnly\">\r\n              <label class=\"d-md-block\">\r\n                &#160;\r\n              </label>\r\n              <button type=\"button\" class=\"btn btn-primary btn-icon p-1 my-2\" (click)=\"addSerice()\" title=\"Add New\"\r\n              pRipple>\r\n              <em class=\"pi pi-plus font-weight-bold\"></em>\r\n            </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <ng-container formArrayName=\"contactData\" *ngIf=\"externalOnly\">\r\n            <div class=\"p-fluid p-formgrid row\"\r\n              *ngFor=\"let item of userForm['controls']['contactData']['controls']; let j = index\"\r\n              formGroupName=\"{{ j }}\">\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n                <label for=\"phone\" class=\"referral-form-labels\">\r\n                  Cell Phone\r\n                  <!-- <span class=\"requiredfield text-danger\">*</span> -->\r\n                </label>\r\n                <p-inputMask id=\"phone\" mask=\"(999) 999-9999\" [autoClear]=\"false\" styleClass=\"w-100\"\r\n                  formControlName=\"phone\" placeholder=\"Enter Cell Phone \" aria-describedby=\"phone\"></p-inputMask>\r\n                <!-- <div *ngIf=\"contactForm.get('phone').hasError('required')\" class=\"text-danger\">\r\n                  Cell phone number is required.\r\n                </div> -->\r\n\r\n                <!-- <div *ngIf=\"contactData.get('phone').hasError('pattern')\" class=\"text-danger\">\r\n                  Please enter valid cell phone number.\r\n                </div> -->\r\n              </div>\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n                <label for=\"HomePhone\" class=\"referral-form-labels\">Home Phone</label>\r\n                <p-inputMask id=\"HomePhone\" mask=\"(999) 999-9999\" [autoClear]=\"false\" styleClass=\"w-100\"\r\n                  formControlName=\"HomePhone\" placeholder=\"Enter Home Phone\" aria-describedby=\"HomePhone\"></p-inputMask>\r\n                <!-- <div *ngIf=\"contactData.get('HomePhone').hasError('pattern')\" class=\"text-danger\">\r\n                  Please enter valid home phone number.\r\n                </div> -->\r\n              </div>\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n                <label class=\"d-md-block\">\r\n                  &#160;\r\n                </label>\r\n                <div>\r\n                <button type=\"button\" class=\"btn btn-danger btn-icon my-2\" title=\"Remove\" (click)=\"removeSerice(j)\"\r\n                  pRipple>\r\n                  <em class=\"pi pi-trash font-weight-bold\"></em>\r\n                </button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </ng-container>\r\n            <div class=\"p-fluid p-formgrid row\" *ngIf=\"RBACORG.optinPapperless\">\r\n              <div class=\"p-field col-md-12 col-12\">\r\n                <div class=\"checkbox\">\r\n                  <p-checkbox [(ngModel)]=\"checked\" [binary]=\"true\" inputId=\"binary\"\r\n                    formControlName=\"opt_in_for_paperless_documentation\">\r\n                  </p-checkbox>\r\n                  <label class=\"checklabel\" for=\"ch\">Opt-in for Paperless Documentation</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid row\">\r\n              <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\"></div>\r\n              <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\"></div>\r\n              <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12 mb-0\">\r\n                <button class=\"pull-right mr-2 mb-2 btn btn-primary btncommon\" (click)=\"updateprofile()\">\r\n                  Save Changes\r\n                </button>\r\n                <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" (click)=\"clearForm()\">\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tab End -->\r\n\r\n        <!-- Change Password Tab -->\r\n        <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\r\n          <div class=\"strip_head toggleleft mb-4\">\r\n            <span class=\"report_head font-weight-bold\">Change Password</span>\r\n          </div>\r\n          <div [formGroup]=\"resetPasswordForm\" class=\"reset-password-div\">\r\n            <div class=\"p-fluid p-formgrid row\">\r\n              <div class=\"p-field col-xl-4 col-lg-12 col-sm-4 col-md-12 col-12 mb-3\">\r\n                <label for=\"mailid\" aria-describedby=\"mailid\">Email <span class=\"requiredfield\">*</span></label>\r\n                <input type=\"text\" readonly=\"true\" id=\"mailid\" class=\"form-control\" formControlName=\"mailid\"\r\n                  pInputText />\r\n              </div>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid row\">\r\n              <div class=\"col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-2 position-relative\">\r\n                <label for=\"cpassword\" aria-describedby=\"cpassword\">Current Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <div class=\"position-relative\">\r\n                  <input [maxlength]=\"16\" formControlName=\"currentpassword\" #currentpassword type=\"password\"\r\n                    placeholder=\"Enter Current Password\" name=\"password\" id=\"password\" tabindex=\"0\" required pInputText\r\n                    style=\"padding-right: 40px;\" />\r\n                  <em class=\"pi eye-icon\"  aria-hidden=\"true\" appPasswordToggle [passwordField]=\"currentpassword\"></em>\r\n                </div>\r\n                <div class=\"p-error block\" *ngIf=\"\r\n                resetPasswordForm.get('currentpassword').errors && formSubmitted\">\r\n                  <small>Current password is required.</small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-2 position-relative\">\r\n                <label for=\"npassword\" aria-describedby=\"npassword\">New Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <div class=\"position-relative\">\r\n                  <input [maxlength]=\"16\" formControlName=\"newpassword\" #newpassword type=\"password\"\r\n                    placeholder=\"Enter New Password\" name=\"password\" id=\"newpassword\" tabindex=\"0\" required pInputText\r\n                    style=\"padding-right: 40px;\" />\r\n                  <em class=\"pi eye-icon\" appPasswordToggle [passwordField]=\"newpassword\" aria-hidden=\"true\"></em>\r\n                </div>\r\n                <div class=\"autosuggest\" *ngIf=\"isValid\">\r\n                  <div class=\"p-error block\" *ngIf=\"resetFormcontrols['newpassword'].hasError('hasNumber')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    <small> {{ errors[0] }}</small>\r\n                  </div>\r\n                  <div class=\"p-error block\" *ngIf=\"resetFormcontrols['newpassword'].hasError('hasCapitalCase')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    <small> {{ errors[2] }}</small>\r\n                  </div>\r\n                  <div class=\"p-error block\" *ngIf=\"resetFormcontrols['newpassword'].hasError('hasSmallCase')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    <small> {{ errors[3] }}</small>\r\n                  </div>\r\n                  <small class=\"p-error block\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('hasSpecialCharacters')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    {{ errors[1] }}\r\n                  </small>\r\n                  <div class=\"p-error block\" *ngIf=\"resetFormcontrols['newpassword'].hasError('minlength')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    <small> {{ errors[4] }}</small>\r\n                  </div>\r\n                  <div class=\"p-error block\" *ngIf=\"resetFormcontrols['newpassword'].hasError('hasSpace')\">\r\n                    <em class=\"pi pi-times-circle\"></em>\r\n                    <small> {{ errors[6] }}</small>\r\n                  </div>\r\n                </div>\r\n                <div class=\"p-error block\" *ngIf=\"\r\n                    resetPasswordForm.get('newpassword').errors && formSubmitted\">\r\n                  <small>New Password is required</small>\r\n                </div>\r\n                <div class=\"p-error block\"\r\n                  *ngIf=\"\r\n                    resetPasswordForm.hasError('newPasswordSame') && formSubmitted && ! resetPasswordForm.get('newpassword').errors\">\r\n                  <small>New Password same as Current Password</small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-2 position-relative\">\r\n                <label for=\"cnfpassword\" aria-describedby=\"cnfpassword\">Confirm Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <div class=\"position-relative\">\r\n                  <input [maxlength]=\"16\" formControlName=\"conformpassword\" #confirmpassword type=\"password\"\r\n                    placeholder=\"Confirm New Password\" name=\"password\" id=\"confirmpassword\" tabindex=\"0\" required\r\n                    pInputText style=\"padding-right: 40px;\" />\r\n                  <em class=\"pi eye-icon\" appPasswordToggle [passwordField]=\"confirmpassword\" aria-hidden=\"true\"></em>\r\n                </div>\r\n                <div *ngIf=\"\r\n                    resetFormcontrols['conformpassword'].hasError('required') &&\r\n                    resetFormcontrols['conformpassword'].touched\r\n                  \" class=\"p-error block\">\r\n                </div>\r\n                <div class=\"p-error block\" *ngIf=\"\r\n                resetPasswordForm.get('conformpassword').errors && formSubmitted\">\r\n                  <small>Confirm Password is required</small>\r\n                </div>\r\n                <div class=\"p-error block\" *ngIf=\"\r\n                  resetPasswordForm.hasError('NoPassswordMatch') && formSubmitted && ! resetPasswordForm.get('conformpassword').errors\r\n                 \">\r\n                  <small>Password does not match</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 mt-2 text-right\">\r\n              <p-button label=\"Cancel\" styleClass=\"px-3 py-1 btn bg-white text-primary btncancel\"\r\n                (click)=\"reset()\"></p-button>\r\n              <p-button label=\"Save\" styleClass=\"px-3 py-1 ml-2\" (click)=\"changePassword()\"></p-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Tab End -->\r\n\r\n        <!-- Theme Customizer Tab -->\r\n        <div class=\"tab-pane fade\" id=\"theme_tab\" role=\"tabpanel\" aria-labelledby=\"v-theme-a\">\r\n          <div class=\"strip_head toggleleft mb-4\">\r\n            <span class=\"report_head font-weight-bold\">Theme Customizer</span>\r\n          </div>\r\n          <div class=\"customizer customizer-styling pt-3\">\r\n            <!-- Skin -->\r\n            <div class=\"customizer-styling-skin skin mb-4\">\r\n              <h6 class=\"font-weight-bold mb-2\">Skin</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center\">\r\n                <div *ngFor=\"let theme of themes\" class=\"custom-control custom-radio mr-4\">\r\n                  <figure [ngClass]=\"selectedTheme === theme.key ? 'active' : ''\">\r\n                    <label role=\"link\" class=\"mb-0 theme-select\" for=\"theme_{{ theme.key }}\">\r\n                      <img src=\"{{ theme.image }}\" class=\"img-fluid\" alt=\"{{ theme.name }}\" />\r\n                    </label>\r\n                    <figcaption>\r\n                      <input type=\"radio\" id=\"theme_{{ theme.key }}\" name=\"{{ theme.name }}\"\r\n                        class=\"custom-control-input layout-name\" [value]=\"theme.key\" [(ngModel)]=\"selectedTheme\"\r\n                        [ngModelOptions]=\"{ standalone: true }\" (click)=\"setTheme(theme.key)\" />\r\n                      <label class=\"custom-control-label mt-2\" for=\"theme_{{ theme.key }}\">{{ theme.name }}</label>\r\n                    </figcaption>\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"customizer-styling-skin d-none mb-3\">\r\n              <h6 class=\"font-weight-bold mb-2\">Font</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center\">\r\n                <div *ngFor=\"let fontSet of fontSetList\" class=\"custom-control custom-radio mr-4\">\r\n                  <figure [ngClass]=\"selectedFont === fontSet.key ? 'active' : ''\">\r\n                    <label for=\"font_{{ fontSet.key }}\" class=\"font-box mb-0 theme-select\"> Aa </label>\r\n                    <figcaption>\r\n                      <input type=\"radio\" id=\"font_{{ fontSet.key }}\" name=\"{{ fontSet.name }}\"\r\n                        class=\"custom-control-input layout-name\" [value]=\"fontSet.key\" [(ngModel)]=\"selectedFont\"\r\n                        [ngModelOptions]=\"{ standalone: true }\" (click)=\"setFont(fontSet.key)\" />\r\n                      <label class=\"custom-control-label mt-2\" for=\"font_{{ fontSet.key }}\">{{ fontSet.name }}</label>\r\n                    </figcaption>\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n\r\n            <div class=\"customizer-styling-skin mb-3\">\r\n              <h6 class=\"font-weight-bold mb-2\">Font Size (<span id=\"rs-bullet\"\r\n                  class=\"rs-label\">{{selectedFont}}</span>)</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center col-lg-4 col-md-4 col-12 p-0\">\r\n                <div class=\"custom-control custom-radio w-100 mr-4\">\r\n                  <div class=\"range-slider\">\r\n                    <input id=\"rs-range-line\" class=\"rs-range\" type=\"range\" #ref value=\"{{selectedFont}}\" min=\"13\"\r\n                      max=\"20\" [ngModelOptions]=\"{ standalone: true }\" [(ngModel)]=\"selectedFont\"\r\n                      (change)=\"setRangeFont(ref.value)\">\r\n                  </div>\r\n                  <div class=\"box-minmax\">\r\n                    <span>13</span><span>20</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button class=\"pull-right mr-2 mb-2 btn btn-primary btncommon\" (click)=\"updateStyling()\">Save\r\n            Changes</button>\r\n        </div>\r\n        <!-- Tab End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", styles: ["@charset \"UTF-8\";.profile .pic-upload{position:relative;display:inline-flex}.profile .pic-upload .file-upload-btn{margin-bottom:0;position:absolute;bottom:5px;right:0px;font-size:var(--font-15)}.profile .right-container p{color:var(--text-dark)}.profile .autosuggest{position:absolute;top:24px;left:15px;right:15px;bottom:auto;transform:translateY(38px);will-change:transform;min-width:10rem;padding:.5rem;margin:.125rem 0 0;font-size:1rem;color:var(--text-dark);text-align:left;list-style:none;background-color:var(--bg-light);background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;z-index:9;max-height:200px;overflow:auto}.profile .autosuggest:empty{display:none}.profile .autosuggest li{cursor:pointer;font-size:13px;line-height:35px;border-bottom:solid 1px var(--table-border)}.profile .autosuggest li:hover{color:var(--text-dark)}.profile .autosuggest li:last-child{border-bottom:none}.profile .nav-pills .nav-link{position:relative;color:#767676;background-color:transparent}.profile .nav-pills .nav-link.active{background-color:transparent;color:var(--primary);font-weight:600}.profile .nav-pills .nav-link.active :before{content:\"chevron_right\";font-family:\"Material Icons\";position:absolute;right:0;left:auto}@media screen and (min-width: 1180px){.profile{height:100%}}@media screen and (min-width: 768px){.profile .container-group{display:flex}.profile .container-group .left-container{border-right:1px solid var(--table-border);height:100%;width:280px}.profile .container-group .right-container{height:100%;width:calc(100% - 280px)}.profile .nav-pills .nav-link.active :before{display:block}}@media screen and (max-width: 767px){.container-group .left-container{width:100%}.container-group .left-container .nav-pills{border-bottom:1px solid var(--table-border)}.container-group .right-container{width:100%}.container-group .right-container .tab-pane .strip_head{text-align:center}.container-group .nav-pills .nav-link.active :before{display:none}}.customizer .custom-checkbox.custom-control,.customizer .custom-radio.custom-control{padding-left:0}.customizer .custom-checkbox.custom-control .theme-select,.customizer .custom-radio.custom-control .theme-select{border:2px solid #ddd;border-radius:7px}.customizer .custom-checkbox.custom-control .active .theme-select,.customizer .custom-radio.custom-control .active .theme-select{border-color:var(--primary)}.customizer .custom-checkbox .custom-control-input:checked~.custom-control-label:before,.customizer .custom-radio .custom-control-input:checked~.custom-control-label:before{content:\"\\f00c\";font-family:\"FontAwesome\",sans-serif;color:var(--hover-text);background-color:var(--btn);border-color:var(--btn);font-size:10px;display:flex;align-items:center;padding:2px}.customizer .custom-checkbox label,.customizer .custom-radio label{cursor:pointer}.customizer .custom-checkbox .font-box,.customizer .custom-radio .font-box{display:flex;justify-content:center;align-items:center;width:150px;height:120px;color:var(--text-dark)}.customizer .custom-checkbox .custom-control-label,.customizer .custom-radio .custom-control-label{position:relative;vertical-align:middle;font-size:var(--base-font-size);line-height:normal;color:var(--text-dark);cursor:pointer;padding-left:25px}.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:after{border-color:var(--btn)}.customizer .custom-checkbox .custom-control-label:before,.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:before,.customizer .custom-radio .custom-control-label:after{background-image:none;width:16px;height:16px;left:0;box-shadow:none;top:0}.customizer hr{border-color:var(--table-border)}.customizer .customizer-header{background:var(--background-color);color:var(--text-dark)}.customizer .customizer-header .customizer-close{position:absolute;right:.6rem;top:.6rem;padding:7px;width:auto;z-index:10;color:var(--text-dark);cursor:pointer}.customizer .customizer-header .customizer-close .material-icon{font-size:1.5rem}.customizer .customizer-header .customizer-close:hover{color:var(--btn)}.customizer h4{font-size:var(--font-15);font-weight:600;color:var(--text-dark)}.customizer h6{font-size:var(--font-14);color:var(--text-dark)}.customizer p{font-size:var(--base-font-size);font-weight:400;color:var(--text-dark)}.customizer .customizer-toggle{background:var(--btn);color:var(--hover-text);box-shadow:-3px 0 8px #22292f1a;border-top-left-radius:6px;border-bottom-left-radius:6px;position:absolute;top:50%;width:38px;height:38px;left:-39px;text-align:center;line-height:40px;border-left:1px solid var(--checkbox-border);cursor:pointer}.customizer .customizer-toggle .fa-cog{font-size:var(--font-15)}.customizer .customizer-toggle:hover{text-decoration:none}.customizer .customizer-styling-skin.skin .custom-control .custom-control-label{position:relative;padding-left:25px}.customizer .custom-control:first-child .font-box{font-size:var(--font-21);font-weight:400}.customizer .custom-control:last-child .font-box{font-size:var(--font-26);font-weight:600}.box-minmax{margin-top:15px;width:100%;display:flex;justify-content:space-between;font-size:14px;color:var(--label-text)}.box-minmax span:first-child{margin-left:4px}.rs-range{margin-top:29px;width:100%;appearance:none;-webkit-appearance:none}.rs-range:focus{outline:none;border:none!important}.rs-range::-webkit-slider-runnable-track{width:100%;height:1px;cursor:pointer;box-shadow:none;background:var(--text-dark);border-radius:0;border:0px solid #010101}.rs-range::-moz-range-track{width:100%;height:1px;cursor:pointer;box-shadow:none;background:var(--btn);border-radius:0;border:0px solid #010101}.rs-range::-webkit-slider-thumb{box-shadow:none;border:0px solid var(--table-border);box-shadow:0 10px 10px #00000040;height:30px;width:20px;border-radius:22px;background:var(--btn);cursor:pointer;appearance:none;-webkit-appearance:none;margin-top:-15px}.rs-range::-moz-range-thumb{box-shadow:none;border:0px solid var(--table-border);box-shadow:0 10px 10px #00000040;height:42px;width:22px;border-radius:22px;background:var(--btn);cursor:pointer;appearance:none;-webkit-appearance:none;margin-top:-20px}.rs-range::-moz-focus-outer{border:0}.rs-label{text-align:center;font-weight:bold;color:var(--label-text);line-height:normal;font-size:14px}.rs-label:after{content:\"px\";font-size:14px;letter-spacing:.07em}.pi.eye-icon{position:absolute;right:20px;top:50%;margin-top:-7.5px;cursor:pointer;font-size:15px}input[type=password]::-ms-reveal,input[type=password]::-ms-clear{display:none}\n"], components: [{ type: i7.AlertComponent, selector: "app-alert" }, { type: i8.InputMask, selector: "p-inputMask", inputs: ["type", "slotChar", "autoClear", "showClear", "style", "inputId", "styleClass", "placeholder", "size", "maxlength", "tabindex", "title", "ariaLabel", "ariaRequired", "disabled", "readonly", "unmask", "name", "required", "characterPattern", "autoFocus", "autocomplete", "mask"], outputs: ["onComplete", "onFocus", "onBlur", "onInput", "onKeydown", "onClear"] }, { type: i9.Checkbox, selector: "p-checkbox", inputs: ["value", "name", "disabled", "binary", "label", "ariaLabelledBy", "ariaLabel", "tabindex", "inputId", "style", "styleClass", "labelStyleClass", "formControl", "checkboxIcon", "readonly", "required", "trueValue", "falseValue"], outputs: ["onChange"] }, { type: i10.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }], directives: [{ type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i11.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i12.InputText, selector: "[pInputText]" }, { type: i13.Ripple, selector: "[pRipple]" }, { type: i2.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { type: i11.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i2.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i14.PasswordToggleDirective, selector: "[appPasswordToggle]", inputs: ["passwordField", "iconForPasswordType", "iconForTextType"] }, { type: i11.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2.RangeValueAccessor, selector: "input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProfileComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'core-profile',
                    templateUrl: './profile.component.html',
                    styleUrls: ['./profile.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.AuthService }, { type: i2.FormBuilder }, { type: i3.HttpService }, { type: i4.ProfileService }, { type: i5.AttachmentsService }, { type: i6.DataStoreService }]; }, propDecorators: { passwordSuccess: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,