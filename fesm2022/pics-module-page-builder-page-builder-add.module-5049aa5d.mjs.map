{"version":3,"file":"pics-module-page-builder-page-builder-add.module-5049aa5d.mjs","sources":["../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/@core/services/common-dropdowns.service.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/basic-info/basic-info.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/basic-info/basic-info.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/@core/services/socket-adapter.server.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/@core/options.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/design-page/design-page.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/design-page/design-page.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/grid-config/grid-config.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/grid-config/grid-config.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/page-builder-add.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/page-builder-add.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/@core/url/data-source-url.config.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/@core/services/data-source.service.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/query-params/JSON.const.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/query-params/query-params.service.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/query-params/query-params.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/query-params/query-params.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/ribbon-tab-config/ribbon-tab-config.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/ribbon-tab-config/ribbon-tab-config.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/routing-config/routing-config.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/routing-config/routing-config.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/search-params/search-params.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/search-params/search-params.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/tab-config/tab-config.component.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/tab-config/tab-config.component.html","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/page-builder-add-routing.module.ts","../../../../projects/pics-module/page-builder/src/lib/pics-pagebuilder/page-builder/page-builder-add/page-builder-add.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CommonUrlConfig } from '../url/auth-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonDropdownsService {\r\n  httpService: any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n\r\n  getDropDownValues(refUrl) {\r\n    return this.httpService.get(CommonUrlConfig.EndPoint.dropDown[refUrl] + '/');\r\n  }\r\n  getDropDownWithoutValues(refUrl) {\r\n    return this.httpService.get(CommonUrlConfig.EndPoint.dropDown[refUrl]);\r\n  }\r\n}\r\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\n\r\n@Component({\r\n  selector: 'app-basic-info',\r\n  templateUrl: './basic-info.component.html',\r\n  styleUrls: ['./basic-info.component.scss']\r\n})\r\nexport class BasicInfoComponent implements OnInit, OnDestroy {\r\n  disableDropdown = false;\r\n  pageTypeList: any;\r\n  formDetails!: UntypedFormGroup;\r\n  id: string | null = '';\r\n  formData: any;\r\n  // url: any;\r\n  layout: any;\r\n  jsonForm: any;\r\n  selectedPageValue!: string;\r\n  selectedPageType = [];\r\n  basicPageInformation: any;\r\n  rev: any;\r\n  pagetype = '';\r\n  service: PageBuilderAddService;\r\n  localstore: LocalService;\r\n  dropdownService: CommonDropdownsService;\r\n  orgSubs: Subscription;\r\n  authService: AuthService;\r\n  orgId: any;\r\n  pageNameChanged = false;\r\n  validationErrors: { [key: string]: string } = {};\r\n  RBACORG: any;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private _storeservice: DataStoreService,\r\n    // private location: Location,\r\n    private _alertService: AlertService\r\n  ) {\r\n    this.service = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.localstore = injector.get<LocalService>(LocalService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.service.currentPageType.subscribe(page => (this.selectedPageType = page && typeof page === \"string\" ? JSON.parse(page) : page));\r\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.loadForm();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.basicPageInformation = this.localstore.getObj('PAGEDESIGN_BASICINFO');\r\n    this.id = this.route.parent.parent.snapshot.paramMap.get('id');\r\n    this.rev = this.route.parent.parent.snapshot.paramMap.get('rev');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n    this.loadDropDowns();\r\n    this.checkDropdownState();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n\r\n  loadForm(): void {\r\n    this.formDetails = this.formBuilder.group({\r\n      pagename: [this.basicPageInformation ? this.basicPageInformation.pagename : '', Validators.required],\r\n      id: [''],\r\n      description: [this.basicPageInformation ? this.basicPageInformation.description : '', Validators.required],\r\n      pagetype: [this.basicPageInformation ? this.basicPageInformation.pagetype : '', Validators.required],\r\n      organizationid: [this.orgId, Validators.required], // this.auth.getOrgID()\r\n      modulekey: [''],\r\n      submodulekey: ['']\r\n    });\r\n    this.checkDropdownState();\r\n  }\r\n\r\n  checkDropdownState(): void {\r\n    this.disableDropdown = !!this.id;\r\n    const pagetypeControl = this.formDetails.get('pagetype');\r\n    if (this.disableDropdown) {\r\n      pagetypeControl.disable();\r\n    } else {\r\n      pagetypeControl.enable();\r\n    }\r\n  }\r\n  get detailsFormControl() {\r\n    return this.formDetails.controls;\r\n  }\r\n\r\n  onInput(event: Event, fieldtype: any, label: any, required: boolean) {\r\n    const error = AppConstants.onInput(event, fieldtype, label, required);\r\n    if (error && typeof error === 'string') {\r\n      this.validationErrors[label] = error;\r\n    } else {\r\n      delete this.validationErrors[label];\r\n    }\r\n  }\r\n\r\n  selectedPage(page) {\r\n    const selectedPage = this.pageTypeList.filter(a => a.lookupkey === page && a);\r\n    this.localstore.setObj('SELECTED_PAGE', selectedPage);\r\n    this.service.setPageType(selectedPage);\r\n    this.getBacisInfo();\r\n  }\r\n\r\n  loadDropDowns(): void {\r\n    this.dropdownService.getDropDownValues('page').subscribe(result => {\r\n      this.pageTypeList = result['data'];\r\n      this.getBasicDetailsbyId();\r\n    });\r\n  }\r\n\r\n  getBasicDetailsbyId() {\r\n    if (this.id) {\r\n      this.service.getBasicDetailsbyId(this.id).subscribe(result => {\r\n        this.formData = result['data'];\r\n        this.formDetails.patchValue({\r\n          pagename: this.formData.pagename,\r\n          description: this.formData.description,\r\n          pagetype: this.formData.pageDetails.pagetype\r\n        });\r\n        if (this.formData.pageDetails.pagetype) {\r\n          this.selectedPage(this.formData.pageDetails.pagetype);\r\n        }\r\n        this.service.setFormData(this.formData);\r\n        this.layout = this.formData && this.formData.pageDetails.layouttype ? this.formData.pageDetails.layouttype : '';\r\n        this.jsonForm = this.formData.templatejson ? JSON.parse(this.formData.templatejson) : [];\r\n        setTimeout(() => {\r\n          this.filterPageList();\r\n        }, 100);\r\n        this.getBacisInfo();\r\n      });\r\n    } else {\r\n      this.jsonForm = {\r\n        components: []\r\n      };\r\n    }\r\n  }\r\n\r\n  filterPageList() {\r\n    if (this.pageTypeList && this.pageTypeList.length) {\r\n      const dName = this.pageTypeList.filter(key => key.refkey === this.formData.pagetype);\r\n      if (dName.length) {\r\n        this.setTooltip(dName[0]['displayvalue']);\r\n      }\r\n    }\r\n  }\r\n\r\n  setTooltip(displayValue) {\r\n    this.selectedPageValue = displayValue;\r\n  }\r\n  getBacisInfo() {\r\n    if (!this.formDetails.value.pagetype) {\r\n      this.formDetails.value.pagetype = this.formDetails.controls['pagetype'].value;\r\n    }\r\n    this.localstore.setObj('PAGEDESIGN_BASICINFO', this.formDetails.value);\r\n  }\r\n  navigateToNextPage(): void {\r\n    this.getBacisInfo();\r\n    const validation = this.validationPage();\r\n    if (validation) {\r\n      if (!this.id) {\r\n        // Call the API only in \"add\" mode\r\n        this.service\r\n          .pageAlertChecking(this.formDetails.value.pagename, this.formDetails.value.organizationid)\r\n          .subscribe(\r\n            _res => {\r\n              const data = this.formDetails.getRawValue();\r\n              this.service.setFormData(data);\r\n              this.routeToNextPage();\r\n            },\r\n            error => {\r\n              this.pageNameChanged = false;\r\n              this._alertService.error(error.error.message);\r\n            }\r\n          );\r\n      } else {\r\n        // In \"edit\" mode\r\n        if (this.formData) {\r\n          // Check if the page name has changed\r\n          if (this.formDetails.value.pagename !== this.formData.pagename) {\r\n            // If page name changed, call API\r\n            this.service\r\n              .pageAlertChecking(this.formDetails.value.pagename, this.formDetails.value.organizationid)\r\n              .subscribe(\r\n                _res => {\r\n                  const data = this.formDetails.getRawValue();\r\n                  this.service.setBasicData(data);\r\n                  this.routeToNextPage();\r\n                },\r\n                error => {\r\n                  this.pageNameChanged = false;\r\n                  this._alertService.error(error.error.message);\r\n                }\r\n              );\r\n          } else {\r\n            // If page name is same, directly set form data and navigate to the next page\r\n            this.service.setBasicData(this.formDetails.getRawValue());\r\n            this.routeToNextPage();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this._alertService.error('Please fill all mandatory fields');\r\n    }\r\n  }\r\n\r\n  routeToNextPage() {\r\n    this._router.navigate([`../${this.service.authorisedTabs[1].routerLink}`], { relativeTo: this.route });\r\n  }\r\n\r\n  goBack() {\r\n    this.service.returnToList();\r\n  }\r\n  validationPage(): any {\r\n    if (!this.formDetails.value.pagename || !this.formDetails.value.pagetype || !this.formDetails.value.description) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  pageNameFormat() {\r\n    const pagenameControl = this.formDetails.get('pagename');\r\n    if (pagenameControl.value) {\r\n      pagenameControl.setValue(\r\n        pagenameControl.value\r\n          .split(' ')\r\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n          .join(' ')\r\n      );\r\n    }\r\n  }\r\n\r\n  onPageNameInput(event: KeyboardEvent) {\r\n    const input = event.target as HTMLInputElement;\r\n    const startPosition = input.selectionStart;\r\n    const endPosition = input.selectionEnd;\r\n    const pagenameControl = this.formDetails.get('pagename');\r\n    if (pagenameControl.value) {\r\n      const newValue = pagenameControl.value\r\n        .split(' ')\r\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join(' ');\r\n      pagenameControl.patchValue(newValue, { emitEvent: false });\r\n      // Restore cursor position\r\n      input.setSelectionRange(startPosition, endPosition);\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-design-basic-info\">\r\n  <div class=\"page-design-basic-info\">\r\n    <p-card styleClass=\"rbac-card w-100 mb-2\" [formGroup]=\"formDetails\">\r\n      <div class=\"strip_head page-designer toggleleft\">\r\n        <span class=\"report_head font-weight-bold\">Basic Page Information</span>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n          <label for=\"pname\" class=\"referral-form-labels\"\r\n            >Page Name\r\n            <span class=\"requiredfield text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            id=\"pname\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Page Name\"\r\n            aria-describedby=\"pname\"\r\n            formControlName=\"pagename\"\r\n            fieldKey=\"PAG_DES_BASIC_PAG_INFO_PAGE_NAME\"\r\n            (keyup)=\"onPageNameInput($event)\"\r\n            pInputText\r\n            (input)=\"getBacisInfo()\"\r\n            (input)=\"onInput($event, 'name', 'Page Name', true)\"  />\r\n            <div *ngIf=\"validationErrors['Page Name']\" class=\"p-error block mt-1\">{{validationErrors['Page Name']}}</div>\r\n\r\n          <div *ngIf=\"!validationErrors['Page Name'] && detailsFormControl['pagename'].errors && detailsFormControl['pagename'].touched\">\r\n            <div class=\"p-error block mt-1\">Page Name is required </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n          <label for=\"pagetype\" class=\"referral-form-labels\"\r\n            >Page Type\r\n            <span class=\"requiredfield text-danger\">*</span>\r\n            <em class=\"pi pi-info-circle\"\r\n              matTooltip=\"Page Type cannot be changed after saving.\"\r\n              matTooltipPosition=\"right\"\r\n              matTooltipClass=\"custom-tooltip-color\"\r\n              aria-label=\"Information tooltip\">\r\n            </em>\r\n          </label>\r\n          <p-dropdown\r\n            [options]=\"pageTypeList\"\r\n            placeholder=\"Select Page Type\"\r\n            id=\"pagetype\"\r\n            optionLabel=\"lookupvalue\"\r\n            optionValue=\"lookupkey\"\r\n            formControlName=\"pagetype\"\r\n            fieldKey=\"PAG_DES_BASIC_PAG_INFO_PAGE_TYPE\"\r\n            (onChange)=\"selectedPage($event.value)\"\r\n            [ngClass]=\"{'disabled-dropdown': disableDropdown}\">\r\n          </p-dropdown>\r\n          <div *ngIf=\"detailsFormControl['pagetype'].errors && detailsFormControl['pagetype'].touched\">\r\n            <div class=\"p-error block mt-1\">Page Type is required </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-col-12\">\r\n          <label for=\"description\" class=\"referral-form-labels\"\r\n            >Description\r\n            <span class=\"requiredfield text-danger\">*</span>\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            placeholder=\"Enter Description\"\r\n            formControlName=\"description\"\r\n            aria-describedby=\"description\"\r\n            fieldKey=\"PAG_DES_BASIC_PAG_INFO_DESCRYPTION\"\r\n            (input)=\"getBacisInfo()\"\r\n            (input)=\"onInput($event, 'description', 'Description', true)\"\r\n            pInputTextarea>\r\n          </textarea>\r\n          <div *ngIf=\"validationErrors['Description']\" class=\"p-error block mt-1\">{{validationErrors['Description']}}</div>\r\n\r\n          <div *ngIf=\"!validationErrors['Description'] && detailsFormControl['description'].errors && detailsFormControl['description'].touched\">\r\n            <div class=\"p-error block mt-1\">Description is required </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </p-card>\r\n    <div class=\"formicon\">\r\n      <button\r\n        class=\"pull-right mb-2 btn btn-primary btncommon\"\r\n        fieldKey=\"PAG_DES_BASIC_PAG_INFO_NEXT\"\r\n        (click)=\"navigateToNextPage()\">\r\n        Next\r\n      </button>\r\n      <button class=\"pull-right mb-2 mr-2 btn btn-cancel\" fieldKey=\"PAG_DES_BASIC_PAG_INFO_CANCEL\" (click)=\"goBack()\">\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { io, Socket } from 'socket.io-client';\r\n// import { LocalService } from '../services/local.service';\r\n// import { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { LocalService } from './local.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketAdapterService {\r\n  private socketOption = {\r\n    query: null,\r\n    transports: ['websocket'],\r\n    reconnection: true,\r\n    reconnectionDelay: 1000,\r\n    reconnectionDelayMax: 5000,\r\n    reconnectionAttempts: 20\r\n    // agent: false,\r\n    // upgrade: false,\r\n    // rejectUnauthorized: false,\r\n    // secure: true,\r\n    // pingTimeout: 60000,\r\n    // autoConnect: true\r\n  };\r\n  // private url = environment.chatServer;\r\n  public socket: Socket;\r\n\r\n  constructor(public router: Router, public localstorage: LocalService) {\r\n    console.log('Constructing Socket IO');\r\n    this.router.events.subscribe(() => {\r\n      const user = this.localstorage.getObj('user');\r\n      if (user && this.socketOption.query == null) {\r\n        this.socketOption = {\r\n          ...this.socketOption,\r\n          query: {\r\n            userId: user?.id\r\n          }\r\n        };\r\n        // this.socket = io(this.url, this.socketOption);\r\n        console.log(this.socket);\r\n      }\r\n    });\r\n  }\r\n\r\n  joinRoom(roomData: any) {\r\n    console.log('Socket joining room : ', roomData);\r\n    this.socket.emit('joinRoom', roomData);\r\n  }\r\n\r\n  leaveRoom(roomData: any) {\r\n    console.log('Socket leaving room: ', roomData);\r\n    this.socket.emit('leaveRoom', roomData);\r\n  }\r\n  onConnect(): Observable<any> {\r\n    console.log('Socket On Connect');\r\n    return new Observable(observer => {\r\n      this.socket.on('connect', () => {\r\n        console.log('Socket new connect...');\r\n        observer.next('connectd');\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n  onReConnect(): Observable<any> {\r\n    return new Observable(observer => {\r\n      this.socket.on('reconnect', () => {\r\n        observer.next('connectd');\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n  receivePageData(): Observable<any> {\r\n    return new Observable(observer => {\r\n      this.socket.on('receive_page_data', (data: any) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n  onlineEditPageUsers(): Observable<any> {\r\n    return new Observable(observer => {\r\n      this.socket.on('online_edit_page_user', (data: any) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n  }\r\n\r\n  sendPageData(payload) {\r\n    console.log('Sending page data');\r\n    console.log(payload);\r\n    this.socket.emit('send_page_data', payload);\r\n  }\r\n\r\n  // sendMessage(param: any) {\r\n  //   this.socket.emit('send_message', param);\r\n  // }\r\n\r\n  // connect() {\r\n  //   console.log('Socket Connecting...', this.url, this.socketOption);\r\n  //   this.socket = io(this.url, this.socketOption);\r\n  //   console.log('After Socket Connecting...');\r\n\r\n  //   console.log(this.socket);\r\n  //   return this.socket;\r\n  // }\r\n\r\n  // disconnect() {\r\n  //   if (!!this.socket) {\r\n  //     this.socket.disconnect();\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  /*chat Socket starts*/\r\n\r\n  // sendPrivateMessage(message) {\r\n  //   this.socket.emit('send-private-message', message);\r\n  // }\r\n\r\n  // getUserSession(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('get-user-sessions', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'GSS');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // recievePrivateMessage(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('receive-private-message', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'RPM');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // privateMessageAcknowledge(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('personal-message-ack', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'PMA');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // getUnreadMessages(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('get-unread-messages', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'GUM');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // readMessages(sender_id: number, receiver_id: number) {\r\n  //   this.socket.emit('read-messages', { sender_id, receiver_id });\r\n  // }\r\n\r\n  // onType(param: any) {\r\n  //   this.socket.emit('OnTyping', param);\r\n  // }\r\n\r\n  // isTyping(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('isTyping', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'IT');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // onReceiverReadsMessages(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('receiver-read-messages', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       sessionStorage.setItem('socketErrorKey', 'ORRM');\r\n  //       // this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  /*chat Socket ends*/\r\n\r\n\r\n\r\n  // onDisconnect() {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('disconnected', () => {\r\n  //       observer.next('disconnected');\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // onMessage(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('receive_message', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // onRoomNotification(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('room_notification', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // roomlistTyping(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('roomlist_typing', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // offlineUser(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('offline_user', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // onLine(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('online_user', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // updateStatus(status: any) {\r\n  //   console.log('read_status : ', status);\r\n  //   this.socket.emit('read_status', status);\r\n  // }\r\n  // messageStatus(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('recive_read_status', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n  // onUserRemovedFromGroup(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('remove_room', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  // onRenameGroup(): Observable<any> {\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('rename_group', (data: any) => {\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n  // receivedNotification(): Observable<any> {\r\n  //   console.log('isConnected', this.socket.connected);\r\n  //   console.log('Connection established in adapter...');\r\n\r\n  //   if (!this.socket.connected) {\r\n  //     this.connect();\r\n  //   }\r\n  //   return new Observable(observer => {\r\n  //     this.socket.on('receive_message_data', (data: any) => {\r\n  //       console.log('Data received in adapter...', data);\r\n  //       observer.next(data);\r\n  //     });\r\n  //     return () => {\r\n  //       this.socket.disconnect();\r\n  //     };\r\n  //   });\r\n  // }\r\n}\r\n","export const options = {\r\n  builder: {\r\n    premium: false,\r\n    basic: {\r\n      title: 'Basic',\r\n      weight: 0,\r\n      components: {\r\n        textfield: true,\r\n        textarea: true,\r\n        fileupload: false,\r\n        myrating: false,\r\n        globalsearch:  false,\r\n        picsselect: false,\r\n      }\r\n    },\r\n    advanced: {\r\n      title: 'Advanced',\r\n      weight: 0,\r\n      components: {\r\n        email: true,\r\n        url: false,\r\n        tags: false,\r\n        address: false,\r\n        survey: false,\r\n        currency: true,\r\n        signature: true,\r\n        day: false,\r\n        time: false,\r\n        DateFieldComponent: false,\r\n        phoneNumber: true,\r\n        datetime: true\r\n      }\r\n    },\r\n    layout: {\r\n      title: 'Layout',\r\n      weight: 0,\r\n      components: {\r\n        panel: true,\r\n        table: true,\r\n        tabs: true,\r\n        well: true,\r\n        columns: true,\r\n        fieldset: true,\r\n        content: true,\r\n        htmlelement: true\r\n      }\r\n    },\r\n    data: {\r\n      title: 'Data',\r\n      weight: '5',\r\n      components: {\r\n        datagrid: true\r\n      }\r\n    }\r\n  },\r\n  language: 'en'\r\n};\r\n","import { Clipboard } from '@angular/cdk/clipboard';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Components, Utils } from 'formiojs';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../../@core/services/page-builder.service';\r\nimport { SocketAdapterService } from '../../../@core/services/socket-adapter.server';\r\nimport displayType from '../@core/displayType.json';\r\nimport gridConfig from '../@core/gridConfig.json';\r\nimport { options } from '../@core/options';\r\n\r\n@Component({\r\n  selector: 'app-design-page',\r\n  templateUrl: './design-page.component.html',\r\n  styleUrls: ['./design-page.component.scss']\r\n})\r\nexport class DesignPageComponent implements OnInit, OnDestroy {\r\n  manualForm: UntypedFormGroup;\r\n  refreshForm: EventEmitter<any>;\r\n  formData: any;\r\n  public form: any;\r\n  isValidFormDetails: boolean;\r\n  id = '';\r\n  updatedfrom: any;\r\n  @ViewChild('json', { static: true }) jsonElement?: ElementRef;\r\n  @ViewChild('code', { static: true }) codeElement?: ElementRef;\r\n  public options: any;\r\n  changedFormData: any;\r\n  @Input() basicInfo: any;\r\n  assetList: any;\r\n  allFields: any[] = [];\r\n  jsonForm: any;\r\n  logedInUser: any;\r\n  isEditPage = false;\r\n  @ViewChild('callPopup') callPopup: TemplateRef<any>;\r\n  @Output() updateNotification = new EventEmitter<string>();\r\n  @Output() onlineUserList = new EventEmitter<string>();\r\n  private dialogRef: MatDialogRef<TemplateRef<any>>;\r\n  selectedPage: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  socketAdapter: SocketAdapterService;\r\n  localstorage: LocalService;\r\n  basicPageInformation: any;\r\n  pageBuilderService: PageBuilderService;\r\n  createDynamicPage: boolean;\r\n  gridConfig: any;\r\n  displayType: any;\r\n  selectedDisplayType: any;\r\n  clipboard: Clipboard;\r\n  environment: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private alert: AlertService,\r\n    public dialog: MatDialog,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.socketAdapter = injector.get<SocketAdapterService>(SocketAdapterService);\r\n    this.clipboard = injector.get<Clipboard>(Clipboard);\r\n    this.localstorage = injector.get<LocalService>(LocalService);\r\n    this.pageBuilderAddService.currentPageType.subscribe(page => (this.selectedPage = page));\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.createDynamicPage = this.localstorage.getObj('CREATE PAGE') || false;\r\n    this.gridConfig = gridConfig;\r\n    this.displayType = displayType;\r\n    this.options = options;\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.environment = res['RBACORG'].environment;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.selectedPage);\r\n    this.checkBasicInfo();\r\n    this.logedInUser = this.localstorage.getObj('user');\r\n    // make a replica of Formio column component (column component is stock component in layout group of formio)\r\n    const customDateComponent = Components.components.columns;\r\n    // use the customDateComponent created earlier to inherit the formio component prototype properties\r\n    function dateComponentRef(component, options, data) {\r\n      customDateComponent.prototype.constructor.call(this, component, options, data);\r\n    }\r\n\r\n    dateComponentRef.prototype = Object.create(customDateComponent.prototype);\r\n\r\n    // assign the schema (configuration) to the dateComponentRef with the JSON schema of custom component (date range component in this case)\r\n    dateComponentRef.schema = function () {\r\n      return customDateComponent.schema({\r\n        key: 'dateRange',\r\n        type: 'columns',\r\n        input: false,\r\n        tableView: false,\r\n        columns: [\r\n          {\r\n            components: [\r\n              {\r\n                label: 'Columns',\r\n                columns: [\r\n                  {\r\n                    components: [\r\n                      {\r\n                        label: 'Start Date',\r\n                        format: 'MM/dd/yyyy',\r\n                        customClass: 'pr-0',\r\n                        tableView: false,\r\n                        datePicker: {\r\n                          disableWeekends: false,\r\n                          disableWeekdays: false,\r\n                          minDate: 'moment(new Date()).format(\\'MM/DD/YYYY\\');'\r\n                        },\r\n                        enableTime: false,\r\n                        defaultDate: 'moment()',\r\n                        validate: {\r\n                          required: true\r\n                        },\r\n                        enableMinDateInput: true,\r\n                        enableMaxDateInput: false,\r\n                        key: 'start_date',\r\n                        logic: [\r\n                          {\r\n                            name: 'check if radio is no',\r\n                            trigger: {\r\n                              type: 'simple',\r\n                              simple: {\r\n                                show: true,\r\n                                when: 'radio',\r\n                                eq: 'no'\r\n                              }\r\n                            },\r\n                            actions: [\r\n                              {\r\n                                name: 'reset',\r\n                                type: 'value',\r\n                                value:\r\n                                  '  if(moment(data.start_date).isAfter(moment(), \\'day\\')) {\\r\\n    value = moment();\\r\\n  } else {\\r\\n      value = data.start_date\\r\\n  }'\r\n                              }\r\n                            ]\r\n                          }\r\n                        ],\r\n                        attributes: {\r\n                          id: 'startDate'\r\n                        },\r\n                        type: 'datetime',\r\n                        input: true,\r\n                        widget: {\r\n                          type: 'calendar',\r\n                          displayInTimezone: 'viewer',\r\n                          locale: 'en',\r\n                          useLocaleSettings: false,\r\n                          allowInput: true,\r\n                          mode: 'single',\r\n                          enableTime: false,\r\n                          noCalendar: false,\r\n                          format: 'MM/dd/yyyy',\r\n                          hourIncrement: 1,\r\n                          minuteIncrement: 1,\r\n                          time_24hr: false,\r\n                          minDate: 'moment(new Date()).format(\\'MM/DD/YYYY\\');',\r\n                          disableWeekends: false,\r\n                          disableWeekdays: false,\r\n                          maxDate: null\r\n                        }\r\n                      }\r\n                    ],\r\n                    width: 9,\r\n                    offset: 0,\r\n                    push: 0,\r\n                    pull: 0,\r\n                    size: 'md',\r\n                    currentWidth: 9\r\n                  },\r\n                  {\r\n                    components: [\r\n                      {\r\n                        label: '&#160',\r\n                        action: 'custom',\r\n                        showValidations: false,\r\n                        leftIcon: 'fa fa-clipboard',\r\n                        customClass: 'mt-3 formio-icon-btn pr-add',\r\n                        tableView: false,\r\n                        key: 'copy',\r\n                        conditional: {\r\n                          show: false,\r\n                          when: 'action',\r\n                          eq: 'view'\r\n                        },\r\n                        type: 'button',\r\n                        custom:\r\n                          'navigator.clipboard.writeText(data.start_date? (moment(data.start_date).format(\\'MM/DD/YYYY\\')) : \\'\\');',\r\n                        input: true\r\n                      }\r\n                    ],\r\n                    width: 3,\r\n                    offset: 0,\r\n                    push: 0,\r\n                    pull: 0,\r\n                    size: 'md',\r\n                    currentWidth: 3\r\n                  }\r\n                ],\r\n                key: 'columns',\r\n                type: 'columns',\r\n                input: false,\r\n                tableView: false\r\n              }\r\n            ],\r\n            width: 4,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            size: 'md',\r\n            currentWidth: 4\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                label: 'Select Range',\r\n                widget: 'choicesjs',\r\n                tableView: true,\r\n                data: {\r\n                  values: [\r\n                    {\r\n                      label: '0',\r\n                      value: '0'\r\n                    },\r\n                    {\r\n                      label: '30',\r\n                      value: '30'\r\n                    },\r\n                    {\r\n                      label: '45',\r\n                      value: '45'\r\n                    },\r\n                    {\r\n                      label: '60',\r\n                      value: '60'\r\n                    },\r\n                    {\r\n                      label: '90',\r\n                      value: '90'\r\n                    },\r\n                    {\r\n                      label: '120',\r\n                      value: '120'\r\n                    }\r\n                  ]\r\n                },\r\n                calculateValue:\r\n                  'if (data.start_date && data.end_date) {\\r\\n    const dateDiff = parseInt(moment(data.end_date).diff(moment(data.start_date), \\'days\\'));\\r\\n    if (dateDiff >= 0) {\\r\\n        switch (dateDiff) {\\r\\n            case 0: \\r\\n                value = 0;\\r\\n                break;\\r\\n            case 30:\\r\\n                value = 30;\\r\\n                break;\\r\\n            case 45: \\r\\n                value = 45;\\r\\n                break;\\r\\n            case 60: \\r\\n                value = 60;\\r\\n                break;\\r\\n            case 90: \\r\\n                value = 90;\\r\\n                break;\\r\\n            case 120: value = 120;\\r\\n                break;\\r\\n        }\\r\\n    }\\r\\n}',\r\n                allowCalculateOverride: true,\r\n                key: 'selectRange',\r\n                conditional: {\r\n                  show: false,\r\n                  when: 'action',\r\n                  eq: 'view'\r\n                },\r\n                logic: [\r\n                  {\r\n                    name: 'check for disable condn',\r\n                    trigger: {\r\n                      type: 'javascript',\r\n                      javascript:\r\n                        'result = ((moment(data.start_date).isAfter(moment(new Date()), \\'day\\')) && !(data.radio === \\'yes\\'));'\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'disable field',\r\n                        type: 'property',\r\n                        property: {\r\n                          label: 'Disabled',\r\n                          value: 'disabled',\r\n                          type: 'boolean'\r\n                        },\r\n                        state: true\r\n                      }\r\n                    ]\r\n                  }\r\n                ],\r\n                attributes: {\r\n                  id: 'range'\r\n                },\r\n                type: 'select',\r\n                input: true,\r\n                hideOnChildrenHidden: false\r\n              }\r\n            ],\r\n            width: 4,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            size: 'md',\r\n            currentWidth: 4\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                label: 'Columns',\r\n                columns: [\r\n                  {\r\n                    components: [\r\n                      {\r\n                        label: 'End Date',\r\n                        format: 'MM/dd/yyyy',\r\n                        customClass: 'pr-0',\r\n                        tableView: false,\r\n                        datePicker: {\r\n                          disableWeekends: false,\r\n                          disableWeekdays: false,\r\n                          minDate: 'moment(new Date()).format(\\'MM/DD/YYYY\\');'\r\n                        },\r\n                        enableTime: false,\r\n                        calculateValue:\r\n                          'if (data.selectRange || data.selectRange === 0) {  \\r\\n    let result = new Date(data.start_date);\\r\\n    result.setDate(new Date(result).getDate() + data.selectRange); \\r\\n    if (result) {\\r\\n        value = result;\\r\\n    }\\r\\n} else {\\r\\n       value = value;\\r\\n}\\r\\n',\r\n                        validate: {\r\n                          custom:\r\n                            'if (moment(data.start_date).isValid() && moment(data.end_date).isValid()) {\\r\\n    valid =  moment(data.start_date).isSameOrBefore(moment(data.end_date), \\'day\\') ? true : \"End date must be greater than start date\"\\r\\n}\\r\\n'\r\n                        },\r\n                        enableMinDateInput: true,\r\n                        enableMaxDateInput: false,\r\n                        key: 'end_date',\r\n                        logic: [\r\n                          {\r\n                            name: 'disable end date',\r\n                            trigger: {\r\n                              type: 'javascript',\r\n                              javascript: 'return data.selectRange > 0 || data.selectRange === 0'\r\n                            },\r\n                            actions: [\r\n                              {\r\n                                name: 'disable end date field',\r\n                                type: 'property',\r\n                                property: {\r\n                                  label: 'Disabled',\r\n                                  value: 'disabled',\r\n                                  type: 'boolean'\r\n                                },\r\n                                state: true\r\n                              }\r\n                            ]\r\n                          },\r\n                          {\r\n                            name: 'disable',\r\n                            trigger: {\r\n                              type: 'javascript',\r\n                              javascript:\r\n                                'result = ((moment(data.start_date).isAfter(moment(new Date()), \\'day\\')) && !(data.radio === \\'yes\\'));'\r\n                            },\r\n                            actions: [\r\n                              {\r\n                                name: 'disable',\r\n                                type: 'property',\r\n                                property: {\r\n                                  label: 'Disabled',\r\n                                  value: 'disabled',\r\n                                  type: 'boolean'\r\n                                },\r\n                                state: true\r\n                              }\r\n                            ]\r\n                          }\r\n                        ],\r\n                        attributes: {\r\n                          id: 'endDate'\r\n                        },\r\n                        type: 'datetime',\r\n                        input: true,\r\n                        widget: {\r\n                          type: 'calendar',\r\n                          displayInTimezone: 'viewer',\r\n                          locale: 'en',\r\n                          useLocaleSettings: false,\r\n                          allowInput: true,\r\n                          mode: 'single',\r\n                          enableTime: false,\r\n                          noCalendar: false,\r\n                          format: 'MM/dd/yyyy',\r\n                          hourIncrement: 1,\r\n                          minuteIncrement: 1,\r\n                          time_24hr: false,\r\n                          minDate: 'moment(new Date()).format(\\'MM/DD/YYYY\\');',\r\n                          disableWeekends: false,\r\n                          disableWeekdays: false,\r\n                          maxDate: null\r\n                        },\r\n                        hideOnChildrenHidden: false\r\n                      }\r\n                    ],\r\n                    width: 9,\r\n                    offset: 0,\r\n                    push: 0,\r\n                    pull: 0,\r\n                    size: 'md',\r\n                    currentWidth: 9\r\n                  },\r\n                  {\r\n                    components: [\r\n                      {\r\n                        label: '&#160',\r\n                        action: 'custom',\r\n                        showValidations: false,\r\n                        leftIcon: 'fa fa-clipboard',\r\n                        customClass: 'mt-3 formio-icon-btn pr-add',\r\n                        tableView: false,\r\n                        key: 'copy',\r\n                        conditional: {\r\n                          show: false,\r\n                          when: 'action',\r\n                          eq: 'view'\r\n                        },\r\n                        type: 'button',\r\n                        custom:\r\n                          'navigator.clipboard.writeText(data.end_date? (moment(data.end_date).format(\\'MM/DD/YYYY\\')) : \\'\\');',\r\n                        input: true\r\n                      }\r\n                    ],\r\n                    width: 1,\r\n                    offset: 0,\r\n                    push: 0,\r\n                    pull: 0,\r\n                    size: 'md',\r\n                    currentWidth: 1\r\n                  }\r\n                ],\r\n                key: 'columns1',\r\n                type: 'columns',\r\n                input: false,\r\n                tableView: false\r\n              }\r\n            ],\r\n            size: 'md',\r\n            width: 4,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            currentWidth: 4\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                label: 'Do you wish to use a future start date',\r\n                optionsLabelPosition: 'right',\r\n                inline: true,\r\n                hidden: true,\r\n                tableView: false,\r\n                values: [\r\n                  {\r\n                    label: 'Yes',\r\n                    value: 'yes',\r\n                    shortcut: ''\r\n                  },\r\n                  {\r\n                    label: 'No',\r\n                    value: 'no',\r\n                    shortcut: ''\r\n                  }\r\n                ],\r\n                key: 'radio',\r\n                redrawOn: 'start_date',\r\n                clearOnHide: false,\r\n                calculateValue:\r\n                  'if(data.action === \\'edit\\' && moment(data.initialApiDataSnap.start_date).isAfter(moment(), \\'day\\')) {\\r\\n    value = \\'yes\\'\\r\\n    // even hide it permanently\\r\\n}',\r\n                allowCalculateOverride: true,\r\n                validate: {\r\n                  required: true\r\n                },\r\n                logic: [\r\n                  {\r\n                    name: 'check future date',\r\n                    trigger: {\r\n                      type: 'javascript',\r\n                      javascript: 'return moment(data.start_date).isAfter(moment(new Date()), \\'day\\')'\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'hide this',\r\n                        type: 'property',\r\n                        property: {\r\n                          label: 'Hidden',\r\n                          value: 'hidden',\r\n                          type: 'boolean'\r\n                        },\r\n                        state: false\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    name: 'check if radio is yes',\r\n                    trigger: {\r\n                      type: 'javascript',\r\n                      javascript: 'result =  data.radio === \\'yes\\''\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'hide radio',\r\n                        type: 'property',\r\n                        property: {\r\n                          label: 'Hidden',\r\n                          value: 'hidden',\r\n                          type: 'boolean'\r\n                        },\r\n                        state: false\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    name: 'Hide for edit and view',\r\n                    trigger: {\r\n                      type: 'simple',\r\n                      simple: {\r\n                        show: true,\r\n                        when: 'action',\r\n                        eq: 'view'\r\n                      }\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'Hide for edit and view',\r\n                        type: 'property',\r\n                        property: {\r\n                          label: 'Hidden',\r\n                          value: 'hidden',\r\n                          type: 'boolean'\r\n                        },\r\n                        state: true\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    name: 'check action for edit mode',\r\n                    trigger: {\r\n                      type: 'simple',\r\n                      simple: {\r\n                        show: true,\r\n                        when: 'action',\r\n                        eq: 'edit'\r\n                      }\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'set yes as default value',\r\n                        type: 'value',\r\n                        value:\r\n                          '// if (moment(data.start_date).isAfter(moment(), \\'day\\')) {\\r\\n//     value = \\'yes\\';\\r\\n// }'\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    name: 'check for past or current date',\r\n                    trigger: {\r\n                      type: 'javascript',\r\n                      javascript: 'return moment(data.start_date).isSameOrBefore(moment(new Date()), \\'day\\')'\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'reset the radio button',\r\n                        type: 'value',\r\n                        value: 'value = \\'\\';'\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    name: 'check if snap date is future date',\r\n                    trigger: {\r\n                      type: 'javascript',\r\n                      javascript:\r\n                        'if(data.action === \\'edit\\' && moment(data.initialApiDataSnap.start_date).isAfter(moment(), \\'day\\')) {\\r\\n    result = true\\r\\n} else {\\r\\n    result = false\\r\\n}\\r\\nreturn result'\r\n                    },\r\n                    actions: [\r\n                      {\r\n                        name: 'hide radio',\r\n                        type: 'property',\r\n                        property: {\r\n                          label: 'Hidden',\r\n                          value: 'hidden',\r\n                          type: 'boolean'\r\n                        },\r\n                        state: true\r\n                      }\r\n                    ]\r\n                  }\r\n                ],\r\n                type: 'radio',\r\n                input: true\r\n              }\r\n            ],\r\n            size: 'md',\r\n            width: 4,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            currentWidth: 4\r\n          },\r\n          {\r\n            label: 'initialApiDataSnap',\r\n            hidden: true,\r\n            tableView: false,\r\n            clearOnHide: false,\r\n            key: 'initialApiDataSnap',\r\n            type: 'datamap',\r\n            input: true,\r\n            valueComponent: {\r\n              type: 'textfield',\r\n              key: 'value',\r\n              label: 'Value',\r\n              input: true,\r\n              hideLabel: true,\r\n              tableView: true\r\n            },\r\n            size: 'md',\r\n            currentWidth: 6,\r\n            components: [],\r\n            width: 6,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0\r\n          }\r\n        ]\r\n      });\r\n    };\r\n\r\n    // update the builderInfo of custom omponent with basic config (informing formio to place this component in builder view)\r\n    dateComponentRef.builderInfo = {\r\n      title: 'Date Range',\r\n      group: 'advanced',\r\n      icon: 'calendar',\r\n      // weight: 0,\r\n      documentation: '',\r\n      schema: dateComponentRef.schema()\r\n    };\r\n\r\n    // use addComponent method provided by formio to inject the custom component in formio\r\n    Components.addComponent('DateFieldComponent', dateComponentRef);\r\n\r\n    const editForm = Components.components.panel.editForm;\r\n\r\n    const form = editForm();\r\n\r\n    this.id = this.route.parent.snapshot.paramMap.get('id');\r\n\r\n    this.isEditPage = !!this.id;\r\n\r\n    console.log(`Edit Page: ${this.isEditPage}`);\r\n\r\n    Components.components.panel.editForm = function () {\r\n      const tabs1 = Utils.getComponent(form.components, 'tabs', true);\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Gray',\r\n        value: 'gray'\r\n      });\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Light Gray',\r\n        value: 'lightGray'\r\n      });\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Brown',\r\n        value: 'brown'\r\n      });\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Greenish Brown',\r\n        value: 'greenishBrown'\r\n      });\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Marron',\r\n        value: 'marron'\r\n      });\r\n      tabs1.components[0].components[4].data.values.push({\r\n        label: 'Light Blue',\r\n        value: 'lightBlue'\r\n      });\r\n      return form;\r\n    };\r\n\r\n    this.getCurrentFormData();\r\n    this.getCurrentBasicData();\r\n    this.loadForm();\r\n    // SOcket start\r\n\r\n    console.log('Socket Connection');\r\n\r\n    this.socketAdapter.onConnect().subscribe(str => {\r\n      // alert(this.id)\r\n      console.log(str);\r\n      console.log(`Socket ID: ${this.id}`);\r\n      this.socketAdapter.joinRoom({\r\n        roomId: this.id,\r\n        roomType: 'page',\r\n        user: {\r\n          id: this.logedInUser.id,\r\n          firstname: this.logedInUser.firstname,\r\n          lastname: this.logedInUser.lastname\r\n        }\r\n      });\r\n    });\r\n\r\n    this.socketAdapter.receivePageData().subscribe(data => {\r\n      this.form = data.form;\r\n      this.updatedfrom = data.form;\r\n\r\n      const name = `${data.user.firstname} ${data.user.lastname}`;\r\n      // console.log(data.user)\r\n      this.updateNotification.emit(`${name} has made changes`);\r\n      console.log(`Socket: ${name} has made changes`);\r\n    });\r\n\r\n    this.socketAdapter.onReConnect().subscribe(() => {\r\n      this.socketAdapter.joinRoom({\r\n        roomId: this.id,\r\n        // roomId: 'page-1',\r\n        roomType: 'page',\r\n        user: {\r\n          id: this.logedInUser.id,\r\n          firstname: this.logedInUser.firstname,\r\n          lastname: this.logedInUser.lastname\r\n        }\r\n      });\r\n    });\r\n\r\n    this.socketAdapter.onlineEditPageUsers().subscribe(data => {\r\n      // console.log('online', data)\r\n      this.onlineUserList.emit(data);\r\n      console.log(`Socket: Edit Users: ${data.roomId}`);\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  onChangeFormType(event) {\r\n    if (this.formData.templatejson) {\r\n      const templatejson =\r\n        typeof this.formData.templatejson === 'string'\r\n          ? JSON.parse(this.formData.templatejson)\r\n          : this.formData.templatejson;\r\n      templatejson.display = event.value;\r\n      this.selectedDisplayType = event.value;\r\n      this.form = templatejson;\r\n      this.formData.templatejson = JSON.stringify(templatejson);\r\n      this.jsonElement.nativeElement.appendChild(document.createTextNode(JSON.stringify(this.form, null, 4)));\r\n    }\r\n  }\r\n\r\n  getCurrentFormData() {\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      this.isValidFormDetails =\r\n        this.formData.description !== '' && this.formData.pagename !== '' && this.formData.pagetype !== '';\r\n      if (this.formData.templatejson) {\r\n        this.form =\r\n          typeof this.formData.templatejson === 'string'\r\n            ? JSON.parse(this.formData.templatejson)\r\n            : this.formData.templatejson;\r\n        if (!this.form.platformApi) {\r\n          this.form.platformApi = this.environment.apiHost;\r\n        }\r\n        this.selectedDisplayType =\r\n          (this.formData.templatejson && this.formData.templatejson.display) || 'form';\r\n        this.jsonElement.nativeElement.appendChild(document.createTextNode(JSON.stringify(this.form, null, 4)));\r\n      } else {\r\n        this.form = { components: [] };\r\n      }\r\n\r\n      if (this.formData.templateins || this.formData.pageurl) {\r\n        this.patchManualForm();\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrentBasicData() {\r\n    this.pageBuilderAddService.currentBasicData.subscribe((data: any) => {\r\n      if (data) {\r\n        if (this.formData) {\r\n          this.formData.pagename = data.pagename;\r\n          this.formData.pagetype = data.pagetype;\r\n          this.formData.description = data.description;\r\n          this.formData.display = data.display;\r\n          this.form.display = data.display;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('Design Page Destroyed')\r\n    // this.socketAdapter.leaveRoom({\r\n    //   roomId: this.id,\r\n    //   // roomId: 'page-1',\r\n    //   roomType: 'page',\r\n    //   user: {\r\n    //     id: this.logedInUser?.id,\r\n    //     firstname: this.logedInUser?.firstname,\r\n    //     lastname: this.logedInUser?.lastname\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  loadForm(): void {\r\n    this.manualForm = this.formBuilder.group({\r\n      routingURL: ['', Validators.required],\r\n      initParam: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  patchManualForm() {\r\n    this.manualForm.patchValue({\r\n      routingURL: this.formData.pageurl ? this.formData.pageurl : '',\r\n      initParam: this.formData.templateins ? this.formData.templateins : ''\r\n    });\r\n  }\r\n\r\n  resetForm: any = () => {\r\n    this.router.navigate([this.isEditPage ? '../../../list' : '../../list'], { relativeTo: this.route });\r\n  };\r\n\r\n  goToDetailPage(): void {\r\n    this.router.navigate(['../grid-field'], { relativeTo: this.route });\r\n  }\r\n\r\n  closePopup() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  previewForm() {\r\n    this.dialogRef = this.dialog.open(this.callPopup, {\r\n      width: '100%',\r\n      height: '90%'\r\n    });\r\n    this.jsonForm = this.form;\r\n  }\r\n\r\n  formSubmit: any = publish => {\r\n    const formDetails = this.setFormDetails();\r\n    if (formDetails.id) {\r\n      this.patchPage(formDetails, publish);\r\n    } else {\r\n      this.createPage(formDetails, publish);\r\n    }\r\n  };\r\n\r\n  patchPage(formDetails: any, publish) {\r\n    const createPage = this.localstorage.getObj('CREATE PAGE');\r\n    formDetails.published = publish;\r\n    if (createPage) {\r\n      this.formData.id = formDetails.activeVersion.id;\r\n    }\r\n    this.pageBuilderService.updatePageVersion(formDetails.id, formDetails, createPage).subscribe(\r\n      result => {\r\n        if (result?.data && Object.keys(result?.data).length) {\r\n          this.conditionCheckPatch(result, publish);\r\n          this.saveAsset(formDetails?.pageid || formDetails.activeVersion.pageid, formDetails?.id);\r\n          if (publish) {\r\n            this.router.navigate([\r\n              `pages/page-design/versions/${formDetails?.pageid || formDetails.activeVersion.pageid}`\r\n            ]);\r\n            this.alert.success(\r\n              `The Version ${formDetails.version || formDetails.activeVersion.version} is published successfully`\r\n            );\r\n          } else {\r\n            this.alert.success('Page saved successfully');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.alert.error('Error Occured', error);\r\n      }\r\n    );\r\n  }\r\n  conditionCheckPatch(result, publish) {\r\n    const id = result?.data.id ? result?.data.id : '';\r\n    if (!this.id && publish) {\r\n      if (id) {\r\n        this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n      }\r\n    }\r\n  }\r\n\r\n  createPage(formDetails: any, publish) {\r\n    formDetails.published = publish;\r\n    this.pageBuilderAddService.createPage(formDetails).subscribe(\r\n      result => {\r\n        const data = result['data'];\r\n        if (data && Object.keys(data).length) {\r\n          const pageId = data?.id || '';\r\n          if (!this.id) {\r\n            if (pageId) {\r\n              this.router.navigate(['../edit', pageId], { relativeTo: this.route });\r\n            }\r\n          }\r\n          this.saveAsset(pageId, data.activeVersion.id);\r\n          if (publish) {\r\n            this.router.navigate([`pages/page-design/versions/${pageId || formDetails.activeVersion.pageid}`]);\r\n            this.alert.success(\r\n              `The Version ${formDetails.version || data.activeVersion.version} is published successfully`\r\n            );\r\n          } else {\r\n            this.alert.success('Page saved successfully');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.alert.error('Error Occured', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormDetails() {\r\n    const formDetails = this.formData;\r\n    if (this.formData.pagetype === 'MAF') {\r\n      const manualData = this.manualForm.getRawValue();\r\n      formDetails.pageurl = manualData.routingURL;\r\n      formDetails.templateins = manualData.initParam;\r\n    } else if (this.formData.pagetype === 'FFP') {\r\n      const gridConfigForm = this.gridConfig.gridConfigFormArray[0];\r\n      const formComponents = (this.updatedfrom || JSON.parse(formDetails.templatejson)).components.filter(\r\n        a => a.key !== 'submit'\r\n      );\r\n      this.gridConfig.gridConfigFormArray = formComponents.map(a => ({\r\n        ...gridConfigForm,\r\n        header: a.label,\r\n        columnDef: a.key\r\n      }));\r\n      this.gridConfig.gridTitle = this.formData.pagename;\r\n      formDetails.templatejson = JSON.stringify(this.updatedfrom);\r\n      formDetails.gridconfig = JSON.stringify(this.gridConfig);\r\n    } else {\r\n      if (this.updatedfrom) {\r\n        formDetails.templatejson = JSON.stringify(this.updatedfrom);\r\n      } else {\r\n        formDetails.templatejson = this.formData && this.formData.templatejson ? this.formData.templatejson : null;\r\n      }\r\n    }\r\n    if (this.id) {\r\n      formDetails.id = this.id;\r\n    }\r\n    return formDetails;\r\n  }\r\n\r\n  loadFields(componentsData) {\r\n    for (const component of componentsData) {\r\n      if (\r\n        component?.label &&\r\n        component?.label !== 'Columns' &&\r\n        component?.label !== 'Table' &&\r\n        component?.label !== 'Panel'\r\n      ) {\r\n        this.allFields.push({\r\n          label: component?.label,\r\n          field: component?.key\r\n        });\r\n      }\r\n      // check inner data\r\n      if (component?.columns) {\r\n        this.loadFields(component?.columns);\r\n      } else if (component?.components) {\r\n        this.loadFields(component?.components);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.jsonElement.nativeElement.innerHTML = '';\r\n    this.updatedfrom = event.form;\r\n    this.jsonElement.nativeElement.appendChild(document.createTextNode(JSON.stringify(event.form, null, 4)));\r\n\r\n    if (event.type === 'saveComponent' || event.type === 'deleteComponent') {\r\n      this.socketAdapter.sendPageData({\r\n        roomId: this.id,\r\n        // roomId: 'page-1',\r\n        form: this.updatedfrom,\r\n        user: this.logedInUser\r\n      });\r\n    }\r\n  }\r\n\r\n  saveAsset(pageId: number, versionId?: number) {\r\n    this.allFields = [];\r\n    const formDetails = this.formData;\r\n    const fields = JSON.parse(formDetails.templatejson);\r\n    this.loadFields(fields.components);\r\n    const fieldArr = this.allFields.map(item => item.field);\r\n    const assetNameArr = this.assetList && this.assetList.length ? this.assetList.map(item => item.assetname) : [];\r\n    const activeArr = [];\r\n    const inactiveArr = [];\r\n\r\n    if (this.assetList && this.assetList.length) {\r\n      this.assetList.forEach(item => {\r\n        if (fieldArr.includes(item.assetname)) {\r\n          activeArr.push(item);\r\n        } else {\r\n          item.isactive = false;\r\n          inactiveArr.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    const newAssetArr = fieldArr.filter(x => !assetNameArr.includes(x));\r\n    if (newAssetArr.length) {\r\n      this.setActiveAsset(newAssetArr, pageId, versionId).forEach(asset => {\r\n        activeArr.push(asset);\r\n      });\r\n    }\r\n\r\n    const assetData = [...activeArr, ...inactiveArr];\r\n    this.getMenuList(assetData, pageId, versionId);\r\n  }\r\n\r\n  setActiveAsset(newAssetArr, pageId?: number, versionId?: number) {\r\n    const createPage = this.localstorage.getObj('CREATE PAGE');\r\n    const versionid = this.createDynamicPage ? versionId : this.formData.id;\r\n    const activeArr = [];\r\n    newAssetArr.forEach(item => {\r\n      const getFieldData = this.allFields.find(res => res.field === item);\r\n      const data = {\r\n        assetname: item,\r\n        assetpath: this.formData.pagename + '.' + item,\r\n        assettype: '45F',\r\n        dashboardtemplatejson: null,\r\n        description: getFieldData && getFieldData.label ? getFieldData.label : null,\r\n        displayname: getFieldData && getFieldData.label ? getFieldData.label : null,\r\n        icon: null,\r\n        id: null,\r\n        pageid: pageId,\r\n        parentassetid: null,\r\n        url: null,\r\n        isactive: createPage || this.formData.isactive,\r\n        versionid: String(versionid)\r\n      };\r\n      activeArr.push(data);\r\n    });\r\n    return activeArr;\r\n  }\r\n\r\n  getMenuList(assetData, pageId: number, versionId?: number) {\r\n    const pageid = this.createDynamicPage ? pageId : Number(this.formData.pageid);\r\n    const versionid = this.createDynamicPage ? versionId : Number(this.formData.id);\r\n    this.pageBuilderAddService.createAssetByVersion(pageid, versionid, assetData).subscribe(() => {\r\n      // This is intentional\r\n    });\r\n  }\r\n  checkBasicInfo() {\r\n    this.id = this.route.parent.snapshot.paramMap.get('id');\r\n    this.basicPageInformation = this.localstorage.getObj('PAGEDESIGN_BASICINFO');\r\n    if (!this.id) {\r\n      const validation = this.validationPage();\r\n      if (!validation && !this.selectedPage) {\r\n        this.router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this.route });\r\n        return this.alert.error('Please fill in all the required fields.');\r\n      }\r\n    }\r\n  }\r\n  validationPage(): any {\r\n    if (\r\n      !this.basicPageInformation.pagename ||\r\n      !this.basicPageInformation.pagetype ||\r\n      !this.basicPageInformation.description\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  copyText() {\r\n    this.clipboard.copy(this.jsonElement.nativeElement.innerText);\r\n  }\r\n}\r\n","<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Design Page</span>\r\n    </div>\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n      <div class=\"p-field p-col-12 p-md-4\">\r\n        <label for=\"pagetype\" class=\"referral-form-labels\"\r\n          >Display Type\r\n          <span class=\"requiredfield text-danger\">*</span>\r\n        </label>\r\n        <p-dropdown\r\n          [options]=\"displayType\"\r\n          placeholder=\"Select Form Type\"\r\n          id=\"pagetype\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"value\"\r\n          [(ngModel)]=\"selectedDisplayType\"\r\n          (onChange)=\"onChangeFormType($event)\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-12\">\r\n        <form-builder [form]=\"form\" (change)=\"onChange($event)\" [options]=\"options\"></form-builder>\r\n      </div>\r\n      <div class=\"col-12 text-right\">\r\n        <button\r\n          class=\"pull-right mb-2 btn btn-primary btncommon\"\r\n          *showField='\"PAG_DES_DES_PAG_PREVIEW\"'\r\n          (click)=\"previewForm()\">\r\n          Preview\r\n        </button>\r\n        <button class=\"pull-right mb-2 mr-2 btn btn-cancel\" *showField='\"PAG_DES_DES_PAG_CANCEL\"' (click)=\"resetForm()\">\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n          *showField='\"PAG_DES_DES_PAG_PREVIOUS\"'\r\n          (click)=\"goToDetailPage()\">\r\n          Previous\r\n        </button>\r\n        <button\r\n          class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n          [disabled]=\"!isValidFormDetails\"\r\n          *showField='\"PAG_DES_DES_PAG_PUBLISH\"'\r\n          (click)=\"formSubmit(true)\">\r\n          Publish\r\n        </button>\r\n        <button\r\n          class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n          [disabled]=\"!isValidFormDetails\"\r\n          *showField='\"PAG_DES_DES_PAG_SAVE\"'\r\n          (click)=\"formSubmit(false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-2\" *ngIf=\"formData.pagetype === 'MAF'\">\r\n      <form [formGroup]=\"manualForm\" autocomplete=\"off\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>URL For Routing</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                matInput\r\n                formControlName=\"routingURL\"\r\n                appTitleCase\r\n                placeholder=\"URL For Routing\"\r\n                required />\r\n              <mat-error class=\"firstname-error\" *ngIf=\"manualForm.controls['routingURL'].invalid\">\r\n                Please enter URL For Routing</mat-error\r\n              >\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <mat-form-field class=\"\">\r\n              <mat-label>Init Parameter</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                matInput\r\n                formControlName=\"initParam\"\r\n                appTitleCase\r\n                placeholder=\"Init Parameter\"\r\n                required />\r\n              <mat-error class=\"firstname-error\" *ngIf=\"manualForm.controls['initParam'].invalid\">\r\n                Please enter Init Parameter</mat-error\r\n              >\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <ng-template #callPopup>\r\n      <h2 matDialogTitle>Preview</h2>\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <formio [form]=\"jsonForm\"></formio>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"pull-right\">\r\n        <button (click)=\"closePopup()\" class=\"btn btn-cancel mr-2 mb-2\">Close</button>\r\n        <!-- btn btn-sec -->\r\n      </div>\r\n    </ng-template>\r\n    <div class=\"mt-3\">\r\n      <h6 class=\"text-left\">As JSON Schema</h6>\r\n      <div class=\"menuIcons\">\r\n        <span class=\"material-symbols-outlined\" role=\"button\" (click)=\"copyText()\" title=\"Copy JSON Schema\"> content_copy </span>\r\n      </div>\r\n      <div class=\"well jsonviewer p-3\">\r\n        <pre id=\"json\" class=\"mb-0\"><code class=\"language-json\" #json></code></pre>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { AfterViewChecked, ChangeDetectorRef, Component, Injector, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageAccessService } from '../../../@core/services/page-access.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\n\r\n@Component({\r\n  selector: 'app-grid-config',\r\n  templateUrl: './grid-config.component.html',\r\n  styleUrls: ['./grid-config.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridConfigComponent implements OnInit, AfterViewChecked {\r\n  gridConfigForm: UntypedFormGroup;\r\n  gridConfigFormArray: UntypedFormArray;\r\n  gridActionFormArray: UntypedFormArray;\r\n  formData: any;\r\n  gridConfig: any;\r\n  id = '';\r\n  gridConfigCount: any;\r\n  manualForm: UntypedFormGroup;\r\n  actionButtonClicked = false;\r\n  gridOptions: any[];\r\n  pageData = [];\r\n  pagesList = [];\r\n  editType: any[] = [\r\n    { label: 'External Link', value: 'External Link' },\r\n    { label: 'OCR', value: 'Ocr Scan' },\r\n    { label: 'Open PopUp', value: 'Open PopUp' },\r\n    { label: 'Document Generation', value: 'Document Generation' },\r\n    { label: 'Document Report Generation', value: 'Document Report Generation' }\r\n  ];\r\n  documentReport = false;\r\n  sortTypeValues: any;\r\n  iconValues: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  pageAccessService: PageAccessService;\r\n  basicPageInformation: any;\r\n  _localstore: LocalService;\r\n  pageBuilderService: PageBuilderService;\r\n  createDynamicPage: boolean;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  authService: AuthService;\r\n  selectFieldsName: any;\r\n  businessName: any;\r\n  businessRules: any;\r\n  tableSchemaObj: any;\r\n  RBACORG: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    public cdRef: ChangeDetectorRef,\r\n    private router: Router,\r\n    private alert: AlertService,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this._localstore = injector.get<LocalService>(LocalService);\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.pageAccessService = injector.get<PageAccessService>(PageAccessService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.createDynamicPage = this._localstore.getObj('CREATE PAGE') || false;\r\n    this.sortTypeValues = [\r\n      { value: 'asc', label: 'Ascending' },\r\n      { value: 'desc', label: 'Descending' }\r\n    ];\r\n    this.gridOptions = [\r\n      { value: 'sort', label: 'Sorting' },\r\n      { value: 'filter', label: 'Filtering' },\r\n      { value: 'hide', label: 'Hide' },\r\n      { value: 'fixed', label: 'Fixed' },\r\n      // { value: 'Choosable', label: 'Default Columns' },\r\n      // { value: 'visible', label: 'Visible' },\r\n      // { value: 'dateFormat', label: 'Date' },\r\n      { value: 'mobileView', label: 'Mobile' },\r\n      { value: 'tabView', label: 'Tablet' }\r\n    ];\r\n    this.iconValues = [\r\n      { name: 'Add', value: 'fa fa-plus', key: 'add' },\r\n      { name: 'Edit', value: 'fa fa-pencil', key: 'edit' },\r\n      { name: 'Delete', value: 'fa fa-trash', key: 'delete' },\r\n      { name: 'View', value: 'fa fa-eye', key: 'view' }\r\n    ];\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.setPagesList();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.basicPageInformation = this._localstore.getObj('PAGEDESIGN_BASICINFO');\r\n    if (!this.id) {\r\n      const validation = this.validationPage();\r\n      if (!validation) {\r\n        this.router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this.route });\r\n        return this.alert.error('Please fill all required fields!');\r\n      }\r\n    }\r\n    this.loadForm();\r\n    // this.setPagesList();\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      if (this.formData && this.formData.tableschemaconfig) {\r\n        this.tableSchemaObj = JSON.parse(this.formData.tableschemaconfig);\r\n      }\r\n      if (this.formData.gridconfig) {\r\n        this.gridConfig =\r\n          typeof this.formData.gridconfig === 'string'\r\n            ? JSON.parse(this.formData.gridconfig)\r\n            : this.formData.gridconfig;\r\n        this.gridConfigCount = this.gridConfig?.gridConfigFormArray.length;\r\n        this.setQueryParams();\r\n      } else {\r\n        this.gridConfig = null;\r\n      }\r\n    });\r\n\r\n    this.pageBuilderAddService.currentBasicData.subscribe((data: any) => {\r\n      if (data) {\r\n        if (this.formData) {\r\n          this.formData.pagename = data.pagename;\r\n          this.formData.pagetype = data.pagetype;\r\n          this.formData.description = data.description;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  loadForm(): void {\r\n    this.gridConfigForm = this.formBuilder.group({\r\n      edit: [''],\r\n      editUrl: [''],\r\n      delete: [''],\r\n      deleteUrl: [''],\r\n      externalLink: [''],\r\n      externalUrl: [''],\r\n      defaultSortColumn: [''],\r\n      gridTitle: ['', Validators.required],\r\n      defaultSortType: [''],\r\n      isShowOnTop: [''],\r\n      isInitialFormLoad: [''],\r\n      exportPageName: [''],\r\n      gridSelection: [''],\r\n      gridDownloadRangeQueryHeader: [''],\r\n      gridActionFormArray: this.formBuilder.array([this.createAction()]),\r\n      gridConfigFormArray: this.formBuilder.array([this.createGridConfig()]),\r\n      gridDownloadRangeQueryArray: this.formBuilder.array([this.createGridDownloadRangeQueryArray()]),\r\n      chooser: [''],\r\n      highlightRow: this.formBuilder.group({\r\n        tableName: [''],\r\n        columnName: [''],\r\n        columnValue: [''],\r\n        color: ['']\r\n      })\r\n    });\r\n  }\r\n\r\n  createGridConfig() {\r\n    this.gridConfigForm = this.formBuilder.group({\r\n      header: [''],\r\n      columnDef: [''],\r\n      link: [''],\r\n      routelink: [''],\r\n      icon: [''],\r\n      icontext: [''],\r\n      dateFormat: [''],\r\n      datetext: [''],\r\n      sort: [''],\r\n      filter: [''],\r\n      hide: [''],\r\n      fixed: [''],\r\n      Choosable: [''],\r\n      visible: [''],\r\n      selected: [''],\r\n      mobileView: [''],\r\n      tabView: [''],\r\n      concatenate: false,\r\n      businessrules: ['']\r\n    });\r\n  }\r\n\r\n  changeGridOptions(value, i, gridConfigFormArray: UntypedFormArray) {\r\n    const arr = [];\r\n    this.gridOptions.forEach(g => arr.push(g.value));\r\n    arr.forEach(v => {\r\n      if (value.includes(v)) {\r\n        // if (v === 'dateFormat') {\r\n        //   gridConfigFormArray.controls[i].get('datetext').patchValue('MDY');\r\n        // }\r\n        return gridConfigFormArray.controls[i].get(v).patchValue(true);\r\n      } else {\r\n        return gridConfigFormArray.controls[i].get(v).patchValue(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  get formValidate() {\r\n    return this.gridConfigForm.controls;\r\n  }\r\n\r\n  createAction() {\r\n    return this.formBuilder.group({\r\n      isOutsideGrid: [''],\r\n      action: [''],\r\n      icon: ['', Validators.required],\r\n      name: [''],\r\n      type: ['', Validators.required],\r\n      link: ['', Validators.required],\r\n      filterBy: [''],\r\n      filterColumn: ['']\r\n    });\r\n  }\r\n\r\n  createGridDownloadRangeQueryArray() {\r\n    return this.formBuilder.group({\r\n      query: ['']\r\n    });\r\n  }\r\n\r\n  setPagesList() {\r\n    this.pageAccessService.getOrganizationPage(this.orgId).subscribe(res => {\r\n      const data = res['data']['data'];\r\n      if (data && data?.length) {\r\n        this.pageData = data?.filter(\r\n          a => (a.activeVersion?.templatejson && a.activeVersion?.tableschemaconfig) || a.activeVersion?.tabconfig\r\n        );\r\n        this.pagesList = this.pageData.map(x => {\r\n          x.activeVersion.pageid = x.activeVersion.pageid.toString();\r\n          return {\r\n            id: x.activeVersion.pageid,\r\n            pagename: x.activeVersion.pagename,\r\n            value: x.activeVersion.pagename\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setQueryParams() {\r\n    const control = <UntypedFormArray>this.gridConfigForm.controls['gridConfigFormArray'];\r\n    control.controls = [];\r\n    const controlAction = <UntypedFormArray>this.gridConfigForm.controls['gridActionFormArray'];\r\n    controlAction.controls = [];\r\n    const reportControl = <UntypedFormArray>this.gridConfigForm.controls['gridDownloadRangeQueryArray'];\r\n    reportControl.controls = [];\r\n    if (this.gridConfig && this.gridConfig.gridConfigFormArray.length) {\r\n      this.patchGridConfig();\r\n      if (this.gridConfig && this.gridConfig.exportPageName) {\r\n        this.documentReport = true;\r\n      } else {\r\n        this.documentReport = false;\r\n      }\r\n      this.setControls();\r\n    }\r\n  }\r\n\r\n  goToGridFieldPage(): void {\r\n    this.router.navigate(['../grid-field'], { relativeTo: this.route });\r\n  }\r\n\r\n  setControls() {\r\n    const control = <UntypedFormArray>this.gridConfigForm.controls['gridConfigFormArray'];\r\n    control.controls = [];\r\n    const controlAction = <UntypedFormArray>this.gridConfigForm.controls['gridActionFormArray'];\r\n    controlAction.controls = [];\r\n    const reportControl = <UntypedFormArray>this.gridConfigForm.controls['gridDownloadRangeQueryArray'];\r\n    reportControl.controls = [];\r\n    if (controlAction?.value?.length) {\r\n      this.actionButtonClicked = true;\r\n      controlAction.value.forEach(x => {\r\n        if (x.action != '') {\r\n          controlAction.push(this.buildActionGridFormArray(x));\r\n        }\r\n      });\r\n    }\r\n    if (this.gridConfig?.gridDownloadRangeQueryArray?.length) {\r\n      this.gridConfig.gridDownloadRangeQueryArray.forEach(x => {\r\n        reportControl.push(this.buildGridDownloadRangeQueryArray(x));\r\n      });\r\n    }\r\n    if (this.gridConfig?.gridActionFormArray?.length) {\r\n      this.actionButtonClicked = true;\r\n      this.gridConfig.gridActionFormArray.forEach(x => {\r\n        controlAction.push(this.buildActionGridFormArray(x));\r\n      });\r\n    }\r\n    if (this.gridConfig?.gridConfigFormArray?.length) {\r\n      this.gridConfig.gridConfigFormArray.forEach(x => {\r\n        control.push(this.buildGridFormArray(x));\r\n      });\r\n    }\r\n    if (this.gridConfig?.highlightRow) {\r\n      const obj = this.gridConfig?.highlightRow;\r\n      this.gridConfigForm.get('highlightRow').setValue(obj);\r\n    }\r\n  }\r\n\r\n  patchGridConfig() {\r\n    this.gridConfigForm.patchValue({\r\n      edit: this.gridConfig.edit ? this.gridConfig.edit : '',\r\n      editUrl: this.gridConfig.editUrl ? this.gridConfig.editUrl : '',\r\n      delete: this.gridConfig.delete ? this.gridConfig.delete : '',\r\n      deleteUrl: this.gridConfig.deleteUrl ? this.gridConfig.deleteUrl : '',\r\n      externalLink: this.gridConfig.externalLink ? this.gridConfig.externalLink : '',\r\n      externalUrl: this.gridConfig.externalUrl ? this.gridConfig.externalUrl : '',\r\n      defaultSortColumn: this.gridConfig.defaultSortColumn ? this.gridConfig.defaultSortColumn : null,\r\n      gridTitle: this.basicPageInformation.pagename,\r\n      defaultSortType: this.gridConfig.defaultSortType ? this.gridConfig.defaultSortType : null,\r\n      exportPageName: this.gridConfig.exportPageName ? this.gridConfig.exportPageName : null,\r\n      gridSelection: this.gridConfig.gridSelection ? this.gridConfig.gridSelection : '',\r\n      gridDownloadRangeQueryHeader: this.gridConfig.gridDownloadRangeQueryHeader\r\n        ? this.gridConfig.gridDownloadRangeQueryHeader\r\n        : null,\r\n      chooser: this.gridConfig.chooser ? this.gridConfig.chooser : ''\r\n    });\r\n  }\r\n\r\n  buildGridFormArray(x): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      header: this.setHeader(x),\r\n      selected: this.setSelected(x),\r\n      columnDef: this.setColumnDef(x),\r\n      icontext: this.setIconText(x),\r\n      link: x.link ? x.link : '',\r\n      routelink: x.routelink ? x.routelink : '',\r\n      icon: x.icon ? x.icon : '',\r\n      dateFormat: x.dateFormat ? x.dateFormat : '',\r\n      datetext: x.datetext ? x.datetext : '',\r\n      sort: x.sort ? x.sort : '',\r\n      filter: x.filter ? x.filter : '',\r\n      hide: x.hide ? x.hide : '',\r\n      fixed: x.fixed ? x.fixed : '',\r\n      Choosable: x.Choosable ? x.Choosable : '',\r\n      visible: x.visible ? x.visible : '',\r\n      mobileView: x.mobileView ? x.mobileView : '',\r\n      tabView: x.tabView ? x.tabView : '',\r\n      concatenate: x.concatenate ? x.concatenate : false,\r\n      businessrules: x.businessrules ? x.businessrules : ''\r\n    });\r\n  }\r\n  setIconText(x) {\r\n    return x.icontext && x.icon ? x.icontext : '';\r\n  }\r\n  setSelected(x) {\r\n    return [this.gridOptions.filter(opt => x[opt.value]).map(opt => opt.value)];\r\n  }\r\n  setHeader(x) {\r\n    return x.header ? x.header : x.label || '';\r\n  }\r\n  setColumnDef(x) {\r\n    return x.columnDef ? x.columnDef : x.field || '';\r\n  }\r\n  buildActionGridFormArray(x): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      isOutsideGrid: x.isOutsideGrid ? x.isOutsideGrid : '',\r\n      isOwner: x.isOwner ? x.isowner : '',\r\n      action: x.action ? x.action : '',\r\n      icon: x.icon ? x.icon : '',\r\n      name: x.name ? x.name : '',\r\n      type: x.type ? x.type : '',\r\n      link: x.link ? x.link : '',\r\n      filterBy: x.filterBy ? x.filterBy : '',\r\n      filterColumn: x.filterColumn ? x.filterColumn : ''\r\n    });\r\n  }\r\n\r\n  buildGridDownloadRangeQueryArray(x): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      query: x.query ? x.query : ''\r\n    });\r\n  }\r\n\r\n  // removeRouteLink(i, gridConfigFormArray: FormArray) {\r\n  //   gridConfigFormArray.controls[i].get('link').patchValue(false);\r\n  //   gridConfigFormArray.controls[i].get('routelink').patchValue(null);\r\n  // }\r\n\r\n  // checkValue(value, i, gridConfigFormArray: FormArray) {\r\n  //   if (value) {\r\n  //     gridConfigFormArray.controls[i].get('dateFormat').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('datetext').patchValue('');\r\n  //     gridConfigFormArray.controls[i].get('sort').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('filter').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('hide').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('fixed').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('Choosable').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('visible').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('mobileView').patchValue(false);\r\n  //     gridConfigFormArray.controls[i].get('tabView').patchValue(false);\r\n  //   } else {\r\n  //     gridConfigFormArray.controls[i].get('icontext').patchValue(null);\r\n  //   }\r\n  // }\r\n\r\n  saveGridConfig(publish: boolean) {\r\n    const formDetails = this.formData;\r\n    const gridConfigData = this.gridConfigForm.getRawValue();\r\n    if (gridConfigData) {\r\n      if (!gridConfigData.edit) {\r\n        gridConfigData.editUrl = '';\r\n      }\r\n      if (!gridConfigData.delete) {\r\n        gridConfigData.deleteUrl = '';\r\n      }\r\n      if (!gridConfigData.externalLink) {\r\n        gridConfigData.externalUrl = '';\r\n      }\r\n    }\r\n    if (gridConfigData.gridActionFormArray) {\r\n      gridConfigData.gridActionFormArray.forEach(x => {\r\n        this.iconValues.forEach(y => {\r\n          if (x.icon === y.value) {\r\n            x.action = y.key;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    formDetails.gridconfig = JSON.stringify(gridConfigData);\r\n    if (this.id) {\r\n      formDetails.id = this.id;\r\n    }\r\n    console.log(formDetails);\r\n    console.log(publish);\r\n    if (formDetails.id) {\r\n      this.patchPage(formDetails, publish);\r\n    } else {\r\n      this.createPage(formDetails, publish);\r\n    }\r\n  }\r\n\r\n  patchPage(formDetails, publish) {\r\n    const createPage = this._localstore.getObj('CREATE PAGE');\r\n    formDetails.published = publish;\r\n    if (createPage) {\r\n      this.formData.id = formDetails.activeVersion.id;\r\n    }\r\n    formDetails.pagename = this.gridConfigForm.get('gridTitle').value;\r\n    this.pageBuilderService.updatePageVersion(this.formData.id, formDetails, createPage).subscribe(() => {\r\n      if (publish) {\r\n        this.router.navigate([`pages/page-design/versions/${formDetails?.pageid || formDetails.activeVersion.pageid}`]);\r\n        this.alert.success(\r\n          `The Version ${formDetails.version || formDetails.activeVersion.version} is published successfully`\r\n        );\r\n      } else {\r\n        this.alert.success('Page saved successfully');\r\n      }\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.pageBuilderAddService.returnToList();\r\n  }\r\n\r\n  createPage(formDetails, publish) {\r\n    formDetails.published = publish;\r\n    this.pageBuilderAddService.createPage(formDetails).subscribe(result => {\r\n      if (!this.id) {\r\n        const data = result['data'];\r\n        if (data && Object.keys(data).length) {\r\n          const id = data.id ? data.id : '';\r\n          if (id) {\r\n            this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n          }\r\n        }\r\n      }\r\n      this.router.navigate(['../../list'], { relativeTo: this.route });\r\n      this.alert.success('Page saved successfully');\r\n    });\r\n  }\r\n\r\n  actionButtonEvent() {\r\n    this.actionButtonClicked = true;\r\n    const actionctrl = this.gridConfigForm.controls['gridActionFormArray'] as UntypedFormArray;\r\n    actionctrl.push(this.createAction());\r\n  }\r\n\r\n  // addQuery() {\r\n  //   const actionctrl = this.gridConfigForm.controls.gridDownloadRangeQueryArray as FormArray;\r\n  //   actionctrl.push(this.createGridDownloadRangeQueryArray());\r\n  // }\r\n\r\n  delInput(index) {\r\n    const actionctrl = this.gridConfigForm.controls['gridActionFormArray'] as UntypedFormArray;\r\n    actionctrl.removeAt(index);\r\n  }\r\n\r\n  // deleteQuery(index) {\r\n  //   const actionctrl = this.gridConfigForm.controls.gridDownloadRangeQueryArray as FormArray;\r\n  //   actionctrl.removeAt(index);\r\n  // }\r\n\r\n  // typeChange(value) {\r\n  //   if (value && value === 'Document Report Generation') {\r\n  //     this.documentReport = true;\r\n  //   } else {\r\n  //     this.documentReport = false;\r\n  //   }\r\n  // }\r\n\r\n  // onColumnChoosenChange(value, gridConfigFormArray) {\r\n  //   if (value) {\r\n  //     // enable only first 3 cols to be visible\r\n  //     for (let i = 0; i < 3 && i < gridConfigFormArray.controls.length; i++) {\r\n  //       gridConfigFormArray.controls[i].get('visible').patchValue(true);\r\n  //     }\r\n  //   }\r\n  // }\r\n  validationPage(): any {\r\n    if (\r\n      !this.basicPageInformation.pagename ||\r\n      !this.basicPageInformation.pagetype ||\r\n      !this.basicPageInformation.description\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  deleteAction(i) {\r\n    const form = this.gridConfigForm.get('gridActionFormArray')['controls'][i];\r\n    if (form.controls.icon.value === 'fa fa-trash') {\r\n      form.controls.type.disable();\r\n      form.controls.link.disable();\r\n      form.controls.isOutsideGrid.disable();\r\n    } else {\r\n      form.controls.type.enable();\r\n      form.controls.link.enable();\r\n      form.controls.isOutsideGrid.enable();\r\n    }\r\n  }\r\n  getVirtualColumns(): any {\r\n    this.gridConfigForm.get('highlightRow').get('tableName').patchValue(this.tableSchemaObj?.tablefields?.primary);\r\n    const actionctrl = this.gridConfigForm.controls['gridConfigFormArray'] as UntypedFormArray;\r\n    return actionctrl?.value?.filter(x => x?.concatenate === false);\r\n  }\r\n  virtualColumnsButtonEvent() {\r\n    if (!Array.isArray(this.selectFieldsName) || !this.selectFieldsName.length) {\r\n      this.alert.error('Please select Virtual Column Field');\r\n    } else if (!this.businessName || this.businessName.trim().length == 0) {\r\n      this.alert.error('Please provide valid business name');\r\n    } else {\r\n      const actionctrl = this.gridConfigForm.controls['gridConfigFormArray'] as UntypedFormArray;\r\n      actionctrl.push(this.createVColumn());\r\n      this.selectFieldsName = [];\r\n      this.businessName = '';\r\n      this.businessRules = '';\r\n    }\r\n  }\r\n  viewVirtualColumn(): any {\r\n    if (this.selectFieldsName && this.selectFieldsName.length > 0) {\r\n      return this.selectFieldsName.join('/{ }/');\r\n    }\r\n  }\r\n  createVColumn() {\r\n    let header;\r\n    if (this.selectFieldsName.length === 1) {\r\n      header = this.selectFieldsName.join('') + '/';\r\n    } else {\r\n      header = this.selectFieldsName.join('/{ }/');\r\n    }\r\n    return this.formBuilder.group({\r\n      header: this.businessName,\r\n      columnDef: header,\r\n      link: '',\r\n      routelink: '',\r\n      icon: '',\r\n      icontext: '',\r\n      dateFormat: '',\r\n      datetext: '',\r\n      sort: '',\r\n      filter: '',\r\n      hide: '',\r\n      fixed: '',\r\n      Choosable: '',\r\n      visible: '',\r\n      selected: [],\r\n      mobileView: '',\r\n      tabView: '',\r\n      concatenate: true,\r\n      businessrules: this.generateBusinessRules()\r\n    });\r\n  }\r\n  deleteVColumn(index: any) {\r\n    const actionctrl = this.gridConfigForm.controls['gridConfigFormArray'] as UntypedFormArray;\r\n    actionctrl.removeAt(index);\r\n  }\r\n  generateBusinessRules() {\r\n    const columnName = this.businessName.toLowerCase();\r\n    const cName = columnName.replace(/ /g, '_');\r\n    const columnDef = `alias.${cName}`;\r\n    return {\r\n      colDef: columnDef,\r\n      choices: this.businessRules\r\n    };\r\n  }\r\n}\r\n","<div class=\"grid-config\">\r\n  <form [formGroup]=\"gridConfigForm\">\r\n    <p-card styleClass=\"rbac-card w-100 mb-3\">\r\n      <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n        <span class=\"report_head font-weight-bold\">Action</span>\r\n        <button\r\n          class=\"btn btn-primary btn-icon pull-right\"\r\n          fieldKey=\"PAG_DES_GRID_CONFIG_ADD_ACTION\"\r\n          title=\"Add Action\"\r\n          (click)=\"actionButtonEvent()\">\r\n          <em class=\"fa fa-plus\" aria-hidden=\"true\"></em>\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"actionButtonClicked\">\r\n        <div class=\"\">\r\n          <table aria-describedby=\"gridConfigTable\" class=\"table table-borderless actionadd mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Action <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Choose Type <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">API/Link <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Filter By</th>\r\n                <th scope=\"col\">Filter Column</th>\r\n                <th scope=\"col\">Is Owner</th>\r\n                <th scope=\"col\" class=\"text-center\">Outside Grid</th>\r\n                <th scope=\"col\">&#160;</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody\r\n              formArrayName=\"gridActionFormArray\"\r\n              *ngFor=\"let item of gridConfigForm.get('gridActionFormArray').controls; let i = index\">\r\n              <tr [formGroupName]=\"i\">\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"iconValues\"\r\n                    styleClass=\"w-100\"\r\n                    placeholder=\"Select action\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_ACTION\"\r\n                    (click)=\"deleteAction(i)\"\r\n                    formControlName=\"icon\"\r\n                    [showClear]=\"true\">\r\n                    <ng-template let-item pTemplate=\"selectedItem\">\r\n                      {{ item?.name }}&nbsp;<em class=\"{{ item?.value }}\" aria-hidden=\"true\"></em>\r\n                    </ng-template>\r\n                    <ng-template let-object pTemplate=\"item\">\r\n                      {{ object.name }}&nbsp;<em class=\"{{ object.value }}\" aria-hidden=\"true\"></em>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                  <div class=\"p-error block mt-1\" *ngIf=\"item['controls'].icon.touched && item['controls'].icon.invalid\">\r\n                    Action is Required\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_NAME\"\r\n                    formControlName=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    pInputText />\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"editType\"\r\n                    styleClass=\"w-100\"\r\n                    placeholder=\"Choose Type\"\r\n                    formControlName=\"type\"\r\n                    optionLabel=\"label\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_CHOOSE_TYPE\"\r\n                    optionValue=\"value\"\r\n                    [showClear]=\"true\">\r\n                  </p-dropdown>\r\n                  <div class=\"p-error block mt-1\" *ngIf=\"item['controls'].type.touched && item['controls'].type.invalid\"\r\n                    >Type is Required</div\r\n                  >\r\n                </td>\r\n                <td *ngIf=\"item.value.type === 'External Link' || item.value.type === 'Ocr Scan'\">\r\n                  <p-dropdown\r\n                    [filter]=\"true\"\r\n                    [options]=\"pagesList\"\r\n                    styleClass=\"w-100\"\r\n                    placeholder=\"Enter API/Link\"\r\n                    formControlName=\"link\"\r\n                    ariaFilterLabel=\"null\"\r\n                    optionLabel=\"pagename\"\r\n                    optionValue=\"id\"\r\n                    [showClear]=\"true\">\r\n                  </p-dropdown\r\n                  ><br />\r\n                  <div class=\"p-error block mt-1\" *ngIf=\"item['controls'].link.touched && item['controls'].link.invalid\"\r\n                    >API/Link is Required</div\r\n                  >\r\n                </td>\r\n                <td *ngIf=\"item.value.type !== 'External Link' && item.value.type !== 'Ocr Scan'\">\r\n                  <input\r\n                    type=\"text\"\r\n                    styleClass=\"w-100\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"link\"\r\n                    placeholder=\"Enter API/Link\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_API_LINK\"\r\n                    pInputText />\r\n                  <div class=\"p-error block mt-1\" *ngIf=\"item['controls'].link.touched && item['controls'].link.invalid\"\r\n                    >API/Link is Required</div\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    placeholder=\"Choose Filter Column\"\r\n                    [options]=\"gridConfig.gridConfigFormArray\"\r\n                    styleClass=\"w-100\"\r\n                    formControlName=\"filterBy\"\r\n                    optionValue=\"columnDef\"\r\n                    optionLabel=\"columnDef\"\r\n                    [showClear]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    styleClass=\"w-100\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"filterColumn\"\r\n                    placeholder=\"Enter Filter Column\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_API_LINK\"\r\n                    pInputText />\r\n                </td>\r\n                <td class=\"text-center\">\r\n                  <label for=\"isOwner{{ i }}\" aria-labelledby=\"isOwner{{ i }}\" class=\"sr-only\"\r\n                    >IS Owner</label\r\n                  >\r\n                  <p-checkbox\r\n                    name=\"isOwner\"\r\n                    inputId=\"isOwner{{ i }}\"\r\n                    formControlName=\"isOwner\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_OUTSIDE_GRID\"\r\n                    [binary]=\"true\"></p-checkbox>\r\n                </td>\r\n                <td class=\"text-center\">\r\n                  <label for=\"isOutsideGrid{{ i }}\" aria-labelledby=\"isOutsideGrid{{ i }}\" class=\"sr-only\"\r\n                    >Outside Grid</label\r\n                  >\r\n                  <p-checkbox\r\n                    name=\"outsidegrid\"\r\n                    inputId=\"isOutsideGrid{{ i }}\"\r\n                    formControlName=\"isOutsideGrid\"\r\n                    fieldKey=\"PAG_DES_GRID_CONFIG_OUTSIDE_GRID\"\r\n                    [binary]=\"true\"></p-checkbox>\r\n                </td>\r\n                <td class=\"text-left\">\r\n                  <a href=\"javascript:void(0)\" class=\"text-danger\" title=\"Delete\">\r\n                    <em class=\"pi pi-trash\" (click)=\"delInput(i)\" *showField=\"'PAG_DES_GRID_CONFIG_DELETE'\"></em>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </p-card>\r\n\r\n    <p-card styleClass=\"rbac-card w-100 mb-3\">\r\n      <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n        <span class=\"report_head font-weight-bold\">Highlight Row</span>\r\n      </div>\r\n      <div class=\"\">\r\n        <table aria-describedby=\"gridConfigTable\" class=\"table table-borderless actionadd mb-0\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Table</th>\r\n              <th scope=\"col\">Column</th>\r\n              <th scope=\"col\">Value</th>\r\n              <th scope=\"col\">Color</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr formGroupName=\"highlightRow\">\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"tableName\"\r\n                  placeholder=\"Enter Name\"\r\n                  disabled\r\n                  pInputText />\r\n              </td>\r\n              <td>\r\n                <p-dropdown\r\n                  [options]=\"getVirtualColumns()\"\r\n                  styleClass=\"w-100\"\r\n                  placeholder=\"Choose Type\"\r\n                  formControlName=\"columnName\"\r\n                  optionLabel=\"columnDef\"\r\n                  optionValue=\"columnDef\"\r\n                  [showClear]=\"true\">\r\n                </p-dropdown>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"columnValue\"\r\n                  placeholder=\"Enter Name\"\r\n                  pInputText />\r\n              </td>\r\n              <td>\r\n                <input type=\"color\" class=\"form-control\" formControlName=\"color\" value=\"#fff\" pInputText />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </p-card>\r\n\r\n    <p-card styleClass=\"rbac-card w-100 mb-3\">\r\n      <div class=\"p-fluid p-formgrid row\">\r\n        <div class=\"p-field col-lg-3 col-sm-3 col-md-6 col-12\">\r\n          <label for=\"gridTitle\" class=\"referral-form-labels\">Grid Title\r\n            <span class=\"requiredfield text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            id=\"gridTitle\"\r\n            type=\"text\"\r\n            fieldKey=\"PAG_DES_GRID_CONFIG_ENTER_GRID_TITLE\"\r\n            formControlName=\"gridTitle\"\r\n            placeholder=\"Enter Grid Title\"\r\n            pInputText />\r\n            <div *ngIf=\"formValidate['gridTitle'].errors\">\r\n              <div *ngIf=\"formValidate['gridTitle'].invalid && formValidate['gridTitle'].touched\" class=\"p-error block mt-1\">Grid Title is required\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-field col-lg-3 col-sm-3 col-md-6 col-12\">\r\n          <label class=\"referral-form-labels\">Sort By Column </label>\r\n          <ng-container *ngIf=\"gridConfig && gridConfig.gridConfigFormArray\">\r\n            <p-dropdown\r\n              [options]=\"gridConfig.gridConfigFormArray\"\r\n              placeholder=\"Select Sort By Column\"\r\n              formControlName=\"defaultSortColumn\"\r\n              optionLabel=\"header\"\r\n              fieldKey=\"PAG_DES_GRID_CONFIG_ENTER_SORT_BY_COLOUMN\"\r\n              optionValue=\"columnDef\"\r\n              [showClear]=\"true\">\r\n            </p-dropdown>\r\n          </ng-container>\r\n        </div>\r\n        <div\r\n          class=\"p-field col-lg-3 col-sm-3 col-md-6 col-12\"\r\n          [hidden]=\"!gridConfigForm.get('defaultSortColumn').value\">\r\n          <label class=\"referral-form-labels\">Sort By Order</label>\r\n          <p-dropdown\r\n            [options]=\"sortTypeValues\"\r\n            placeholder=\"Select Sort By Order\"\r\n            formControlName=\"defaultSortType\"\r\n            optionLabel=\"label\"\r\n            optionValue=\"value\"\r\n            [showClear]=\"true\">\r\n          </p-dropdown>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid row\">\r\n        <div class=\"p-field col-lg-3 col-sm-3 col-md-4 col-4\">\r\n          <label class=\"referral-form-labels\">Virtual Column Field</label>\r\n          <ng-container *ngIf=\"gridConfig && gridConfig.gridConfigFormArray\">\r\n            <p-multiSelect\r\n              [options]=\"getVirtualColumns()\"\r\n              styleClass=\"filterFieldsOptions w-100\"\r\n              [maxSelectedLabels]=\"1\"\r\n              selectedItemsLabel=\"{0} items selected\"\r\n              defaultLabel=\"Select Fields\"\r\n              [(ngModel)]=\"selectFieldsName\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n              optionLabel=\"columnDef\"\r\n              optionValue=\"columnDef\"\r\n              id=\"filterFieldsOptions\">\r\n            </p-multiSelect>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"p-field col-lg-3 col-sm-3 col-md-4 col-4\">\r\n          <label for=\"businessName\" class=\"referral-form-labels\">Business Name</label>\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              id=\"businessName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Business Name\"\r\n              [(ngModel)]=\"businessName\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n              pInputText \r\n              [disabled]=\"!selectFieldsName || selectFieldsName.length == 0\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field col-lg-6 col-sm-6 col-md-4 col-4\">\r\n          <label for=\"businessRules\" class=\"referral-form-labels\">Business Rules</label>\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              id=\"businessRules\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Business Rules\"\r\n              [(ngModel)]=\"businessRules\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n              pInputText\r\n              style=\"width: 87%\" \r\n              [disabled]=\"!selectFieldsName || selectFieldsName.length == 0\"/>\r\n            <div class=\"input-group-append pl-2\">\r\n              <button class=\"btn btn-primary btn-icon\" title=\"Add Virtual Column\" (click)=\"virtualColumnsButtonEvent()\">\r\n                <em class=\"fa fa-plus\" aria-hidden=\"true\"></em>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid row\" *ngIf=\"selectFieldsName?.length > 0\">\r\n        <div class=\"p-field col-lg-10 col-sm-10 col-md-10 col-10\">\r\n          <label class=\"referral-form-labels\">View Virtual Column Field </label>\r\n          <ng-container>\r\n            <div>\r\n              <em class=\"code-review p-2\"> {{ viewVirtualColumn() }} </em>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <table aria-describedby=\"configTable\" class=\"table table-bordered configTable\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" class=\"py-2\">Field Name</th>\r\n            <th scope=\"col\" class=\"py-2\">Business Name</th>\r\n            <th scope=\"col\" class=\"py-2\">Link</th>\r\n            <th scope=\"col\" class=\"py-2\">Grid Options</th>\r\n            <th scope=\"col\" class=\"py-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container\r\n            *ngIf=\"gridConfig && gridConfig.gridConfigFormArray && gridConfig.gridConfigFormArray.length\"\r\n            formArrayName=\"gridConfigFormArray\">\r\n            <tr\r\n              *ngFor=\"let item of gridConfigForm.get('gridConfigFormArray').controls; let i = index\"\r\n              [formGroupName]=\"i\">\r\n              <td>\r\n                <input\r\n                  id=\"fieldname1\"\r\n                  class=\"form-control w-100\"\r\n                  type=\"text\"\r\n                  [attr.disabled]=\"item.value.concatenate ? null : false\"\r\n                  placeholder=\"Enter Field Name\"\r\n                  formControlName=\"columnDef\"\r\n                  value=\"{{ item.value.columnDef }}\"\r\n                  pInputText />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  id=\"businessname1\"\r\n                  class=\"w-100\"\r\n                  type=\"text\"\r\n                  fieldKey=\"PAG_DES_GRID_CONFIG_ENTER_BUSINESS_NAME\"\r\n                  placeholder=\"Enter Business Name\"\r\n                  value=\"{{ item.value.header ? item.value.header : item.value.columnDef }}\"\r\n                  formControlName=\"header\"\r\n                  pInputText />\r\n              </td>\r\n              <td>\r\n                <p-dropdown\r\n                  [filter]=\"true\"\r\n                  [options]=\"pagesList\"\r\n                  styleClass=\"w-100\"\r\n                  placeholder=\"Enter API/Link\"\r\n                  formControlName=\"link\"\r\n                  fieldKey=\"PAG_DES_GRID_CONFIG_ENTER_LINK\"\r\n                  optionValue=\"id\"\r\n                  optionLabel=\"pagename\"\r\n                  [showClear]=\"true\">\r\n                </p-dropdown>\r\n              </td>\r\n              <td>\r\n                <label class=\"sr-only\" for=\"gridoptions{{ i }}\" aria-labelledby=\"gridoptions{{ i }}\"></label>\r\n                <p-multiSelect\r\n                  [options]=\"gridOptions\"\r\n                  [binary]=\"true\"\r\n                  styleClass=\"w-100\"\r\n                  defaultLabel=\"Select Fields\"\r\n                  (onChange)=\"changeGridOptions($event.value, i, gridConfigForm.get('gridConfigFormArray'))\"\r\n                  optionLabel=\"label\"\r\n                  optionValue=\"value\"\r\n                  fieldKey=\"PAG_DES_GRID_CONFIG_ENTER_GRID_OPTIONS\"\r\n                  id=\"gridoptions{{ i }}\"\r\n                  formControlName=\"selected\">\r\n                </p-multiSelect>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <a href=\"javascript:void(0)\" class=\"text-danger\" title=\"Delete\" *ngIf=\"item.value.concatenate\">\r\n                  <em class=\"pi pi-trash\" (click)=\"deleteVColumn(i)\"></em>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n      </table>\r\n    </p-card>\r\n  </form>\r\n\r\n  <div class=\"mt-2 formicon\">\r\n    <button\r\n      class=\"pull-right mb-2 btn btn-primary btncommon\"\r\n      *showField=\"'PAG_DES_GRID_CONFIG_SAVE'\"\r\n      [disabled]=\"!gridConfigCount || gridConfigForm.invalid\"\r\n      (click)=\"saveGridConfig(false)\">\r\n      Save\r\n    </button>\r\n    <button\r\n    class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n    *showField='\"PAG_DES_DES_PAG_PREVIOUS\"'\r\n    (click)=\"goToGridFieldPage()\">\r\n    Previous\r\n  </button>\r\n    <button\r\n      *showField=\"'PAG_DES_GRID_CONFIG_PUBLISH'\"\r\n      class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n      [disabled]=\"!gridConfigCount || gridConfigForm.invalid\"\r\n      (click)=\"saveGridConfig(true)\">\r\n      Publish\r\n    </button>\r\n    <button *showField=\"'PAG_DES_GRID_CONFIG_CANCEL'\" class=\"pull-right mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Location } from '@angular/common';\r\nimport { Component, Injector, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { PermissionStore } from '../../@core/permissions/permission.store';\r\nimport { AlertService } from '../../@core/services/alert.service';\r\nimport { AuthService } from '../../@core/services/auth.service';\r\nimport { CommonDropdownsService } from '../../@core/services/common-dropdowns.service';\r\nimport { LocalService } from '../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../@core/services/page-builder-add.service';\r\nimport { PageBuilderAddURL } from '../../@core/url/page-builder-add-url.config';\r\nimport { DesignPageComponent } from './design-page/design-page.component';\r\n\r\n@Component({\r\n  selector: 'app-page-builder-add',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './page-builder-add.component.html',\r\n  styleUrls: ['./page-builder-add.component.scss']\r\n})\r\nexport class PageBuilderAddComponent implements OnInit, OnDestroy {\r\n  formData: any;\r\n  formDetails!: UntypedFormGroup;\r\n  pageTypeList: any;\r\n  schemaList: any;\r\n  templateJSON: any;\r\n  layout: any;\r\n  subscribeFormData: any;\r\n  jsonForm: any;\r\n  isShowDesign = false;\r\n  rev: any;\r\n  selectedPageValue!: string;\r\n  orgList: any;\r\n  updateMessage: string | null = null;\r\n  onlineUsersList: { shortNameUser: Array<any>; fullNameUser: Array<any> } = {\r\n    shortNameUser: [],\r\n    fullNameUser: []\r\n  };\r\n  logedInUser: any;\r\n  activeIndex: number;\r\n  pageBuildertabs: MenuItem[] = [];\r\n  // selectedPageType: string;\r\n  authorisedTabs: MenuItem[] = [];\r\n  labelText = '';\r\n  checked2 = true;\r\n  auth: AuthService;\r\n  localstorage: LocalService;\r\n  location: Location;\r\n  service: PageBuilderAddService;\r\n  dropdownService: CommonDropdownsService;\r\n  canChangeFormData = true;\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private alert: AlertService,\r\n    private permissionStore: PermissionStore\r\n  ) {\r\n    this.auth = injector.get<AuthService>(AuthService);\r\n    this.localstorage = injector.get<LocalService>(LocalService);\r\n    this.location = injector.get<Location>(Location);\r\n    this.service = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n    const permission = this.permissionStore.state;\r\n    this.pageBuildertabs = [\r\n      {\r\n        label: 'BASIC PAGE INFORMATION',\r\n        routerLink: 'basic-info',\r\n        visible: permission.PAG_DES_BASIC_PAG_INFO,\r\n      },\r\n      {\r\n        label: 'GRID FIELD',\r\n        routerLink: 'grid-field',\r\n        visible: permission.PAG_DES_GRID_FIELDS,\r\n      },\r\n      {\r\n        label: 'GRID FIELDS',\r\n        routerLink: 'grid-field',\r\n        visible: permission.PAG_DES_GRID_FIELDS,\r\n      },\r\n      {\r\n        label: 'FORM FIELDS',\r\n        routerLink: 'grid-field',\r\n        visible: permission.PAG_DES_FORM_FIELDS,\r\n      },\r\n      {\r\n        label: 'DESIGN PAGE',\r\n        routerLink: 'page-design',\r\n        visible: permission.PAG_DES_DES_PAG,\r\n      },\r\n      {\r\n        label: 'GRID CONFIGURATION',\r\n        routerLink: 'grid-config',\r\n        visible: permission.PAG_DES_GRID_CONFIG,\r\n      },\r\n      {\r\n        label: 'TAB CONFIGURATION',\r\n        routerLink: 'tab-config',\r\n        visible: permission.PAG_DES_TAB_CONFIG\r\n      },\r\n      {\r\n        label: 'ROUTING CONFIGURATION',\r\n        routerLink: 'routing-config',\r\n        visible: permission.PAG_DES_ROUTE_CONFIG\r\n      },\r\n      {\r\n        label: 'RIBBON TAB CONFIGURATION',\r\n        routerLink: 'ribbon-tab-config',\r\n        visible: permission.PAG_DES_RIBBON_TAB_CONFIG\r\n      },\r\n      {\r\n        label: 'RIBBON DESIGN PAGE',\r\n        routerLink: 'page-ribbon-design',\r\n        visible: permission.PAG_DES_RIBBON_DES_PAG\r\n      }\r\n    ];\r\n    this.pageBuildertabs = this.pageBuildertabs.filter(item => item.visible);\r\n    this.service.currentPageType.subscribe(page => this.getAuthorisedTabs(page && typeof page === \"string\" ? JSON.parse(page) : page));\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (event.url.includes('add') || event.url.includes('edit')) {\r\n          this.canChangeFormData = false;\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  // public form: any;\r\n  id: string | null = '';\r\n  onlineUserListSubscription: Subscription;\r\n  updateNotificationSubscription: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.rev = this.route.snapshot.paramMap.get('rev');\r\n    this.getBasicInfo();\r\n    this.logedInUser = this.localstorage.getObj('user');\r\n    this.getAuthorisedTabs();\r\n    this.loadForm();\r\n    // this.loadDropDowns();\r\n    this.getPageUrl();\r\n    this.subscribeFormData = this.service.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      this.jsonForm = this.formData?.templatejson ? this.formData?.templatejson : [];\r\n      this.layout = this.formData && this.formData.layouttype ? this.formData.layouttype : '';\r\n    });\r\n\r\n    this.service.currentBasicData.subscribe((data: any) => {\r\n      if (data) {\r\n        if (this.formData) {\r\n          this.formData.pagename = data.pagename;\r\n          this.formData.pagetype = data.pagetype;\r\n          this.formData.description = data.description;\r\n          this.formData.organizationid = data.organizationid;\r\n          this.formData.modulekey = data.modulekey;\r\n          this.formData.submodulekey = data.submodulekey;\r\n        }\r\n      }\r\n    });\r\n    // this.getOrgList();\r\n  }\r\n  onActiveIndexChange(event: number) {\r\n    const isSaved = this.localstorage.getItem('isTableFieldsSaved') === 'true';\r\n    const isSchemaSelected = this.localstorage.getItem('isSchemaSelected') === 'true';\r\n    const isTableSelected = this.localstorage.getItem('isTableSelected') === 'true';\r\n    const isColumnChecked = this.localstorage.getItem('isColumnChecked') === 'true';\r\n    const validateFields = this.fieldValidation();\r\n    if (event === 2 && !isSaved) {\r\n      let errorMessage: string;\r\n\r\n      if (!isSchemaSelected && !this.id) errorMessage = 'Please select the schema.';\r\n      else if (!isTableSelected && !this.id) errorMessage = 'Please select the table.';\r\n      else if (!isColumnChecked && !this.id) errorMessage = 'Please select at least one column.';\r\n      else if (validateFields && !this.id) errorMessage = 'Click the Next button to proceed.';\r\n\r\n      if (errorMessage) {\r\n        this.activeIndex = 1;\r\n        const routePath = this.id ? `/pages/page-design/edit/${this.id}/grid-field` : '/pages/page-design/add/grid-field';\r\n        this.router.navigate([routePath], { relativeTo: this.route });\r\n        this.alert.error(errorMessage);\r\n        return;\r\n      }\r\n    }\r\n    this.activeIndex = event;\r\n  }\r\n\r\n\r\n  fieldValidation() {\r\n    const isSchemaSelected = this.localstorage.getItem('isSchemaSelected') === 'true';\r\n    const isTableSelected = this.localstorage.getItem('isTableSelected') === 'true';\r\n    const isColumnChecked = this.localstorage.getItem('isColumnChecked') === 'true';\r\n    return isSchemaSelected && isTableSelected && isColumnChecked;\r\n  }\r\n\r\n  getBasicInfo() {\r\n    const editBaicDetails = this.localstorage.getObj('EDITBASICINFO');\r\n    if (editBaicDetails?.pageDetails?.locked) {\r\n      this.checked2 = true;\r\n      this.labelText = 'Locked';\r\n    } else {\r\n      this.checked2 = false;\r\n      this.labelText = 'Unlocked';\r\n    }\r\n  }\r\n  getPageUrl() {\r\n    let url = PageBuilderAddURL.EndPoints.page_config.pageVersion.replace('{id}', this.id);\r\n    if (this.rev)\r\n      url = PageBuilderAddURL.EndPoints.page_config.pageaudit.replace('{id}', this.id).replace('{id2}', this.rev);\r\n    if (this.id) {\r\n      this.getPageAPi(url);\r\n    } else {\r\n      this.jsonForm = {\r\n        components: []\r\n      };\r\n    }\r\n  }\r\n  getPageAPi(url) {\r\n    this.service.getAllPage(url).subscribe((result: any) => {\r\n      if (result) {\r\n        this.formData = result.data;\r\n        this.formDetails.patchValue(this.formData);\r\n        this.service.setFormData(this.formData);\r\n        this.layout = this.formData && this.formData.layouttype ? this.formData.layouttype : '';\r\n        this.jsonForm = this.formData.templatejson ? this.formData.templatejson : [];\r\n        this.setTimetoGetPage();\r\n      }\r\n    });\r\n  }\r\n  setTimetoGetPage() {\r\n    setTimeout(() => {\r\n      if (this.pageTypeList && this.pageTypeList.length) {\r\n        const dName = this.pageTypeList.filter(key => key.refkey === this.formData.pagetype);\r\n        if (dName.length) {\r\n          this.setTooltip(dName[0]['displayvalue']);\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  getAuthorisedTabs(page?: any) {\r\n    if (page) {\r\n      if (page[0].lookupkey === 'BGP' || page[0].lookupkey === 'BUSP') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.label === 'GRID FIELDS' || a.label === 'GRID CONFIGURATION'\r\n        );\r\n      } else if (page[0].lookupkey === 'ATPBDM') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.label === 'FORM FIELDS' || a.label === 'DESIGN PAGE'\r\n        );\r\n      } else if (page[0].lookupkey === 'CP') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.routerLink === 'routing-config'\r\n        );\r\n      } else if (page[0].lookupkey === 'BTP') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.routerLink === 'tab-config'\r\n        );\r\n      } else if (page[0].lookupkey === 'FFP') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.label === 'DESIGN PAGE'\r\n        );\r\n      } else if (page[0].lookupkey === 'RBTP') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.routerLink === 'ribbon-tab-config'\r\n        );\r\n      } else if (page[0].lookupkey === 'DR') {\r\n        this.authorisedTabs = this.pageBuildertabs.filter(\r\n          a => a.label === 'BASIC PAGE INFORMATION' || a.label === 'FORM FIELDS' || a.label === 'RIBBON DESIGN PAGE'\r\n        );\r\n      }\r\n    }\r\n    this.service.authorisedTabs = this.authorisedTabs;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscribeFormData.unsubscribe();\r\n    if (this.canChangeFormData) {\r\n      this.service.setFormData('');\r\n    }\r\n    this.service.setBasicData('');\r\n  }\r\n\r\n  // loadDropDowns(): void {\r\n  //   this.dropdownService.getDropDownValues('page').subscribe(result => {\r\n  //     this.pageTypeList = result['data'];\r\n  //   });\r\n  // }\r\n\r\n  loadForm(): void {\r\n    this.formDetails = this.formBuilder.group({\r\n      pagename: ['', Validators.required],\r\n      id: [''],\r\n      description: ['', Validators.required],\r\n      pagetype: ['', Validators.required],\r\n      organizationid: ['Select-ALL', Validators.required], // this.auth.getOrgID()\r\n      modulekey: [''],\r\n      submodulekey: ['']\r\n    });\r\n  }\r\n\r\n  loadSchemas() {\r\n    this.service.getSchema().subscribe(result => {\r\n      this.schemaList = result['data'];\r\n    });\r\n  }\r\n\r\n  saveLayout() {\r\n    const formDetails = this.formData;\r\n    formDetails.layouttype = this.layout;\r\n    if (this.id) {\r\n      formDetails.id = this.id;\r\n    }\r\n\r\n    this.service.createPage(formDetails).subscribe(result => {\r\n      if (!this.id) {\r\n        const data = result['data'];\r\n        if (result && Object.keys(data).length) {\r\n          const id = data.id ? data.id : '';\r\n          if (id) {\r\n            this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n          }\r\n        }\r\n      }\r\n      this.alert.success('Page saved successfully');\r\n    });\r\n  }\r\n\r\n  resetForm: any = () => {\r\n    this.router.navigate(this.id ? ['../../list'] : ['../'], {\r\n      relativeTo: this.route\r\n    });\r\n  };\r\n\r\n  goToDesignPage(): void {\r\n    if (!this.id) {\r\n      const data = this.formDetails.getRawValue();\r\n      this.service.setFormData(data);\r\n    } else {\r\n      if (this.formData) {\r\n        this.service.setBasicData(this.formDetails.getRawValue());\r\n      }\r\n    }\r\n  }\r\n\r\n  // showDesign() {\r\n  //   this.isShowDesign = !this.isShowDesign;\r\n  // }\r\n\r\n  formSubmit: any = () => {\r\n    const formDetails = this.formData;\r\n    console.log(this.jsonForm);\r\n    formDetails.templatejson = JSON.stringify(this.jsonForm);\r\n    if (this.id) {\r\n      formDetails.id = this.id;\r\n    }\r\n    this.service.createPage(formDetails).subscribe(pages => {\r\n      if (!this.id) {\r\n        if (pages && Object.keys(pages['data']).length) {\r\n          const id = pages['data'].id ? pages['data'].id : '';\r\n          if (id) {\r\n            this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n          }\r\n        }\r\n      }\r\n      this.alert.success('Page saved successfully');\r\n    });\r\n  };\r\n\r\n  setTooltip(displayValue) {\r\n    this.selectedPageValue = displayValue;\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getOrgList() {\r\n    this.service.getAllOrganisations().subscribe(res => {\r\n      if (res && res['data'].length) {\r\n        this.orgList = res['data'].sort((a, b) => a?.name?.localeCompare(b?.name));\r\n        this.orgList.length === 1\r\n          ? this.formDetails.patchValue({ organizationid: this.orgList[0].id })\r\n          : this.formDetails.patchValue({ organizationid: 'Select-ALL' });\r\n      } else {\r\n        this.orgList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  subscribeToPageDesign(componentRef) {\r\n    if (!(componentRef instanceof DesignPageComponent)) {\r\n      return;\r\n    }\r\n\r\n    const designPage: DesignPageComponent = componentRef;\r\n    this.onlineUserListSubscription = designPage.onlineUserList.subscribe(event => this.onlineUserList(event, this));\r\n    this.updateNotificationSubscription = designPage.updateNotification.subscribe(event =>\r\n      this.showUpdateNotification(event, this)\r\n    );\r\n  }\r\n\r\n  unsubscribeToPageDesign() {\r\n    console.log('Unsubscribing...');\r\n    if (this.onlineUserListSubscription) {\r\n      this.onlineUserListSubscription.unsubscribe();\r\n    }\r\n    if (this.updateNotificationSubscription) {\r\n      this.updateNotificationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  showUpdateNotification(event, _this) {\r\n    console.log(`Socket ${event}`);\r\n    _this.updateMessage = event;\r\n    setTimeout(() => {\r\n      _this.updateMessage = null;\r\n    }, 5000);\r\n  }\r\n\r\n  closeUpdateNotification() {\r\n    this.updateMessage = null;\r\n  }\r\n\r\n  onlineUserList(event, _this) {\r\n    const userList = event.map(el => el.user);\r\n    console.log(`Socket ${userList}`);\r\n\r\n    const finUserIndex = userList.findIndex(el => el.id === _this.logedInUser.id);\r\n\r\n    if (finUserIndex > -1) {\r\n      userList.splice(finUserIndex, 1);\r\n    }\r\n\r\n    const item: { shortNameUser: Array<any>; fullNameUser: Array<any> } = {\r\n      shortNameUser: [],\r\n      fullNameUser: []\r\n    };\r\n\r\n    for (let i = 0; i < userList.length; i++) {\r\n      const element = {\r\n        shortName: userList[i].firstname.split('')[0].toUpperCase() + userList[i].lastname.split('')[0].toUpperCase(),\r\n        fullName: `${userList[i].firstname} ${userList[i].lastname}`\r\n      };\r\n\r\n      if (i >= 2) {\r\n        item.fullNameUser.push(element);\r\n      } else {\r\n        item.shortNameUser.push(element);\r\n      }\r\n    }\r\n\r\n    _this.onlineUsersList = item;\r\n\r\n    console.log(`Socket ${_this.onlineUsersList}`);\r\n  }\r\n  getChange(text) {\r\n    this.checked2 = text;\r\n    if (this.checked2) {\r\n      this.labelText = 'Locked';\r\n    } else {\r\n      this.labelText = 'Unlocked';\r\n    }\r\n    this.updatePageStatus();\r\n  }\r\n  updatePageStatus() {\r\n    const inputRequest = {\r\n      locked: this.checked2 ? true : false\r\n    };\r\n    this.service.editPageStatus(inputRequest, this.formData.pageid).subscribe(() => {\r\n      if (this.checked2) {\r\n        this.alert.success('Page is locked!');\r\n      } else {\r\n        this.alert.success('Page is Unlocked!');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"position-relative\">\r\n  <div class=\"activepages\" *ngIf=\"id\">\r\n    <h5>{{ labelText }}</h5>\r\n    <p-inputSwitch\r\n      name=\"checkedChange\"\r\n      [(ngModel)]=\"checked2\"\r\n      inputId=\"checkedChange\"\r\n      (onChange)=\"getChange($event.checked)\"></p-inputSwitch>\r\n    <label aria-labelledby=\"checkedChange\" class=\"sr-only\">Locked / Unlocked</label>\r\n  </div>\r\n  <div class=\"wrk-user-list-wrp\">\r\n    <div class=\"wrk-user-list\" *ngFor=\"let item of onlineUsersList.shortNameUser\">\r\n      <span class=\"wrk-user-name text-uppercase\">{{ item.shortName }}</span>\r\n      <span class=\"wrk-user-tooltip\">{{ item.fullName }}</span>\r\n    </div>\r\n\r\n    <div class=\"wrk-user-list\" *ngIf=\"onlineUsersList.fullNameUser.length\">\r\n      <span class=\"wrk-user-name text-uppercase\">+{{ onlineUsersList.fullNameUser.length }}</span>\r\n      <span class=\"wrk-user-tooltip\">\r\n        <p *ngFor=\"let item of onlineUsersList.fullNameUser\">{{ item.fullName }}</p>\r\n      </span>\r\n    </div>\r\n    <div class=\"working-alert\" *ngIf=\"updateMessage\">\r\n      <div class=\"wrk-alert-wrp\">\r\n        <span>{{ updateMessage }}</span>\r\n        <span class=\"wrk-alert-close\" (click)=\"closeUpdateNotification()\"\r\n          ><i class=\"fa fa-times\" aria-hidden=\"true\"></i\r\n        ></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"intakesteps mt-2\">\r\n    <p-steps [model]=\"authorisedTabs\" [(activeIndex)]=\"activeIndex\" [readonly]=\"false\" (activeIndexChange)=\"onActiveIndexChange($event)\"></p-steps>\r\n  </div>\r\n  <router-outlet (activate)=\"subscribeToPageDesign($event)\" (deactivate)=\"unsubscribeToPageDesign()\"></router-outlet>\r\n</div>\r\n","export class DataSourceServiceConfig {\r\n    public static EndPoint = {\r\n        Setting: {\r\n          getOrganizationDbs:'/database/dataSource/getOrganizationDbs',\r\n          updateData:'/database/DataSource/addOrUpdate',\r\n          getList:'/database/getSchemasByDB/{dbaliasname}',\r\n          schemaCheck:'/database/organization/{organizationid}/{dbaliasname}',\r\n          updateSchema:'/database/addOrganizationSchemaByDB  '\r\n        }\r\n      };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataSourceServiceConfig } from '../url/data-source-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSourceService {\r\n    httpService: any;\r\n\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n        if (res) {\r\n          this.httpService = res['HTTPSERVICE']\r\n        }\r\n      })\r\n }\r\n getOrganizationDbs() {\r\n   return this.httpService.get(DataSourceServiceConfig.EndPoint.Setting.getOrganizationDbs);\r\n }\r\n getSchema(dbAliasName:string) {\r\n   return this.httpService.get(DataSourceServiceConfig.EndPoint.Setting.getList.replace('{dbaliasname}', dbAliasName));\r\n }\r\n SchemaCheck(id,dbaliasname){\r\n   return this.httpService.get(DataSourceServiceConfig.EndPoint.Setting.schemaCheck.replace('{organizationid}', id).replace('{dbaliasname}', dbaliasname));\r\n }\r\n updateData(data){\r\n     return this.httpService.post(DataSourceServiceConfig.EndPoint.Setting.updateData, data);\r\n }\r\n updateSchemaList(data){\r\n   return this.httpService.post(DataSourceServiceConfig.EndPoint.Setting.updateSchema, data);\r\n }\r\n}\r\n","export const documentJson = [\r\n  {\r\n    doc_id: 1,\r\n    doc_name: 'License',\r\n    supported_types: ['png', 'jpg', 'pdf'],\r\n    multi_page: false,\r\n    mappings: [\r\n      {\r\n        label: 'First Name',\r\n        attr: 'first_name'\r\n      },\r\n      {\r\n        label: 'Middle Name',\r\n        attr: 'middle_name'\r\n      },\r\n      {\r\n        label: 'Last Name',\r\n        attr: 'last_name'\r\n      },\r\n      {\r\n        label: 'Age',\r\n        attr: 'age'\r\n      },\r\n      {\r\n        label: 'Address',\r\n        attr: 'address'\r\n      },\r\n      {\r\n        label: 'Date Of Birth',\r\n        attr: 'date_of_birth'\r\n      },\r\n      {\r\n        label: 'Sex',\r\n        attr: 'sex'\r\n      }\r\n    ],\r\n    accuracy_acceptance_level_pcnt: 90,\r\n    purpose: ['Address Proof', 'ID Proof']\r\n  },\r\n  {\r\n    doc_id: 2,\r\n    doc_name: 'Aadhar',\r\n    supported_types: ['png', 'jpg', 'pdf'],\r\n    multi_page: false,\r\n    mappings: [\r\n      {\r\n        label: 'First Name',\r\n        attr: 'first_name'\r\n      },\r\n      {\r\n        label: 'Middle Name',\r\n        attr: 'middle_name'\r\n      },\r\n      {\r\n        label: 'Last Name',\r\n        attr: 'last_name'\r\n      },\r\n      {\r\n        label: 'Age',\r\n        attr: 'age'\r\n      },\r\n      {\r\n        label: 'Address',\r\n        attr: 'address'\r\n      },\r\n      {\r\n        label: 'Date Of Birth',\r\n        attr: 'date_of_birth'\r\n      },\r\n      {\r\n        label: 'Sex',\r\n        attr: 'sex'\r\n      }\r\n    ],\r\n    accuracy_acceptance_level_pcnt: 90,\r\n    purpose: ['Address Proof', 'ID Proof']\r\n  },\r\n  {\r\n    doc_id: 3,\r\n    doc_name: 'Pan',\r\n    supported_types: ['png', 'jpg', 'pdf'],\r\n    multi_page: false,\r\n    mappings: [\r\n      {\r\n        label: 'First Name',\r\n        attr: 'first_name'\r\n      },\r\n      {\r\n        label: 'Middle Name',\r\n        attr: 'middle_name'\r\n      },\r\n      {\r\n        label: 'Last Name',\r\n        attr: 'last_name'\r\n      },\r\n      {\r\n        label: 'Age',\r\n        attr: 'age'\r\n      },\r\n      {\r\n        label: 'Address',\r\n        attr: 'address'\r\n      },\r\n      {\r\n        label: 'Date Of Birth',\r\n        attr: 'date_of_birth'\r\n      },\r\n      {\r\n        label: 'Sex',\r\n        attr: 'sex'\r\n      }\r\n    ],\r\n    accuracy_acceptance_level_pcnt: 90,\r\n    purpose: ['Address Proof', 'ID Proof']\r\n  },\r\n  {\r\n    doc_id: 4,\r\n    doc_name: 'Mediciad Redetermination Form',\r\n    supported_types: ['jpg', 'pdf'],\r\n    multi_page: true,\r\n    mappings: [\r\n      {\r\n        label: 'First Name',\r\n        attr: 'first_name'\r\n      },\r\n      {\r\n        label: 'Middle Name',\r\n        attr: 'middle_name'\r\n      },\r\n      {\r\n        label: 'Last Name',\r\n        attr: 'last_name'\r\n      },\r\n      {\r\n        label: 'Age',\r\n        attr: 'age'\r\n      },\r\n      {\r\n        label: 'Address Line1',\r\n        attr: 'address_line1'\r\n      },\r\n      {\r\n        label: 'Address Line2',\r\n        attr: 'address_line2'\r\n      },\r\n      {\r\n        label: 'State',\r\n        attr: 'state'\r\n      },\r\n      {\r\n        label: 'City',\r\n        attr: 'city'\r\n      },\r\n      {\r\n        label: 'County',\r\n        attr: 'county'\r\n      },\r\n      {\r\n        label: 'Contry',\r\n        attr: 'contry'\r\n      },\r\n      {\r\n        label: 'Date Of Birth',\r\n        attr: 'date_of_birth'\r\n      },\r\n      {\r\n        label: 'Sex',\r\n        attr: 'sex'\r\n      }\r\n    ],\r\n    acceptable_accuracy_pcnt: 90,\r\n    purpose: ['New Redetermination']\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\nimport { PageBuilderAddURL } from '../../../@core/url/page-builder-add-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryParamsService {\r\n  httpService: any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  getSchemaList(orgid, dbAliasName: string) {\r\n    return this.httpService.get(PageBuilderAddURL.EndPoints.db.schemaList.replace('{organizationid}', orgid).replace('{dbstring}', dbAliasName));\r\n  }\r\n\r\n  getTableBySchemaName(schema: string, dbAliasName: string) {\r\n    return this.httpService.get(PageBuilderAddURL.EndPoints.db.tableBySchemaName.replace('{schema}', schema).replace('{dbstring}', dbAliasName));\r\n  }\r\n\r\n  getTableFields(schema: string, table: string, dbAliasName: string, pageType: string) {\r\n    let url: any;\r\n    url = PageBuilderAddURL.EndPoints.db.tableFields\r\n      .replace('{table}', table)\r\n      .replace('{schema}', schema)\r\n      .replace('{dbstring}', dbAliasName)\r\n      .concat('?includeAutoIncrementColumn=true&includeCreateColumns=true&includeUpdateColumns=true');\r\n    return this.httpService.get(url);\r\n  }\r\n\r\n  getColumnsOfRelatedTables(relatedTables: Array<any>) {\r\n    return this.httpService.post(PageBuilderAddURL.EndPoints.db.fieldsOfRelatedTable, relatedTables);\r\n  }\r\n\r\n  getRelatedTableFields(table: string, schema: string, dbAliasName: string) {\r\n    return this.httpService.get(\r\n      PageBuilderAddURL.EndPoints.db.relatedTableFields.replace('{table}', table).replace('{schema}', schema).replace('{dbstring}', dbAliasName)\r\n    );\r\n  }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { DataSourceService } from '../../../@core/services/data-source.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';\r\nimport dataGrid from '../@core/dataGrid.json';\r\nimport { documentJson } from './JSON.const';\r\nimport { QueryParamsService } from './query-params.service';\r\n\r\n@Component({\r\n  selector: 'app-query-params',\r\n  templateUrl: './query-params.component.html',\r\n  styleUrls: ['./query-params.component.scss']\r\n})\r\nexport class QueryParamsComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  @ViewChildren('selectAllCheckBox') selectAllCheckBox: QueryList<ElementRef>;\r\n  schemaList: any;\r\n  tableList: any;\r\n  relatedTableList: [];\r\n  autoFieldMappingForm!: UntypedFormGroup;\r\n  autoFieldMappingArray!: UntypedFormArray;\r\n  selectedSchema: any;\r\n  selectedFields: Array<any> = [];\r\n  unselectedFields: Array<any> = [];\r\n  tableFields: any = {};\r\n  tempTableFields: any = {};\r\n  leftTableFields = [];\r\n  rightTableFields = [];\r\n  selectedTableList: Array<any> = [];\r\n  selectedRelatedTableList: Array<any> = [];\r\n  fieldMapping = [];\r\n  totalFields!: number;\r\n  selectedTable!: string;\r\n  allFieldList = {};\r\n  noOfColumns = 1;\r\n  public form: any;\r\n  fieldDatatype!: { desc: string; value: string }[];\r\n  formData: any;\r\n  tableSchemaConfig: any;\r\n  tableSelection: any;\r\n  relatedTableSelection: Array<any> = [];\r\n  searchParams: any;\r\n  @Input() isDynamicSearchBaseQuery!: boolean;\r\n  @Input() isGridPage!: boolean;\r\n  @Input() tableData: any;\r\n  @Output() formDataChanged: EventEmitter<any> = new EventEmitter();\r\n  id: any = '';\r\n  tablelisturl = '/api/database';\r\n  nColumns = [\r\n    {\r\n      key: 1,\r\n      value: 1\r\n    },\r\n    {\r\n      key: 2,\r\n      value: 2\r\n    },\r\n    {\r\n      key: 3,\r\n      value: 3\r\n    },\r\n    {\r\n      key: 4,\r\n      value: 4\r\n    }\r\n  ];\r\n  leftSelectionItem: Array<any> = [];\r\n  rightSelectionItem: Array<any> = [];\r\n  queryParamForm!: UntypedFormGroup;\r\n  queryParamFormArray!: UntypedFormArray;\r\n  dublicateSchemaList: any[] = [];\r\n  dublicateTableList: any[] = [];\r\n  searchParamLength: any;\r\n  assetList: any;\r\n  tableFieldList: any;\r\n  relatedTableFieldList: any;\r\n  selectedTableField: Array<any> = [];\r\n  relatedSelectedTableField: Array<any> = [];\r\n  requiredField: Array<any> = [];\r\n  selectedPage: any;\r\n  basicPageInformation: any;\r\n  showSearchInputFields: boolean;\r\n  // pageTypeList: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  queryParamsService: QueryParamsService;\r\n  private _localstore: LocalService;\r\n  alert: AlertService;\r\n  pageBuilderService: PageBuilderService;\r\n  filteredtableFieldList: any;\r\n  authService: AuthService;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  gridConfigFormArray = [];\r\n  gridConfigList: any;\r\n  fieldArr = [];\r\n  isOCRChecked: boolean;\r\n  selectedDocumentType: any;\r\n  ocrFields: any;\r\n  documentType: Array<any> = documentJson;\r\n  dataGrid: any;\r\n  isNewPage: boolean;\r\n  isSchemaChanged: boolean;\r\n  isRelatableTableSelected: boolean;\r\n  isSaveGridFields: boolean;\r\n  previousSelectedColumns: any[] = [];\r\n  dataSourceService: DataSourceService;\r\n  dbAliasName: string;\r\n  filteredrelatedtableFieldList: any;\r\n  RBACORG: any;\r\n  constructor(\r\n    public injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    public cdRef: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private _storeservice: DataStoreService,\r\n    private router: Router,\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dataSourceService = injector.get<DataSourceService>(DataSourceService);\r\n    this.queryParamsService = injector.get<QueryParamsService>(QueryParamsService);\r\n    this._localstore = injector.get<LocalService>(LocalService);\r\n    this.alert = injector.get<AlertService>(AlertService);\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.dataGrid = dataGrid;\r\n    this.requiredField = [\r\n      {\r\n        name: 'True',\r\n        value: 'true'\r\n      },\r\n      {\r\n        name: 'False',\r\n        value: 'false'\r\n      }\r\n    ];\r\n    this.pageBuilderAddService.currentPageType.subscribe(page => (this.selectedPage = page && typeof page === \"string\" ? JSON.parse(page) : page));\r\n    this.showSearchInputFields = false;\r\n    this.isSchemaChanged = false;\r\n    this.isRelatableTableSelected = false;\r\n    this.isSaveGridFields = false;\r\n    this.isNewPage = this._localstore.getObj('CREATE PAGE');\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.basicPageInformation = this._localstore.getObj('PAGEDESIGN_BASICINFO');\r\n    this._localstore.setItem('isTableFieldsSaved', false);\r\n    this._localstore.setItem('isSchemaSelected', false);\r\n    this._localstore.setItem('isTableSelected', false);\r\n    this._localstore.setItem('isColumnChecked', false);\r\n    this._localstore.setItem('isColumnChanged', false);\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.loadForm();\r\n    this.dbAliasName = await this.getOrganizationDbs();\r\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.getSchemaList();\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n    if (this.basicPageInformation.pagetype === 'BUSP') {\r\n      this.showSearchInputFields = true;\r\n    }\r\n    if (!this.id) {\r\n      const validation = this.validationPage();\r\n      if (!validation) {\r\n        this.router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this.route });\r\n        return this.alert.error('Please fill in all the required fields.');\r\n      }\r\n    }\r\n\r\n    this.fieldDatatype = [\r\n      { desc: 'Text Field', value: 'textfield' },\r\n      { desc: 'Text Area', value: 'textarea' },\r\n      {\r\n        desc: 'Number',\r\n        value: 'number'\r\n      },\r\n      {\r\n        desc: 'Date',\r\n        value: 'datetime'\r\n      },\r\n      {\r\n        desc: 'Password',\r\n        value: 'password'\r\n      },\r\n      {\r\n        desc: 'Checkbox',\r\n        value: 'checkbox'\r\n      },\r\n      {\r\n        desc: 'Select Boxes',\r\n        value: 'selectboxes'\r\n      },\r\n      {\r\n        desc: 'Select',\r\n        value: 'select'\r\n      },\r\n      {\r\n        desc: 'Radio',\r\n        value: 'radio'\r\n      },\r\n      {\r\n        desc: 'Button',\r\n        value: 'button'\r\n      }\r\n    ];\r\n\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      // const gridConfigTest = JSON.parse(data.gridconfig);\r\n      if (this.formData.id === '') {\r\n        this.selectedSchema = '';\r\n        this.resetTableFields();\r\n      }\r\n      if (this.formData.searchparams && typeof this.formData.searchparams === 'string') {\r\n        this.searchParams = JSON.parse(this.formData.searchparams);\r\n      } else {\r\n        this.searchParams = this.formData.searchparams ? this.formData.searchparams : {};\r\n      }\r\n\r\n      this.baseQueryCheck();\r\n      if (this.router.url.includes('grid-field') && !this.isSaveGridFields) {\r\n        this.schemaTableCheck();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getOrganizationDbs() {\r\n    return this.dataSourceService.getOrganizationDbs()\r\n      .toPromise()\r\n      .then(\r\n        response => {\r\n          return response['data']['dbaliasname'];\r\n        },\r\n        _error => this.alert.error(AppConstants.errorMessage)\r\n      )\r\n  }\r\n\r\n  baseQueryCheck() {\r\n    if (this.isDynamicSearchBaseQuery) {\r\n      if (\r\n        this.searchParams &&\r\n        this.searchParams.baseQuery &&\r\n        (this.selectedPage[0].lookupkey === 'DSP' || this.selectedPage[0].lookupkey === 'BUSP')\r\n      ) {\r\n        this.tableSchemaConfig =\r\n          typeof this.searchParams.baseQuery === 'string'\r\n            ? JSON.parse(this.searchParams.baseQuery)\r\n            : this.searchParams.baseQuery;\r\n      }\r\n    } else {\r\n      this.tableSchemaConfig =\r\n        this.formData.tableschemaconfig && typeof this.formData.tableschemaconfig === 'string'\r\n          ? JSON.parse(this.formData.tableschemaconfig)\r\n          : this.formData.tableschemaconfig;\r\n    }\r\n  }\r\n\r\n  schemaTableCheck() {\r\n    if (this.tableSchemaConfig && Object.keys(this.tableSchemaConfig).length) {\r\n      this.setTableSchemaConfig();\r\n      this.setAutoFieldMapping();\r\n      this._localstore.setItem('isTableFieldsSaved', true);\r\n    }\r\n    if (this.searchParams && this.searchParams.searchParamFormArray && this.searchParams.searchParamFormArray.length) {\r\n      this.setQueryParams();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  async getSchemaList() {\r\n    if (this.dbAliasName) {\r\n      this.queryParamsService.getSchemaList(this.orgId, this.dbAliasName).subscribe(\r\n        result => {\r\n          this.schemaList = result['data'].map(data =>\r\n            data.name.includes('dmi') ? { ...data, label: 'jjis' } : { ...data, label: data.name }\r\n          );\r\n          this.dublicateSchemaList = [...this.schemaList];\r\n        },\r\n        _err => {\r\n          this.selectedSchema = '';\r\n          this.resetTableFields();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(\r\n      this.autoFieldMappingForm.controls['autoFieldMappingArray']['controls'],\r\n      event.previousIndex,\r\n      event.currentIndex\r\n    );\r\n  }\r\n\r\n  loadForm() {\r\n    this.autoFieldMappingForm = this.formBuilder.group({\r\n      autoFieldMappingArray: this.formBuilder.array([this.createAutoFieldMapping()])\r\n    });\r\n    this.queryParamForm = this.formBuilder.group({\r\n      queryParamFormArray: this.formBuilder.array([this.createQueryParams()])\r\n    });\r\n  }\r\n\r\n  createQueryParams() {\r\n    return this.formBuilder.group({\r\n      paramName: [''],\r\n      label: [''],\r\n      logicalOperators: [''],\r\n      operators: [''],\r\n      tableName: [''],\r\n      schema: ['']\r\n    });\r\n  }\r\n\r\n  searchColumnFields(event) {\r\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\r\n    this.filteredtableFieldList = this.tableFieldList.filter(a => a?.name?.toLowerCase().startsWith(value));\r\n    this.filteredrelatedtableFieldList = this.relatedTableFieldList.map(tableField => {\r\n      return {\r\n        table: tableField.table,\r\n        columns: tableField.columns.filter(field => field?.name?.toLowerCase().startsWith(value))\r\n      };\r\n    });\r\n    this.selectAllCheckBox.forEach(element => {\r\n      element.nativeElement.checked = false;\r\n    });\r\n  }\r\n\r\n  clearSearch(inputElement: HTMLInputElement): void {\r\n    inputElement.value = '';\r\n    this.searchColumnFields({ target: inputElement });\r\n  }\r\n\r\n  setQueryParams() {\r\n    const control = <UntypedFormArray>this.queryParamForm.controls['queryParamFormArray'];\r\n    control.controls = [];\r\n    this.searchParamLength = this.searchParams.searchParamFormArray.length;\r\n    this.searchParams.searchParamFormArray.forEach(x => {\r\n      control.push(this.buildQueryFormArray(x));\r\n    });\r\n  }\r\n\r\n  buildQueryFormArray(x): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      paramName: x.paramName ? x.paramName : '',\r\n      label: x.label ? x.label : '',\r\n      logicalOperators: x.logicalOperators ? x.logicalOperators : '',\r\n      operators: x.operators ? x.operators : '',\r\n      tableName: x.tableName ? x.tableName : '',\r\n      schema: x.schema ? x.schema : ''\r\n    });\r\n  }\r\n\r\n  setTableSchemaConfig() {\r\n    this.selectedSchema = this.tableSchemaConfig.schema;\r\n    this.selectedTableList = this.tableSchemaConfig.tablelist;\r\n    this.selectedRelatedTableList = this.tableSchemaConfig.selectedRelatedTableList;\r\n    this.getTables(this.selectedSchema);\r\n    if (typeof this.tableSchemaConfig === 'object') {\r\n      this.tableSelection = this.tableSchemaConfig.tablefields?.primary;\r\n    }\r\n    this.totalFields = this.tableSchemaConfig.fieldmapping.length;\r\n    this.tableFields = this.tableSchemaConfig.tablefields;\r\n    this.tempTableFields = this.tableSchemaConfig.tablefields;\r\n    this.rightTableFields = this.tableFields[this.tableSelection];\r\n    this.fieldMapping = this.tableSchemaConfig.fieldmapping;\r\n    this.previousSelectedColumns = this.tableSchemaConfig.fieldmapping;\r\n    this.previousSelectedColumns.length && this._localstore.setItem('isColumnChecked', true);\r\n    this.noOfColumns = this.tableSchemaConfig.noofcolumns ? this.tableSchemaConfig.noofcolumns : 1;\r\n    this.isOCRChecked = this.tableSchemaConfig.ocrchecked ? this.tableSchemaConfig.ocrchecked : false;\r\n    this.selectedDocumentType = this.tableSchemaConfig.selectedDocumentType\r\n      ? this.tableSchemaConfig.selectedDocumentType\r\n      : this.selectedDocumentType;\r\n    this.relatedTableList = this.tableSchemaConfig.relatedTableList;\r\n    this.getTableFields(this.tableSelection);\r\n    this.relatedTableSelection = this.tableSchemaConfig.selectedRelatedTableList;\r\n    this.getColumnsOfRelatedTables(this.relatedTableSelection);\r\n  }\r\n  createAutoFieldMapping() {\r\n    this.autoFieldMappingForm = this.formBuilder.group({\r\n      schema: ['', [Validators.required]],\r\n      tablename: ['', [Validators.required]],\r\n      field: ['', [Validators.required]],\r\n      label: ['', [Validators.required]],\r\n      datatype: ['', [Validators.required]],\r\n      required: false,\r\n      result: false,\r\n      criteria: false,\r\n      ocrkey: ['']\r\n    });\r\n  }\r\n\r\n  setAutoFieldMapping() {\r\n    const control = <UntypedFormArray>this.autoFieldMappingForm.controls['autoFieldMappingArray'];\r\n    control.controls = [];\r\n    if (this.fieldMapping.length) {\r\n      this.fieldMapping.forEach(x => {\r\n        control.push(this.buildAutoFieldMapping(x));\r\n      });\r\n    }\r\n  }\r\n\r\n  buildAutoFieldMapping(x): UntypedFormGroup {\r\n    const resultKey = x.hasOwnProperty('result') ? true : false;\r\n    // const criteriaKey = x.hasOwnProperty('criteria') ? true : false;\r\n    return this.formBuilder.group({\r\n      schema: this.selectedSchema ? this.selectedSchema : x.schema,\r\n      tablename: x.tablename ? x.tablename : '',\r\n      field: x.field ? x.field : '',\r\n      label: x.label ? x.label : '',\r\n      datatype: x.datatype ? x.datatype : '',\r\n      required: x.required ? x.required : false,\r\n      result: !resultKey ? true : x.result,\r\n      // criteria: !criteriaKey ? true : x.criteria,\r\n      criteria: x.criteria ? x.criteria : false,\r\n      ocrkey: x.ocrkey ? x.ocrkey : ''\r\n    });\r\n  }\r\n\r\n  toggleLeftSelection(value, item: number) {\r\n    if (value) {\r\n      if (this.leftSelectionItem.indexOf(item) === -1) {\r\n        this.leftSelectionItem.push(item);\r\n      }\r\n    } else {\r\n      const index = this.leftSelectionItem.indexOf(item);\r\n      if (index !== -1) {\r\n        this.leftSelectionItem.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  resetDropdownList(type) {\r\n    if (type === 'schema') {\r\n      this.schemaList = this.dublicateSchemaList;\r\n    }\r\n    else {\r\n      this.tableList = this.dublicateTableList;\r\n    }\r\n  }\r\n\r\n  clearSelectedColumnFields() {\r\n    const control = <UntypedFormArray>this.autoFieldMappingForm.controls['autoFieldMappingArray'];\r\n    control.controls = [];\r\n    this.selectAllCheckBox.forEach(element => {\r\n      element.nativeElement.checked = false;\r\n    });\r\n    this.filteredtableFieldList.map(a => (a.active = false));\r\n    for (const tableField of this.filteredrelatedtableFieldList) {\r\n      for (const field of tableField.columns) {\r\n        field.active = field.disabled;\r\n      }\r\n    }\r\n    this.selectedTableField = [];\r\n  }\r\n\r\n  checkAllColumnFields(event) {\r\n    this.filteredtableFieldList.map(a => (a.active = event.target.checked));\r\n    if (event.target.checked) {\r\n      const control = <UntypedFormArray>this.autoFieldMappingForm.controls['autoFieldMappingArray'];\r\n      control.controls = [];\r\n      this.selectedTableField = [];\r\n      for (const field of this.filteredtableFieldList) {\r\n        this.selectedTableFields(field, 'all');\r\n      }\r\n\r\n      for (const tableField of this.filteredrelatedtableFieldList) {\r\n        const table = tableField.table;\r\n        for (const field of tableField.columns) {\r\n          if (!field.disabled) {\r\n            field.active = true;\r\n            this.selectedRelatedTableFields(table, field, 'all');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this._localstore.setItem('isColumnChecked', false);\r\n      this.clearSelectedColumnFields();\r\n    }\r\n  }\r\n\r\n  selectedRelatedTableFields(table: string, field?: any, status?: string) {\r\n    field.related = true;\r\n    field.relatedTable = table;\r\n    this.selectedTableFields(field, status);\r\n  }\r\n\r\n  selectedTableFields(field?: any, status?: string) {\r\n    if (field) {\r\n      if (!this.selectedTableField.includes(field)) {\r\n        this.fieldIncludeCheck(status, field);\r\n        this._localstore.setItem('isColumnChecked', true);\r\n      } else {\r\n        const fieldIndex = this.selectedTableField.indexOf(field);\r\n        if (fieldIndex !== -1) {\r\n          if (status !== 'all') {\r\n            field.active = false;\r\n          }\r\n          this.checkFields();\r\n          const index = 1;\r\n          const isRightAdd = false;\r\n          this.selectedTableField.splice(fieldIndex, 1);\r\n          this.selectedTableField.length == 0 && this._localstore.setItem('isColumnChecked', false);\r\n          this.validateColumnChanged();\r\n          const selectedFields = this.selectedTableField.map(a => a.name);\r\n          this.getSelectedTableFields(selectedFields, isRightAdd, field.name, index, this.selectedTableField, field);\r\n        }\r\n      }\r\n    } else {\r\n      this.selectedTableField = [];\r\n    }\r\n  }\r\n\r\n  fieldIncludeCheck(status, field) {\r\n    if (status !== 'all') {\r\n      field.active = true;\r\n    }\r\n    this.checkFields();\r\n    this.selectedTableField.push(field);\r\n    this.validateColumnChanged();\r\n    if (field.related) {\r\n      const relatedTable = this.relatedSelectedTableField[field.relatedTable];\r\n      if (relatedTable) {\r\n        this.relatedSelectedTableField[field.relatedTable].push(field);\r\n      } else {\r\n        this.relatedSelectedTableField[field.relatedTable] = [field];\r\n      }\r\n    }\r\n    const selectedFields = this.selectedTableField.map(a => a.name);\r\n    const index = -1;\r\n    const isRightAdd = true;\r\n    this.getSelectedTableFields(selectedFields, isRightAdd, selectedFields, index, this.selectedTableField, field);\r\n  }\r\n  toggleRightSelection(value, item) {\r\n    if (value) {\r\n      if (this.rightSelectionItem.indexOf(item) === -1) {\r\n        this.rightSelectionItem.push(item);\r\n      }\r\n    } else {\r\n      const index = this.rightSelectionItem.indexOf(item);\r\n      if (index !== -1) {\r\n        this.rightSelectionItem.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelectedTableFields(data, isRightAdd, label, index = -1, fields?, fieldDetails?) {\r\n    this.rightTableFields = data;\r\n\r\n    if (fieldDetails) {\r\n      this.rightAddCheckField(isRightAdd, index, fieldDetails, data); /*Complexity splitted */\r\n    } else {\r\n      this.rightAddCheck(isRightAdd, index, label, data); /*Complexity splitted */\r\n    }\r\n\r\n    this.tableFields = {\r\n      primary: this.selectedTable,\r\n      relations: this.selectedRelatedTableList\r\n    };\r\n    fields.forEach(_field => {\r\n      this.fieldTablecheck(_field); /*Complexity splitted */\r\n    });\r\n    this.selectedTableList = this.tableFields ? Object.keys(this.tableFields) : [];\r\n\r\n    if (label.length && isRightAdd) {\r\n      let dataType: any;\r\n      label.forEach((item, index) => {\r\n        dataType = 'textfield';\r\n        const selectedField = this.allFieldList[this.selectedTable];\r\n        const autoFields = this.autoFieldMappingForm.getRawValue().autoFieldMappingArray;\r\n        const field = Object.keys(selectedField).find(key => selectedField[key] === item);\r\n        const selectedFields = this.selectedTableField.filter(list => (list.name === item && list.table_name === fields[index].table_name))[0];\r\n        if (selectedFields.type === 'integer' || selectedFields.type === 'smallint') {\r\n          dataType = 'number';\r\n        } else if (\r\n          selectedFields.type === 'timestamp with time zone' ||\r\n          selectedFields.type === 'timestamp without time zone' ||\r\n          selectedFields.type === 'timestamp(6) with time zone' ||\r\n          selectedFields.type === 'timestamp(6) without time zone'\r\n        ) {\r\n          dataType = 'datetime';\r\n        } else if ((this.basicPageInformation.pagetype === 'BGP' || this.basicPageInformation.pagetype === 'DR') && selectedFields.type === 'date') {\r\n          dataType = 'date';\r\n        } else if (this.basicPageInformation.pagetype === 'ATPBDM' && selectedFields.type === 'date') {\r\n          dataType = 'datetime';\r\n        } else if (selectedFields.type === 'boolean') {\r\n          dataType = 'checkbox';\r\n        } else if (selectedFields.type === 'text') {\r\n          dataType = 'textarea';\r\n        } else {\r\n          dataType = 'textfield';\r\n        }\r\n        this.businessNameCheck(selectedFields, autoFields, item, dataType, field); /*Complexity splitted */\r\n      });\r\n    }\r\n\r\n    this.totalFields = this.autoFieldMappingArray.length;\r\n  }\r\n\r\n  rightAddCheck(isRightAdd, index, label, data) {\r\n    if (!isRightAdd && index > -1) {\r\n      this.autoFieldMappingArray = this.autoFieldMappingForm.get('autoFieldMappingArray') as UntypedFormArray;\r\n      for (let i = this.autoFieldMappingArray.length - 1; i >= 0; i--) {\r\n        const item = this.autoFieldMappingArray.controls[i];\r\n        if (label.includes(item.value.field)) {\r\n          this.autoFieldMappingArray.removeAt(i);\r\n        }\r\n      }\r\n\r\n      this.queryParamFormArray = this.queryParamForm.get('queryParamFormArray') as UntypedFormArray;\r\n      for (let i = this.queryParamFormArray.length - 1; i >= 0; i--) {\r\n        const item = this.queryParamFormArray.controls[i];\r\n        if (label.includes(item.value.field)) {\r\n          this.queryParamFormArray.removeAt(i);\r\n        }\r\n      }\r\n\r\n      if (!data.length) {\r\n        this.tableFields = [];\r\n        this.selectedTableList = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  rightAddCheckField(isRightAdd, index, label, data) {\r\n    if (!isRightAdd && index > -1) {\r\n      this.autoFieldMappingArray = this.autoFieldMappingForm.get('autoFieldMappingArray') as UntypedFormArray;\r\n      for (let i = this.autoFieldMappingArray.length - 1; i >= 0; i--) {\r\n        const item = this.autoFieldMappingArray.controls[i];\r\n        if (label?.name == item.value.field && label?.table_name == item.value.tablename) {\r\n          this.autoFieldMappingArray.removeAt(i);\r\n        }\r\n      }\r\n\r\n      this.queryParamFormArray = this.queryParamForm.get('queryParamFormArray') as UntypedFormArray;\r\n      for (let i = this.queryParamFormArray.length - 1; i >= 0; i--) {\r\n        const item = this.queryParamFormArray.controls[i];\r\n        if (label?.name == item.value.field) {\r\n          this.queryParamFormArray.removeAt(i);\r\n        }\r\n      }\r\n\r\n      if (!data.length) {\r\n        this.tableFields = [];\r\n        this.selectedTableList = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldTablecheck(_field) {\r\n    const tableName = _field.table_name;\r\n    // const isRelated = _field.related;\r\n    // const table = isRelated ? this.tableFields[tableName] : this.tableFields[this.selectedTable];\r\n    const table = tableName ? this.tableFields[tableName] : this.tableFields[this.selectedTable];\r\n    if (table) {\r\n      table.push(_field.name);\r\n    } else {\r\n      // this.tableFields[isRelated ? tableName : this.selectedTable] = [_field.name];\r\n      this.tableFields[tableName] = [_field.name];\r\n    }\r\n  }\r\n\r\n  businessNameCheck(selectedFields, autoFields, item, dataType, field) {\r\n    let businessName = '';\r\n    if (selectedFields.business_name) {\r\n      businessName = selectedFields.business_name;\r\n    } else {\r\n      businessName = selectedFields.name;\r\n    }\r\n    // const tableName = selectedFields.relatedTable ? selectedFields.relatedTable : this.selectedTable;\r\n    const tableName = selectedFields.table_name ? selectedFields.table_name : this.selectedTable;\r\n    const isArrayExist = autoFields.find(\r\n      list => list.schema === this.selectedSchema && list.tablename === tableName && list.field == item\r\n    );\r\n    if (!isArrayExist) {\r\n      const obj = {\r\n        schema: this.selectedSchema,\r\n        tablename: tableName,\r\n        field: item,\r\n        label: businessName,\r\n        datatype: dataType,\r\n        required: false\r\n      };\r\n      this.autoFieldMappingArray = this.autoFieldMappingForm.get('autoFieldMappingArray') as UntypedFormArray;\r\n      this.autoFieldMappingArray.push(this.buildAutoFieldMapping(obj));\r\n\r\n      const queryObj = {\r\n        paramName: field,\r\n        label: item,\r\n        tableName: selectedFields.relatedTable ? selectedFields.relatedTable : this.selectedTable,\r\n        schema: this.selectedSchema,\r\n        logicalOperators: 'and',\r\n        operators: '='\r\n      };\r\n      this.queryParamFormArray = this.queryParamForm.get('queryParamFormArray') as UntypedFormArray;\r\n      this.queryParamFormArray.push(this.buildQueryFormArray(queryObj));\r\n    }\r\n  }\r\n\r\n  getTables(schema) {\r\n    this.resetTableFields();\r\n    this._localstore.setItem('isSchemaSelected', false);\r\n    this._localstore.setItem('isTableSelected', false);\r\n    this._localstore.setItem('isColumnChecked', false);\r\n    this._localstore.setItem('isTableFieldsSaved', false);\r\n    if (schema) {\r\n      this._localstore.setItem('isSchemaSelected', true);\r\n      this.tableFieldList = [];\r\n      this.filteredtableFieldList = [];\r\n      this.selectedSchema = schema;\r\n      this.queryParamsService.getTableBySchemaName(schema, this.dbAliasName).subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.tableList = result['data'];\r\n            this.dublicateTableList = this.tableList;\r\n          }\r\n        },\r\n        _err => {\r\n          this.tableList = [];\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getRelatedTablesFields(table: string, schema: string) {\r\n    this.queryParamsService.getRelatedTableFields(table, schema, this.dbAliasName).subscribe((result: any) => {\r\n      const relatedTables = result?.data;\r\n      if (relatedTables && relatedTables.length) {\r\n        this.relatedTableList = relatedTables.map(_relatedTable => {\r\n          return {\r\n            label: `${_relatedTable['relatedtable']}`,\r\n            value: _relatedTable\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  enableDataGrid(_event, table) {\r\n    for (const relatedTable of this.selectedRelatedTableList) {\r\n      if (table.relatedtable === relatedTable.relatedtable) {\r\n        relatedTable.showDataGrid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeSelectedRelatedTableColumns(tablename) {\r\n    this.filteredrelatedtableFieldList.map(r => {\r\n      if (r.table === tablename) {\r\n        r.columns.map(c => {\r\n          c.active ? (c['active'] = false) : c.active;\r\n        });\r\n      }\r\n    });\r\n\r\n    const selectedFieldArray = this.autoFieldMappingForm.get('autoFieldMappingArray') as UntypedFormArray;\r\n    const filteredArray = selectedFieldArray.controls.filter(control => control.value.tablename !== tablename);\r\n    selectedFieldArray.clear();\r\n    filteredArray.forEach(filteredControl => selectedFieldArray.push(filteredControl));\r\n\r\n    if (this.tableFields[tablename]) {\r\n      delete this.tableFields[tablename];\r\n    }\r\n    this.selectedTableField = this.selectedTableField.filter(c => !(c?.related && c?.relatedTable === tablename));\r\n  }\r\n\r\n  getColumnsOfRelatedTables(relatedTables: Array<any>) {\r\n    if (relatedTables.length < this.selectedRelatedTableList.length) {\r\n      const differences = [];\r\n      this.selectedRelatedTableList.forEach(rt => {\r\n        const matchingObject = relatedTables.find(mt => rt.relatedtable === mt.relatedtable);\r\n        if (!matchingObject) {\r\n          differences.push(rt);\r\n        }\r\n      });\r\n      this.removeSelectedRelatedTableColumns(differences[0].relatedtable);\r\n    }\r\n    this.selectedRelatedTableList = relatedTables;\r\n    if (this.selectedRelatedTableList) {\r\n      const tableDetails = relatedTables.map(_rt => {\r\n        return {\r\n          dbaliasname: this.dbAliasName,\r\n          table: _rt.relatedtable,\r\n          schema: _rt.relatedschema\r\n        };\r\n      });\r\n\r\n      this.coloumnNameCheck(tableDetails, relatedTables);\r\n    }\r\n  }\r\n  coloumnNameCheck(tableDetails, relatedTables) {\r\n    this.queryParamsService.getColumnsOfRelatedTables(tableDetails).subscribe((_tableDetails: any) => {\r\n      if (_tableDetails?.data) {\r\n        this.relatedTableFieldList = _tableDetails.data.map((_columns, _index) => {\r\n          _columns = _columns.map(_column => {\r\n            if (_column.name === relatedTables[_index].relatedcolumn) {\r\n              _column.disabled = true;\r\n              _column.active = true;\r\n              return _column;\r\n            }\r\n            const tableName = relatedTables[_index].relatedtable;\r\n            if (tableName) {\r\n              const tableActiveColumns: Array<string> = this.tableFields[tableName];\r\n              if (tableActiveColumns && tableActiveColumns.includes(_column.name)) {\r\n                _column.active = true;\r\n                this.selectedTableField.push(_column);\r\n              }\r\n            }\r\n            return _column;\r\n          });\r\n          return {\r\n            table: tableDetails[_index].table,\r\n            columns: _columns\r\n          };\r\n        });\r\n        this.filteredrelatedtableFieldList = this.relatedTableFieldList;\r\n      }\r\n    });\r\n  }\r\n\r\n  getTableFields(table, isSchemaChanged?: boolean) {\r\n    this.isSchemaChanged = isSchemaChanged;\r\n    this.unselectedFields = [];\r\n    this.selectedFields = [];\r\n    this.relatedTableFieldList = [];\r\n    this.relatedTableSelection = [];\r\n    this.selectedRelatedTableList = [];\r\n    const control = <UntypedFormArray>this.autoFieldMappingForm.controls['autoFieldMappingArray'];\r\n    control.controls = [];\r\n    control.setValue([]);\r\n    this.selectedTableField = [];\r\n    this.filteredtableFieldList = [];\r\n    this.filteredrelatedtableFieldList = [];\r\n    this.tableFieldList = [];\r\n    this._localstore.setItem('isTableSelected', false);\r\n    this._localstore.setItem('isColumnChecked', false);\r\n    this._localstore.setItem('isTableFieldsSaved', false);\r\n    if (table) {\r\n      this._localstore.setItem('isTableSelected', true);\r\n      this.selectedTable = table;\r\n      this.getRelatedTablesFields(this.selectedTable, this.selectedSchema);\r\n      this.queryParamsService\r\n        .getTableFields(this.selectedSchema, this.selectedTable, this.dbAliasName, this.basicPageInformation.pagetype)\r\n        .subscribe((result: any) => {\r\n          if (result && result.data) {\r\n            this.tableFieldList = result['data'].map(field => ({\r\n              ...field,\r\n              type: field.type.toLowerCase()\r\n            }));\r\n            this.isCheckCondition();\r\n            this.selectedTableField = this.tableFieldList.filter(x => x.active === true);\r\n            this.allFieldList[this.selectedTable] = {};\r\n            const tableDesc = this.tableFieldList.map(\r\n              item => (this.allFieldList[this.selectedTable][item.name] = item.name)\r\n            );\r\n\r\n            if (this.isSchemaChanged && !this.selectedRelatedTableList.length && this.tableSchemaConfig?.tablefields?.primary\r\n              && this.tableSchemaConfig?.tablefields?.primary === this.selectedTable) {\r\n              this.selectedTableField = [];\r\n              // this.fieldMapping = this.tableSchemaConfig.fieldmapping.filter(field => this.tableSchemaConfig?.tablefields?.primary === this.selectedTable\r\n              //   && field.tablename === this.selectedTable);\r\n              for (const field of this.tableFieldList) {\r\n                if (field.table_name === this.tableSchemaConfig?.tablefields?.primary && field.active) {\r\n                  this.selectedTableFields(field)\r\n                }\r\n                else {\r\n                  field.active = false\r\n                }\r\n              }\r\n            }\r\n            else if (this.isSchemaChanged && !this.selectedRelatedTableList.length && this.tableSchemaConfig?.tablefields?.primary\r\n              && this.tableSchemaConfig?.tablefields?.primary !== this.selectedTable) {\r\n              this.selectedTableField = [];\r\n              this.tableFieldList.forEach(field => {\r\n                if (field.table_name !== this.tableSchemaConfig?.tablefields?.primary) {\r\n                  field.active = false;\r\n                }\r\n              })\r\n            }\r\n            // const activeFields = this.tableFieldList.filter(field => field.active);\r\n            // if (activeFields.length) {\r\n            //   this.fieldMapping.forEach(x => {\r\n            //     control.push(this.buildAutoFieldMapping(x));\r\n            //   });\r\n            // }\r\n            this.filteredtableFieldList = this.tableFieldList;\r\n            this.previousSelectedColumns.length && this._localstore.setItem('isColumnChecked', true);\r\n            this.checkFields();\r\n            if (this.tableFields && this.tableFields[this.selectedTable]) {\r\n              // const primary = this.tableFieldList.find(t => t.is_primary);\r\n              // this.tableFields.primary_column = primary?.name || 'id';\r\n              this.selectedFields = this.tableFields[this.selectedTable];\r\n              this.unselectedFields = tableDesc.filter(item => !this.selectedFields.includes(item));\r\n            } else {\r\n              this.unselectedFields = tableDesc;\r\n            }\r\n            this.tableSelection = table;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  isCheckCondition() {\r\n    this.tableFieldList = this.tableFieldList.map(x => {\r\n      // const ischeck = this.tableSchemaConfig ? this.tableSchemaConfig.fieldmapping.filter(y => y.field === x.name) : '';\r\n      const ischeck = this.tableSchemaConfig ? this.tableSchemaConfig.fieldmapping.filter(y => (y.field === x.name && y.tablename === x.table_name)) : '';\r\n      if (ischeck.length > 0) {\r\n        x.active = true;\r\n        return x;\r\n      } else {\r\n        x.active = false;\r\n        return x;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkFields() {\r\n    this.selectAllCheckBox.forEach(element => {\r\n      const fieldList = this.filteredtableFieldList.some(a => !a.active);\r\n      if (fieldList) {\r\n        element.nativeElement.checked = false;\r\n      } else {\r\n        element.nativeElement.checked = true;\r\n      }\r\n    });\r\n    this.selectAllCheckBox.forEach(element => {\r\n      const fieldList = this.filteredrelatedtableFieldList.some(tableField => tableField.columns.some(field => !field.active));\r\n      if (fieldList) {\r\n        element.nativeElement.checked = false;\r\n      } else {\r\n        element.nativeElement.checked = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetTableFields() {\r\n    this.leftSelectionItem = [];\r\n    this.rightSelectionItem = [];\r\n    this.selectedTable = '';\r\n    this.tableSelection = '';\r\n    this.relatedTableSelection = [];\r\n    this.selectedRelatedTableList = [];\r\n    this.tableFieldList = [];\r\n    this.filteredtableFieldList = [];\r\n    this.relatedTableFieldList = [];\r\n    this.filteredrelatedtableFieldList = [];\r\n    this.tableList = [];\r\n    this.tableFields = {};\r\n    this.leftTableFields = [];\r\n    this.rightTableFields = [];\r\n    this.unselectedFields = [];\r\n    this.selectedFields = [];\r\n    this.selectedTableList = [];\r\n    this.fieldMapping = [];\r\n    this.totalFields = 0;\r\n    this.noOfColumns = 1;\r\n    this.isOCRChecked = false;\r\n    const control = <UntypedFormArray>this.autoFieldMappingForm.controls['autoFieldMappingArray'];\r\n    control.controls = [];\r\n    const queryFormcontrol = <UntypedFormArray>this.queryParamForm.controls['queryParamFormArray'];\r\n    queryFormcontrol.controls = [];\r\n    this.form = {\r\n      components: []\r\n    };\r\n    // this.filteredtableFieldList.map(a => (a.active = false));\r\n    // this.clearSelectedColumnFields();\r\n  }\r\n\r\n  skipToNextPage() {\r\n    if (this.basicPageInformation.pagetype === 'BGP') {\r\n      this.router.navigate(['../grid-config'], { relativeTo: this.route });\r\n    } else if (this.basicPageInformation.pagetype === 'DR') {\r\n      this.router.navigate(['../page-ribbon-design'], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate(['../page-design'], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n  saveTableField() {\r\n    this.isSaveGridFields = true;\r\n    if (this.selectedTableField.length < 1) {\r\n      return this.alert.error('Please select at least one column.');\r\n    }\r\n    const primary = this.tableFieldList.find(t => t.is_primary);\r\n    if (!primary) {\r\n      return this.alert.error('Select Table not having Primary Key');\r\n    }\r\n    if (this.selectedPage[0].lookupkey == 'ATPBDM') {\r\n      const isprimarycolumn = this.selectedTableField.find(t => t.name == primary['name']);\r\n      if (isprimarycolumn) {\r\n        return this.alert.error('Primary Key not allowed to Select as Input field');\r\n      }\r\n    }\r\n    if (this.formData) {\r\n      this.fieldMapping = this.autoFieldMappingForm.getRawValue().autoFieldMappingArray;\r\n      const selectedTableList = this.fieldMapping.map((item: any) => item.tablename);\r\n      this.selectedTableList = [...new Set(selectedTableList)];\r\n\r\n      this.selectedPageTypeCheck(); /* Complexity splitted */\r\n\r\n      const tableSchemaConfig = {\r\n        schema: this.selectedSchema,\r\n        dbaliasname: this.dbAliasName,\r\n        tablelist: this.selectedTableList,\r\n        tablefields: this.tableFields,\r\n        fieldmapping: this.fieldMapping,\r\n        noofcolumns: this.noOfColumns,\r\n        ocrchecked: this.isOCRChecked,\r\n        selectedDocumentType: this.selectedDocumentType,\r\n        // relatedTableList: this.relatedTableList,\r\n        selectedRelatedTableList: this.selectedRelatedTableList\r\n      };\r\n\r\n      this.formDataChanged.emit(tableSchemaConfig);\r\n\r\n      this.baseSearchQueryCheck(tableSchemaConfig); /* Complexity splitted */\r\n\r\n      this.gridConfigListConditions(tableSchemaConfig); /* Complexity splitted */\r\n      const validation = this.validationSave();\r\n      const createPage = this._localstore.getObj('CREATE PAGE');\r\n      if (createPage) {\r\n        if (this.formData && this.formData?.activeVersion?.id) {\r\n          this.formData.id = this.formData?.activeVersion?.id;\r\n        }\r\n      }\r\n      if (this.selectedPage[0].lookupkey == 'BGP') {\r\n        const isRelatedTableValid = this.checkInputData();\r\n        if (!isRelatedTableValid) {\r\n          return this.alert.error('Please select atlease one field from selected table field list!');\r\n        }\r\n      }\r\n      if (validation) {\r\n        this.pageBuilderService.updatePageVersion(this.formData.id, this.formData, createPage).subscribe(\r\n          () => {\r\n            this.isValidationCondition(); /* Complexity splitted */\r\n          },\r\n          error => {\r\n            this.alert.error(error.error.message);\r\n          }\r\n        );\r\n        this.saveAssetCheck();\r\n        this.pageBuilderAddService.setFormData(this.formData);\r\n        /* Complexity splitted */\r\n      } else {\r\n        this.conditionCheckCreate(); /* Complexity splitted */\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedPageTypeCheck() {\r\n    /* From saveTableField() */\r\n    if (\r\n      this.selectedPage.length &&\r\n      (this.selectedPage[0].lookupkey === 'DSP' ||\r\n        this.selectedPage[0].lookupkey === 'BUSP' ||\r\n        this.selectedPage[0].lookupkey === 'ATPBDM')\r\n    ) {\r\n      this.generateDesignForm();\r\n    }\r\n  }\r\n\r\n  baseSearchQueryCheck(tableSchemaConfig) {\r\n    /* From saveTableField() */\r\n    if (\r\n      this.isDynamicSearchBaseQuery &&\r\n      (this.selectedPage[0].lookupkey === 'DSP' || this.selectedPage[0].lookupkey === 'BUSP')\r\n    ) {\r\n      this.searchParams.baseQuery = tableSchemaConfig;\r\n      this.searchParams.searchParamFormArray = this.queryParamForm.getRawValue().queryParamFormArray;\r\n      this.formData.searchparams = this.searchParams ? JSON.stringify(this.searchParams) : '';\r\n      this.formData.templatejson = JSON.stringify(this.form);\r\n    } else if (\r\n      (!this.isDynamicSearchBaseQuery &&\r\n        this.selectedPage.length &&\r\n        (this.selectedPage[0].lookupkey === 'DSP' || this.selectedPage[0].lookupkey === 'BUSP')) ||\r\n      (this.selectedPage.length && this.selectedPage[0].lookupkey === 'ATPBDM') ||\r\n      this.selectedPage[0].lookupkey === 'DR'\r\n    ) {\r\n      this.formData.tableschemaconfig = JSON.stringify(tableSchemaConfig);\r\n      if (this.selectedPage[0].lookupkey === 'ATPBDM') {\r\n        this.formData.templatejson = JSON.stringify(this.form);\r\n      }\r\n    }\r\n  }\r\n\r\n  gridConfigListConditions(tableSchemaConfig) {\r\n    /* From saveTableField() */\r\n    if (\r\n      this.selectedPage.length &&\r\n      (this.selectedPage[0].lookupkey === 'DGP' ||\r\n        this.selectedPage[0].lookupkey === 'BGP' ||\r\n        (!this.isDynamicSearchBaseQuery && this.selectedPage[0].lookupkey === 'BUSP'))\r\n    ) {\r\n      this.formData.tableschemaconfig = JSON.stringify(tableSchemaConfig);\r\n      const gridConfig =\r\n        this.formData.gridconfig && typeof this.formData.gridconfig === 'string'\r\n          ? JSON.parse(this.formData.gridconfig)\r\n          : this.formData.gridconfig;\r\n\r\n      this.gridConfigCheckCondition(gridConfig); /* Complexity splitted */\r\n      const tempData = [];\r\n\r\n      const gridFieldList: any = this.fieldMapping;\r\n      this.isGridConfigListCheck(gridFieldList, tempData, gridConfig); /* Complexity splitted */\r\n      this.searchParamsCheck(); /* Complexity splitted */\r\n    }\r\n  }\r\n\r\n  gridConfigCheckCondition(gridConfig) {\r\n    /* From gridConfigListConditions --> saveTableField */\r\n    if (gridConfig) {\r\n      this.gridConfigFormArray =\r\n        Object.keys(gridConfig).length && gridConfig.gridConfigFormArray && gridConfig.gridConfigFormArray.length\r\n          ? gridConfig.gridConfigFormArray\r\n          : [];\r\n    }\r\n  }\r\n  isGridConfigListCheck(gridFieldList, tempData, gridConfig) {\r\n    /* From gridConfigListConditions --> saveTableField */\r\n    if (gridFieldList && gridFieldList.length) {\r\n      this.tempDataItemCheck(gridFieldList, tempData); /* Complexity splitted */\r\n      if (tempData.length) {\r\n        let defaultSortColumn;\r\n        if (gridConfig) {\r\n          defaultSortColumn = tempData.find(item => item.columnDef === gridConfig.defaultSortColumn);\r\n        }\r\n        this.getGridConfigList(defaultSortColumn, gridConfig, tempData);\r\n      }\r\n    } else {\r\n      this.gridConfigList = '';\r\n    }\r\n  }\r\n\r\n  tempDataItemCheck(gridFieldList, tempData) {\r\n    /* From isGridConfigListCheck--> gridConfigListConditions --> saveTableField */\r\n    for (const gridField of gridFieldList) {\r\n      let item;\r\n\r\n      gridField.columnDef = gridField.columnDef\r\n        ? `${gridField.tablename}.${gridField.columnDef}`\r\n        : `${gridField.tablename}.${gridField.field}`;\r\n      // gridField.columnDef = gridField.columnDef ? gridField.columnDef : gridField.field\r\n      gridField.header = gridField.header ? gridField.header : gridField.label;\r\n\r\n      const gridResult = gridField.result;\r\n      const gridCriteria = gridField.criteria;\r\n      if (gridResult) {\r\n        if (this.gridConfigFormArray.length) {\r\n          item = this.gridConfigFormArray.find(b => {\r\n            if (b.columnDef === (gridField.columnDef || gridField.field)) {\r\n              b.result = gridResult;\r\n              b.criteria = gridCriteria;\r\n              return b;\r\n            }\r\n          });\r\n        }\r\n        if (!item) {\r\n          item = {\r\n            columnDef: gridField.columnDef,\r\n            dateFormat: gridField.datatype === 'date' || gridField.datatype === 'datetime' ? gridField.datatype : '',\r\n            datetext: '',\r\n            filter: '',\r\n            header: gridField.header,\r\n            icon: '',\r\n            icontext: '',\r\n            link: '',\r\n            sort: '',\r\n            result: gridField.result,\r\n            criteria: gridField.criteria\r\n          };\r\n        }\r\n        tempData.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchParamsCheck() {\r\n    /* From gridConfigListConditions --> saveTableField */\r\n    this.formData.gridconfig =\r\n      this.gridConfigList && Object.keys(this.gridConfigList).length ? JSON.stringify(this.gridConfigList) : null;\r\n    if (\r\n      this.selectedPage.length &&\r\n      (this.selectedPage[0].lookupkey === 'DGP' || this.selectedPage[0].lookupkey === 'BGP')\r\n    ) {\r\n      this.formData.searchparams = '';\r\n    }\r\n  }\r\n\r\n  isValidationCondition() {\r\n    /* From saveTableField() */\r\n    if (this.selectedPage.length && this.selectedPage[0].lookupkey === 'ATPBDM') {\r\n      this.router.navigate(['../page-design'], { relativeTo: this.route });\r\n    } else if (this.selectedPage[0].lookupkey === 'DR') {\r\n      this.router.navigate(['../page-ribbon-design'], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate(['../grid-config'], { relativeTo: this.route });\r\n    }\r\n    this.alert.success('Fields updated successfully');\r\n  }\r\n  getGridConfigList(defaultSortColumn, gridConfig, tempData) {\r\n    /* From isGridConfigListCheck--> gridConfigListConditions --> saveTableField */\r\n    this.gridConfigList = {\r\n      defaultSortColumn: defaultSortColumn ? gridConfig.defaultSortColumn : '',\r\n      defaultSortType: defaultSortColumn ? gridConfig.defaultSortType : '',\r\n      delete: gridConfig && gridConfig.delete ? gridConfig.delete : '',\r\n      edit: gridConfig && gridConfig.edit ? gridConfig.edit : '',\r\n      externalLink: gridConfig && gridConfig.externalLink ? gridConfig.externalLink : '',\r\n      gridConfigFormArray: tempData,\r\n      gridActionFormArray: gridConfig && gridConfig.gridActionFormArray ? gridConfig.gridActionFormArray : ''\r\n    };\r\n  }\r\n\r\n  saveAssetCheck() {\r\n    /* From saveTableField() */\r\n    if (\r\n      this.selectedPage.length &&\r\n      (this.selectedPage[0].lookupkey === 'ATPBDM' ||\r\n        this.selectedPage[0].lookupkey === 'BUSP' ||\r\n        this.selectedPage[0].lookupkey === 'BGP' ||\r\n        this.selectedPage[0].lookupkey === 'DR')\r\n    ) {\r\n      this.saveAsset();\r\n    }\r\n  }\r\n\r\n  conditionCheckCreate() {\r\n    /* From saveTableField() */\r\n    this.pageBuilderAddService.createPage(this.formData).subscribe(\r\n      result => {\r\n        const data = result['data'];\r\n        this.formData.id = data?.id;\r\n        this.formData.activeVersion = data.activeVersion;\r\n        this.pageBuilderAddService.setFormData(this.formData);\r\n        if (!this.id) {\r\n          if (data && Object.keys(data).length) {\r\n            const id = data.id ? data.id : '';\r\n            this.formData.id = data.id;\r\n            if (id) {\r\n              this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n            }\r\n          }\r\n        }\r\n        this.saveAssetCheck();\r\n        if (this.selectedPage.length && this.selectedPage[0].lookupkey === 'ATPBDM') {\r\n          this.router.navigate(['../page-design'], { relativeTo: this.route });\r\n        } else if (this.selectedPage[0].lookupkey === 'DR') {\r\n          this.router.navigate(['../page-ribbon-design'], { relativeTo: this.route });\r\n        } else {\r\n          this.router.navigate(['../grid-config'], { relativeTo: this.route });\r\n        }\r\n        this.alert.success('Fields added successfully');\r\n        this._localstore.setItem('isTableFieldsSaved', true);\r\n      },\r\n      error => {\r\n        this.alert.error(error.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.pageBuilderAddService.returnToList();\r\n  }\r\n\r\n  processTemplateJSON(components, inputs) {\r\n    if (components && components.length) {\r\n      components.forEach(_component => {\r\n        if (_component.components) {\r\n          this.processTemplateJSON(_component.components, inputs);\r\n        } else if (_component.columns) {\r\n          this.processTemplateJSON(_component.columns, inputs);\r\n        } else if (_component.input && _component.type !== 'button') {\r\n          console.log('Adding component');\r\n          inputs.push(_component);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async generateDesignForm() {\r\n    const formJSON = this.formData.templatejson ? JSON.parse(this.formData.templatejson) : {};\r\n    console.log(formJSON);\r\n    const inputs = [];\r\n    if (formJSON.components) {\r\n      this.processTemplateJSON(formJSON.components, inputs);\r\n    }\r\n    console.log(inputs);\r\n\r\n    const formPanels = [];\r\n    const tableCount = this.selectedTableList.length;\r\n    this.fieldMapping = this.autoFieldMappingForm.getRawValue().autoFieldMappingArray;\r\n    for (let i = 0; i < tableCount; i++) {\r\n      let fieldColumns = [];\r\n      let tableName = this.selectedTableList[i];\r\n      let fieldMapping;\r\n      if (this.fieldMapping && this.fieldMapping.length) {\r\n        fieldMapping = this.fieldMapping.filter(x => x.tablename === tableName && x.field);\r\n      }\r\n      const tableFields = fieldMapping.filter(table => table.tablename === tableName);\r\n      this.tableFieldsCheck(tableFields, inputs, tableName, fieldColumns);\r\n      const uploadComponents = inputs.filter(_input => _input.type === 'fileupload');\r\n      if (uploadComponents && uploadComponents.length) {\r\n        fieldColumns = [...fieldColumns, ...uploadComponents];\r\n      }\r\n\r\n      if (this.noOfColumns > 1) {\r\n        fieldColumns = this.splitFieldColumns(fieldColumns, this.noOfColumns);\r\n        fieldColumns = [\r\n          {\r\n            clearOnHide: false,\r\n            label: 'Columns',\r\n            input: false,\r\n            tableView: false,\r\n            key: tableName + ' Columns',\r\n            columns: fieldColumns,\r\n            type: 'columns',\r\n            hideLabel: true,\r\n            tags: [],\r\n            conditional: {\r\n              show: '',\r\n              when: null,\r\n              eq: ''\r\n            },\r\n            properties: {}\r\n          }\r\n        ];\r\n      }\r\n\r\n      tableName = tableName.split('_').join(' ');\r\n      tableName = tableName[0].toUpperCase() + tableName.slice(1);\r\n      const formPanel = {\r\n        clearOnHide: false,\r\n        key: tableName,\r\n        input: false,\r\n        title: tableName,\r\n        theme: 'default',\r\n        tableView: false,\r\n        components: this.generateDataGrid(fieldColumns, tableName),\r\n        type: 'panel',\r\n        breadcrumb: 'default',\r\n        tags: [],\r\n        conditional: {\r\n          show: '',\r\n          when: null,\r\n          eq: ''\r\n        },\r\n        properties: {},\r\n        hideLabel: false,\r\n        isNew: false\r\n      };\r\n      formPanels.push(formPanel);\r\n    }\r\n    const searchButton = {\r\n      type: 'button',\r\n      theme: 'primary',\r\n      disableOnInvalid: true,\r\n      action: 'submit',\r\n      block: false,\r\n      rightIcon: '',\r\n      leftIcon: '',\r\n      size: 'md',\r\n      key: 'submit',\r\n      tableView: false,\r\n      label: 'Submit',\r\n      input: true,\r\n      $$hashKey: 'object:22',\r\n      autofocus: false,\r\n      customClass: 'text-right',\r\n      event: 'onFormSumit'\r\n    };\r\n\r\n    formPanels.push(searchButton);\r\n    this.form = {\r\n      components: formPanels\r\n    };\r\n  }\r\n\r\n  tableFieldsCheck(tableFields, inputs, tableName, fieldColumns) {\r\n    if (tableFields.length) {\r\n      tableFields.forEach((element, _index) => {\r\n        const addedElement = inputs.find(\r\n          _input =>\r\n            _input.key === (tableName !== this.selectedTable ? `${tableName}.` : '') + element.field &&\r\n            _input.type === element.datatype\r\n        );\r\n\r\n        console.log({ addedElement });\r\n\r\n        if (addedElement) {\r\n          this.addElementValidate(addedElement, element, fieldColumns);\r\n        } else {\r\n          const field = element.field;\r\n          const datatype = element.datatype;\r\n          const label = element.label;\r\n          const require = element.required;\r\n          const fieldComponent = {\r\n            type: datatype,\r\n            input: true,\r\n            tableView: true,\r\n            inputType: datatype,\r\n            inputMask: '',\r\n            label: label,\r\n            key: (tableName !== this.selectedTable ? `${tableName}.` : '') + field,\r\n            placeholder: 'Enter ' + label,\r\n            prefix: '',\r\n            suffix: '',\r\n            multiple: false,\r\n            defaultValue: '',\r\n            protected: false,\r\n            unique: false,\r\n            persistent: true,\r\n            validate: {\r\n              required: require,\r\n              pattern: '',\r\n              custom: '',\r\n              customPrivate: false\r\n            },\r\n            conditional: {\r\n              show: '',\r\n              when: null,\r\n              eq: ''\r\n            }\r\n          };\r\n          fieldColumns.push(fieldComponent);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addElementValidate(addedElement, element, fieldColumns) {\r\n    if (addedElement.validate) {\r\n      addedElement.validate.required = element.required;\r\n    }\r\n    fieldColumns.push(addedElement);\r\n  }\r\n\r\n  generateDataGrid(fieldColumns: any, tableName: string) {\r\n    const fieldColumnList = [];\r\n    const dataGridTemplate = this.dataGrid;\r\n    const fieldColumnKey = fieldColumns && fieldColumns[0]?.key?.split('.')[0];\r\n    const relatedTableKey = this.selectedRelatedTableList.filter(\r\n      table => table?.showDataGrid && table.relatedtable === fieldColumnKey\r\n    );\r\n    if (relatedTableKey.length) {\r\n      const newDataGridTemplate = [];\r\n      for (let i = 0; i < dataGridTemplate.length; i++) {\r\n        const template = { ...dataGridTemplate[i] };\r\n        template.components = [];\r\n        template.label = `${tableName} Data Grid`;\r\n        template.key = `${relatedTableKey[i].relatedtable}`;\r\n        for (const column of fieldColumns) {\r\n          if (relatedTableKey[i] && relatedTableKey[i].relatedtable === column.key.split('.')[0]) {\r\n            template.components.push(column);\r\n          } else {\r\n            fieldColumnList.push(column);\r\n          }\r\n        }\r\n        newDataGridTemplate.push(template);\r\n      }\r\n      return fieldColumnList.length ? fieldColumnList : newDataGridTemplate;\r\n    }\r\n    else {\r\n      return fieldColumns;\r\n    }\r\n  }\r\n\r\n  splitFieldColumns(fields, columnCount) {\r\n    const arrayLength = fields.length;\r\n    const fieldColumn = [];\r\n    const columnWidth = Math.ceil(12 / columnCount);\r\n    for (let i = 0; i < columnCount; i++) {\r\n      const obj = { components: [], width: columnWidth, offset: 0, push: 0, pull: 0 };\r\n      fieldColumn.push(obj);\r\n    }\r\n    let k = 0;\r\n    for (let i = 0; i < arrayLength; i++) {\r\n      let j = i;\r\n      if (j >= columnCount) {\r\n        if (k >= columnCount) {\r\n          k = 0;\r\n        }\r\n        j = k;\r\n        k++;\r\n      }\r\n      fieldColumn[j].components.push(fields[i]);\r\n    }\r\n    return fieldColumn;\r\n  }\r\n\r\n  saveAsset() {\r\n    this.fieldMapping = this.autoFieldMappingForm.getRawValue().autoFieldMappingArray;\r\n\r\n    this.fieldArrCondition();\r\n    const assetNameArr = this.assetList && this.assetList.length ? this.assetList.map(item => item.assetname) : [];\r\n    const activeArr = [];\r\n    const inactiveArr = [];\r\n\r\n    if (this.assetList && this.assetList.length) {\r\n      this.assetList.forEach(item => {\r\n        if (this.fieldArr.includes(item.assetname)) {\r\n          activeArr.push(item);\r\n        } else {\r\n          item.isactive = false;\r\n          inactiveArr.push(item);\r\n        }\r\n      });\r\n    }\r\n    let newAssetArr = this.fieldArr;\r\n    if (assetNameArr && assetNameArr.length && this.fieldArr && this.fieldArr.length) {\r\n      newAssetArr = this.fieldArr.filter(x => !assetNameArr.includes(x));\r\n    }\r\n\r\n    const createPage = this._localstore.getObj('CREATE PAGE');\r\n    if (newAssetArr.length) {\r\n      newAssetArr.forEach(item => {\r\n        const getFieldData = this.fieldMapping.find(value => value.field === item);\r\n        this.gridArrayData(item, getFieldData, createPage, activeArr);\r\n      });\r\n    }\r\n    const assetData = [...activeArr, ...inactiveArr];\r\n\r\n    const pageid = createPage ? Number(this.formData.id) : Number(this.formData.pageid);\r\n    const versionid = createPage ? Number(this.formData.activeVersion?.id) : Number(this.formData.id);\r\n    this.pageBuilderAddService.createAssetByVersion(String(pageid), String(versionid), assetData).subscribe(() => {\r\n      //This is intentional\r\n    });\r\n  }\r\n\r\n  fieldArrCondition() {\r\n    if (\r\n      this.selectedPage.length &&\r\n      this.selectedPage[0].lookupkey === 'BUSP' &&\r\n      this.fieldMapping &&\r\n      this.fieldMapping.length &&\r\n      !this.isDynamicSearchBaseQuery\r\n    ) {\r\n      this.fieldArr = this.fieldMapping.map(item => 'grid_' + item.field);\r\n    } else {\r\n      this.fieldArr = this.fieldMapping.map(item => item.field);\r\n    }\r\n  }\r\n\r\n  gridArrayData(item, getFieldData, createPage, activeArr) {\r\n    const data = {\r\n      assetname: item,\r\n      assetpath: this.formData.pagename + '.' + item,\r\n      assettype: '45F',\r\n      dashboardtemplatejson: null,\r\n      description: getFieldData && getFieldData.label ? getFieldData.label : null,\r\n      displayname: getFieldData && getFieldData.label ? getFieldData.label : null,\r\n      icon: null,\r\n      id: null,\r\n      pageid: createPage ? Number(this.formData.id) : Number(this.formData.pageid),\r\n      parentassetid: null,\r\n      url: null,\r\n      isactive: createPage ? this.formData.activeVersion?.isactive : this.formData.isactive,\r\n      versionid: createPage ? Number(this.formData.activeVersion?.id) : Number(this.formData.id)\r\n    };\r\n    activeArr.push(data);\r\n  }\r\n\r\n  validationPage(): any {\r\n    if (\r\n      !this.basicPageInformation.pagename ||\r\n      !this.basicPageInformation.pagetype ||\r\n      !this.basicPageInformation.description\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  validationSave(): any {\r\n    if (this.formData.id) {\r\n      return true;\r\n    } else if (this.id) {\r\n      this.formData.id = this.id;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  getselectedPage(type): any {\r\n    if (this.selectedPage) {\r\n      const pageType = this.selectedPage.filter(x => x.lookupkey === type);\r\n      return pageType.length > 0 ? true : false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getDisabledDataType(index) {\r\n    const formArray = this.autoFieldMappingForm.get('autoFieldMappingArray') as UntypedFormArray;\r\n    const formControl = formArray.at(index) as UntypedFormGroup;\r\n    const dataTypeControl = formControl.get('datatype');\r\n\r\n    return (\r\n      dataTypeControl.value === 'datetime' ||\r\n      dataTypeControl.value === 'date' ||\r\n      dataTypeControl.value === 'textarea' ||\r\n      dataTypeControl.value === 'number'\r\n    );\r\n  }\r\n\r\n  selectedDocument(event) {\r\n    const mapingObj = documentJson.find(res => res.doc_name === event.value);\r\n    this.ocrFields = mapingObj.mappings;\r\n  }\r\n\r\n  ocrCheck(event) {\r\n    const checked = event.target.checked;\r\n    this._localstore.setItem('OCRCHECKED', checked);\r\n    if (!checked) {\r\n      this.selectedDocumentType = '';\r\n      // const control = <FormArray>this.autoFieldMappingForm.controls.autoFieldMappingArray;\r\n      // if (this.fieldMapping.length) {\r\n      //   this.fieldMapping.forEach(x => {\r\n      //   });\r\n      // }\r\n    }\r\n  }\r\n\r\n  searchSchemaList(event: Event) {\r\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\r\n    const originalSelectedTable = this.selectedSchema;\r\n    this.schemaList = this.dublicateSchemaList.filter((a: any) => {\r\n      const matchesSearch = a?.name?.toLowerCase().startsWith(value);\r\n      const isSelected = a?.name === originalSelectedTable;\r\n      return matchesSearch || isSelected;\r\n    });\r\n  }\r\n\r\n  searchTableList(event: Event) {\r\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\r\n    const originalSelectedTable = this.tableSelection;\r\n    this.tableList = this.dublicateTableList.filter((a: any) => {\r\n      const matchesSearch = a?.name?.toLowerCase().startsWith(value);\r\n      const isSelected = a?.name === originalSelectedTable;\r\n      return matchesSearch || isSelected;\r\n    });\r\n  }\r\n\r\n  checkInputData() {\r\n    const gridConfig =\r\n      this.formData.gridconfig && typeof this.formData.gridconfig === 'string'\r\n        ? JSON.parse(this.formData.gridconfig)\r\n        : this.formData.gridconfig;\r\n    if (gridConfig?.gridConfigFormArray.length) {\r\n      gridConfig?.gridConfigFormArray.forEach(element => {\r\n        element.Choosable = '';\r\n        element.filter = '';\r\n        element.fixed = '';\r\n        element.hide = '';\r\n        element.mobileView = '';\r\n        element.selected = [];\r\n        element.sort = '';\r\n        element.tabView = '';\r\n      });\r\n    }\r\n    this.formData.gridconfig = JSON.stringify(gridConfig);\r\n\r\n    const tableSchemaConfig =\r\n      this.formData.tableschemaconfig && typeof this.formData.tableschemaconfig === 'string'\r\n        ? JSON.parse(this.formData.tableschemaconfig)\r\n        : this.formData.tableschemaconfig;\r\n    const isRelatedTableValid = this.checkRelatedTables(tableSchemaConfig?.selectedRelatedTableList, tableSchemaConfig?.fieldmapping);\r\n    if (tableSchemaConfig?.selectedRelatedTableList) {\r\n      tableSchemaConfig.tablefields.relations = tableSchemaConfig?.selectedRelatedTableList;\r\n    } else {\r\n      tableSchemaConfig.tablefields.relations = [];\r\n    }\r\n    this.formData.tableschemaconfig = JSON.stringify(tableSchemaConfig);\r\n    return isRelatedTableValid;\r\n  }\r\n\r\n  checkRelatedTables(selectedRelatedTableList: any, fieldmapping: any): boolean {\r\n    const relatedTables = selectedRelatedTableList.map(item => item.relatedtable);\r\n    const tables = selectedRelatedTableList.map(item => item.table);\r\n\r\n    return relatedTables.every(relatedTable => fieldmapping.some(item => item.tablename === relatedTable)) &&\r\n      tables.every(table => fieldmapping.some(item => item.tablename === table));\r\n  }\r\n\r\n  validateColumnChanged() {\r\n    if (this.previousSelectedColumns.length !== this.selectedTableField.length) {\r\n      this._localstore.setItem('isTableFieldsSaved', false);\r\n      this._localstore.setItem('isColumnChanged', true);\r\n    } else {\r\n      const map = {};\r\n      for (const obj of this.selectedTableField) {\r\n        const key = `${obj.table_name}-${obj.name}`;\r\n        map[key] = obj;\r\n      }\r\n      let allSame = true;\r\n      for (const obj of this.previousSelectedColumns) {\r\n        const key = `${obj.tablename}-${obj.field}`;\r\n        if (!(key in map)) {\r\n          allSame = false;\r\n          break;\r\n        }\r\n      }\r\n      this._localstore.setItem('isTableFieldsSaved', allSame);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"grid-filed\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mb-2\">\r\n      <div styleClass=\"rbac-card gridview w-100 h-100\">\r\n        <div class=\"strip_head toggleleft page-designer w-100 bg-white shadow-md d-none\">\r\n          <span class=\"report_head font-weight-bold p-2\">Select Form Fields</span>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-3 col-md-3 col-12 pr-md-1\">\r\n            <p-card styleClass=\"w-100 h-100 datasection\">\r\n              <div class=\"p-fluid p-formgrid row\">\r\n                <div class=\"p-field col-md-12 col-12\">\r\n                  <label for=\"schema\" class=\"referral-form-labels\">Schema\r\n                    <span class=\"requiredfield text-danger\">*</span>\r\n                  </label>\r\n                  <p-dropdown placeholder=\"Select Schema\" [options]=\"schemaList\" optionLabel=\"label\" optionValue=\"name\"\r\n                    [(ngModel)]=\"selectedSchema\" [filter]=\"true\" [resetFilterOnHide]=\"true\"\r\n                    (onHide)=\"resetDropdownList('schema')\" filterBy=\"name\" (keyup)=\"searchSchemaList($event)\"\r\n                    [showClear]=\"true\" fieldKey=\"PAG_DES_GRID_FIELDS_SELECT_SCHEMA\"\r\n                    (onChange)=\"getTables($event.value)\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n              <div class=\"p-fluid p-formgrid row\">\r\n                <div class=\"p-field col-md-12 col-12\">\r\n                  <label for=\"schema\" class=\"referral-form-labels\">Table List\r\n                    <span class=\"requiredfield text-danger\">*</span>\r\n                  </label>\r\n                  <p-dropdown placeholder=\"Select Table\" [options]=\"tableList\" optionLabel=\"name\" optionValue=\"name\"\r\n                    fieldKey=\"PAG_DES_GRID_FIELDS_SELECT_TABLE\" [(ngModel)]=\"tableSelection\" [filter]=\"true\"\r\n                    [resetFilterOnHide]=\"true\" (onHide)=\"resetDropdownList('table')\" filterBy=\"name\"\r\n                    (keyup)=\"searchTableList($event)\" [showClear]=\"tableList && tableList?.length\"\r\n                    (onChange)=\"getTableFields($event.value,true)\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n              <div class=\"p-fluid p-formgrid row\" *ngIf=\"\r\n                  selectedTable !== '' && (getselectedPage('ATPBDM') || getselectedPage('BGP') || getselectedPage('DR'))\r\n                \">\r\n                <div class=\"p-field col-md-12 col-12\">\r\n                  <label for=\"schema\" class=\"referral-form-labels\">Tables related to {{ this.selectedTable }}</label>\r\n                  <p-multiSelect placeholder=\"Select Related Tables\" [options]=\"relatedTableList\"\r\n                    (onChange)=\"getColumnsOfRelatedTables($event.value)\" [(ngModel)]=\"relatedTableSelection\"\r\n                    [resetFilterOnHide]=\"true\">\r\n                  </p-multiSelect>\r\n                </div>\r\n              </div>\r\n              <div class=\"p-fluid p-formgrid row\" *ngIf=\"\r\n                  selectedTable !== '' && (getselectedPage('ATPBDM') || getselectedPage('BGP') || getselectedPage('DR'))\r\n                \">\r\n                <div class=\"p-field col-md-12 col-12\">\r\n                  <div class=\"documentaccess pt-0\">\r\n                    <div class=\"header px-2 py-2\">\r\n                      <label class=\"mb-0\">Selected Related Tables</label>\r\n                    </div>\r\n                    <hr class=\"m-0\" />\r\n                    <div class=\"doc-body\">\r\n                      <ng-container *ngFor=\"let table of selectedRelatedTableList; let i = index\">\r\n                        <div class=\"row userdata border\">\r\n                          <div class=\"col-md-12 py-1 px-3\">\r\n                            <label aria-labelledby=\"related_table_img\" class=\"pl-2 mb-0 mr-2\">{{\r\n                              table.relatedtable\r\n                              }}</label>\r\n                            <ng-container *ngIf=\"getselectedPage('ATPBDM')\">\r\n                              <!-- <input type=\"checkbox\" id=\"showAsGrid{{ i }}\" class=\"packetsub-cls mt-0 required_ckbox\"\r\n                                [(ngModel)]=\"table.showDataGrid\" (change)=\"enableDataGrid($event, i)\" />\r\n                              <label for=\"showAsGrid{{ i }}\" aria-labelledby=\"showAsGrid{{ i }}\"\r\n                                class=\"pl-2 mt-0 mb-0\">Data Grid</label> -->\r\n\r\n                              <div class=\"g-checkbox\">\r\n                                <input type=\"checkbox\" id=\"showAsGrid{{ i }}\" class=\"packetsub-cls mt-0 required_ckbox\"\r\n                                  [(ngModel)]=\"table.showDataGrid\" (change)=\"enableDataGrid($event, i)\" />\r\n                                <label for=\"showAsGrid{{ i }}\" aria-labelledby=\"showAsGrid{{ i }}\"\r\n                                  class=\"pl-2 mt-0 mb-0\">Data Grid</label>\r\n                              </div>\r\n                            </ng-container>\r\n                          </div>\r\n                        </div>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </p-card>\r\n          </div>\r\n          <div class=\"col-md-9 col-12 pl-md-1\">\r\n            <p-card styleClass=\"w-100 h-100 beforeshow\" *ngIf=\"tableFieldList?.length < 1\">\r\n              <div class=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                <div class=\"pi-icon\"><em class=\"pi pi-database\"></em></div>\r\n                <p class=\"mb-0 text-muted\">No Schema and Table List selected!</p>\r\n              </div>\r\n            </p-card>\r\n            <p-card styleClass=\"w-100 h-100\" *ngIf=\"tableFieldList?.length > 0\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12 pr-md-2 mb-3\">\r\n                  <div class=\"documentaccess pt-0 selectcolumn\">\r\n                    <div class=\"header px-2 py-2\">\r\n                      <label class=\"mb-0\">Select Fields</label>\r\n                    </div>\r\n                    <hr class=\"m-0\" />\r\n                    <div class=\"doc-body\">\r\n                      <ng-container>\r\n                        <div class=\"row userdata mb-0\">\r\n                          <div class=\"col-md-12 group-data py-0 px-2\">\r\n                            <div class=\"my-2\">\r\n                              <div class=\"p-input-icon-left w-100\">\r\n                                <em class=\"pi pi-search\"></em>\r\n                                <input #gridSearchInput type=\"search\" id=\"gridSearch\" class=\"gridSearch form-control\"\r\n                                  pInputText title=\"Search\" (keyup)=\"searchColumnFields($event)\" />\r\n                                <em class=\"pi pi-times clear-icon\" (click)=\"clearSearch(gridSearchInput)\"\r\n                                  pTooltip=\"Clear search\" tooltipPosition=\"bottom\" *ngIf=\"gridSearchInput.value\"></em>\r\n                                <label class=\"sr-only\" for=\"gridSearch\" aria-labelledby=\"gridSearch\"\r\n                                  title=\"Grid Search\"></label>\r\n                              </div>\r\n                              <div class=\"col-md-12 py-0 px-3 d-flex align-items-center selectAllcolumn mt-2\">\r\n                                <div class=\"g-checkbox\">\r\n                                  <input type=\"checkbox\" #selectAllCheckBox id=\"selectAllcolumn\"\r\n                                    (change)=\"checkAllColumnFields($event)\" class=\"packetsub-cls mt-0\">\r\n                                  <label for=\"selectAllcolumn\" class=\"pl-2 mt-0 mb-0\">Select All</label>\r\n                                </div>\r\n                                <!-- <input type=\"checkbox\" #selectAllCheckBox id=\"selectAllcolumn\"\r\n                                  (change)=\"checkAllColumnFields($event)\" class=\"packetsub-cls mt-0\" />\r\n                                <label for=\"selectAllcolumn\" class=\"pl-2 mt-0 mb-0\">Select All</label> -->\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"max-h-selectcolumn\">\r\n                              <p-panel styleClass=\"mb-2\" [toggleable]=\"true\">\r\n                                <ng-template pTemplate=\"header\">\r\n                                  <span>{{ selectedTable }}</span>\r\n                                </ng-template>\r\n                                <ng-container *ngFor=\"let field of filteredtableFieldList; let i = index\">\r\n                                  <div class=\"row userdata border mb-0\"\r\n                                    (change)=\"selectedTableFields(field, field?.active)\">\r\n                                    <div class=\"col-md-12 py-0 px-3 d-flex align-items-center\">\r\n                                      <div class=\"g-checkbox\">\r\n                                        <input type=\"checkbox\" fieldKey=\"PAG_DES_GRID_FIELDS_SELECT_COLOUMN_FIELDS\"\r\n                                          id=\"packetsub{{ i }}\" [checked]=\"field?.active\" class=\"packetsub-cls mt-0\" />\r\n                                        <label for=\"packetsub{{ i }}\" class=\"pl-2 mt-0 mb-0\">{{ field.name }}</label>\r\n                                      </div>\r\n                                      <!-- <input type=\"checkbox\" fieldKey=\"PAG_DES_GRID_FIELDS_SELECT_COLOUMN_FIELDS\"\r\n                                        id=\"packetsub{{ i }}\" [checked]=\"field?.active\" class=\"packetsub-cls mt-0\" />\r\n                                      <label for=\"packetsub{{ i }}\" class=\"pl-2 mt-0 mb-0\">{{ field.name }}</label> -->\r\n                                    </div>\r\n                                  </div>\r\n                                </ng-container>\r\n                              </p-panel>\r\n                              <p-panel styleClass=\"mb-2\" *ngFor=\"let tableField of filteredrelatedtableFieldList\"\r\n                                [toggleable]=\"true\">\r\n                                <ng-template pTemplate=\"header\">\r\n                                  <span>{{ tableField.table }}</span>\r\n                                </ng-template>\r\n                                <ng-container *ngFor=\"let field of tableField.columns; let i = index\">\r\n                                  <div class=\"row userdata border mb-0\"\r\n                                    (change)=\"selectedRelatedTableFields(tableField.table, field, field?.active)\">\r\n                                    <div class=\"col-md-12 py-0 px-3 d-flex align-items-center\">\r\n                                      <div class=\"g-checkbox\">\r\n                                        <input type=\"checkbox\" id=\"related-packetsub{{ i }}\" [checked]=\"field?.active\"\r\n                                          class=\"packetsub-cls mt-0\" [disabled]=\"field?.disabled\" />\r\n                                        <label for=\"related-packetsub{{ i }}\" class=\"pl-2 mt-0 mb-0\">{{\r\n                                          field.name\r\n                                          }}</label>\r\n                                      </div>\r\n\r\n                                      <!-- <input type=\"checkbox\" id=\"related-packetsub{{ i }}\" [checked]=\"field?.active\"\r\n                                        class=\"packetsub-cls mt-0\" [disabled]=\"field?.disabled\" />\r\n                                      <label for=\"related-packetsub{{ i }}\" class=\"pl-2 mt-0 mb-0\">{{\r\n                                        field.name\r\n                                        }}</label> -->\r\n                                    </div>\r\n                                  </div>\r\n                                </ng-container>\r\n                              </p-panel>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-8 col-12 pl-md-2 mb-3\">\r\n                  <div class=\"row col-12\">\r\n                    <div class=\"p-field col-4\" *ngIf=\"getselectedPage('ATPBDM')\">\r\n                      <div class=\"g-checkbox\">\r\n                        <input type=\"checkbox\" class=\"packetsub-cls mt-0\" (change)=\"ocrCheck($event)\"\r\n                          [checked]=\"isOCRChecked\" [(ngModel)]=\"isOCRChecked\" />\r\n                        <label for=\"ocr\" class=\"pl-2 mt-0 mb-0\">OCR</label>\r\n                      </div>\r\n\r\n                      <!-- <input type=\"checkbox\" class=\"packetsub-cls mt-0\" (change)=\"ocrCheck($event)\"\r\n                        [checked]=\"isOCRChecked\" [(ngModel)]=\"isOCRChecked\" />\r\n                      <label for=\"ocr\" class=\"pl-2 mt-0 mb-0\">OCR</label> -->\r\n                    </div>\r\n                    <div class=\"p-field col-4\" *ngIf=\"isOCRChecked && getselectedPage('ATPBDM')\">\r\n                      <label for=\"schema\" class=\"referral-form-labels mr-2\">select document type</label>\r\n                      <p-dropdown placeholder=\"select document type\" [options]=\"documentType\"\r\n                        (onChange)=\"selectedDocument($event)\" optionLabel=\"doc_name\" [(ngModel)]=\"selectedDocumentType\"\r\n                        optionValue=\"doc_name\">\r\n                      </p-dropdown>\r\n                    </div>\r\n                    <div class=\"p-field col-4 text-right\" *ngIf=\"getselectedPage('ATPBDM')\">\r\n                      <label for=\"schema\" class=\"referral-form-labels mr-2\">No of Columns </label>\r\n                      <p-dropdown placeholder=\"Select No of Columns\" [options]=\"nColumns\" optionLabel=\"key\"\r\n                        optionValue=\"key\" [(ngModel)]=\"noOfColumns\">\r\n                      </p-dropdown>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"documentaccess pt-0\">\r\n                    <div class=\"header px-2 py-2\">\r\n                      <label class=\"mb-0\">Selected Fields</label>\r\n                    </div>\r\n                    <hr class=\"m-0\" />\r\n                    <form [formGroup]=\"autoFieldMappingForm\">\r\n                      <div class=\"doc-body\" formArrayName=\"autoFieldMappingArray\" cdkDropList\r\n                        (cdkDropListDropped)=\"drop($event)\">\r\n                        <ng-container *ngFor=\"\r\n                            let errorItem of autoFieldMappingForm.controls['autoFieldMappingArray']['controls'];\r\n                            let j = index\r\n                          \" formGroupName=\"{{ j }}\">\r\n                          <div class=\"row userdata border\" cdkDrag>\r\n                            <div class=\"col-md-12 py-1 px-3\">\r\n                              <em class=\"fa-solid fa-grip-dots-vertical\"></em>\r\n                              <svg title=\"\" id=\"img{{ j }}\" width=\"8\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 320 512\">\r\n                                <path\r\n                                  d=\"M88 352C110.1 352 128 369.9 128 392V440C128 462.1 110.1 480 88 480H40C17.91 480 0 462.1 0 440V392C0 369.9 17.91 352 40 352H88zM280 352C302.1 352 320 369.9 320 392V440C320 462.1 302.1 480 280 480H232C209.9 480 192 462.1 192 440V392C192 369.9 209.9 352 232 352H280zM40 320C17.91 320 0 302.1 0 280V232C0 209.9 17.91 192 40 192H88C110.1 192 128 209.9 128 232V280C128 302.1 110.1 320 88 320H40zM280 192C302.1 192 320 209.9 320 232V280C320 302.1 302.1 320 280 320H232C209.9 320 192 302.1 192 280V232C192 209.9 209.9 192 232 192H280zM40 160C17.91 160 0 142.1 0 120V72C0 49.91 17.91 32 40 32H88C110.1 32 128 49.91 128 72V120C128 142.1 110.1 160 88 160H40zM280 32C302.1 32 320 49.91 320 72V120C320 142.1 302.1 160 280 160H232C209.9 160 192 142.1 192 120V72C192 49.91 209.9 32 232 32H280z\" />\r\n                              </svg>\r\n                              <label aria-labelledby=\"img{{ j }}\" class=\"pl-2 mb-0 mr-2\">{{\r\n                                errorItem?.value?.label\r\n                                }}</label>\r\n\r\n                              <div class=\"g-checkbox d-inline mr-1\">\r\n                                <input *ngIf=\"getselectedPage('BGP')\" type=\"checkbox\" formControlName=\"result\"\r\n                                  id=\"result{{ j }}\" class=\"packetsub-cls mt-0 required_ckbox\"\r\n                                  [checked]=\"errorItem?.value?.result\" />\r\n                                <label *ngIf=\"getselectedPage('BGP')\" for=\"result{{ j }}\"\r\n                                  aria-labelledby=\"result{{ j }}\" class=\"pl-2 mt-0 mb-0\">Result</label>\r\n                              </div>\r\n                              <div class=\"g-checkbox d-inline mr-1\">\r\n                                <input *ngIf=\"getselectedPage('BGP')\" type=\"checkbox\" formControlName=\"criteria\"\r\n                                  id=\"criteria{{ j }}\" class=\"packetsub-cls mt-0 required_ckbox\"\r\n                                  [checked]=\"errorItem?.value?.criteria\" />\r\n                                <label *ngIf=\"getselectedPage('BGP')\" for=\"criteria{{ j }}\"\r\n                                  aria-labelledby=\"criteria{{ j }}\" class=\"pl-2 mt-0 mb-0\">Criteria</label>\r\n                              </div>\r\n                              <p-dropdown *ngIf=\"getselectedPage('ATPBDM')\" styleClass=\"mr-2\" placeholder=\"Data Type\"\r\n                                [options]=\"fieldDatatype\" fieldKey=\"PAG_DES_GRID_FIELDS_SELECTED_FIELDS\"\r\n                                optionLabel=\"desc\" [disabled]=\"this.getDisabledDataType(j)\" formControlName=\"datatype\"\r\n                                optionValue=\"value\">\r\n                              </p-dropdown>\r\n                              <div class=\"g-checkbox d-inline mr-1\">\r\n                                <input type=\"checkbox\" *ngIf=\"getselectedPage('ATPBDM')\"\r\n                                  fieldKey=\"PAG_DES_GRID_FIELDS_REQUIRED_FIELDS\" id=\"required{{ j }}\"\r\n                                  class=\"packetsub-cls mt-0 required_ckbox\" formControlName=\"required\" />\r\n                                <label *ngIf=\"getselectedPage('ATPBDM')\" for=\"required{{ j }}\"\r\n                                  aria-labelledby=\"required{{ j }}\" class=\"pl-2 mt-0 mb-0\">Required</label>\r\n                              </div>\r\n                              <p-dropdown *ngIf=\"getselectedPage('ATPBDM') && isOCRChecked\" styleClass=\"ml-2\"\r\n                                placeholder=\"Field Name\" [options]=\"ocrFields\" optionLabel=\"label\"\r\n                                formControlName=\"ocrkey\" optionValue=\"attr\">\r\n                              </p-dropdown>\r\n                            </div>\r\n                          </div>\r\n                        </ng-container>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12 formicon\">\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <button class=\"btn btn-primary btncommon\" (click)=\"clearSelectedColumnFields()\">Clear All</button>\r\n                    <div class=\"text-right\">\r\n                      <button class=\"mr-2 btn btn-cancel\" fieldKey=\"PAG_DES_GRID_FIELDS_CANCEL\" (click)=\"cancel()\">\r\n                        Cancel\r\n                      </button>\r\n                      <button *ngIf=\"!isNewPage\" class=\"btn btn-primary btncommon\" (click)=\"skipToNextPage()\">\r\n                        Skip\r\n                      </button>\r\n                      <button class=\"btn btn-primary btncommon\" fieldKey=\"PAG_DES_GRID_FIELDS_NEXT\"\r\n                        (click)=\"saveTableField()\">\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </p-card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { Component, Injector, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\n@Component({\r\n  selector: 'app-ribbon-tab-config',\r\n  templateUrl: './ribbon-tab-config.component.html',\r\n  styleUrls: ['./ribbon-tab-config.component.scss']\r\n})\r\nexport class RibbonTabConfigComponent implements OnInit, OnDestroy {\r\n  tabsForm!: UntypedFormGroup;\r\n  formData: any;\r\n  id = '';\r\n  pageTypeList: any;\r\n  dropdownService: CommonDropdownsService;\r\n  pageList: any;\r\n  filteredPageList: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  pageBuilderService: PageBuilderService;\r\n  authService: AuthService;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  allFieldList: any = [];\r\n  parentFieldList: any = [];\r\n  pageErrorShow = false;\r\n  tabErrorShow = false;\r\n  ribbonpageList: any;\r\n  taborientationList: any;\r\n  iconList: any;\r\n  basicPageInformation: any;\r\n  localStore: LocalService;\r\n  RBACORG: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _alert: AlertService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _alertService: AlertService,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.localStore = injector.get<LocalService>(LocalService);\r\n    this.id = this._route.snapshot.parent.paramMap.get('id');\r\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.getAllPages();\r\n        }\r\n      }\r\n    });\r\n    const iconArray = AppConstants.iconList;\r\n    this.iconList = iconArray.sort((a, b) => a.label.localeCompare(b.label));\r\n    this.basicPageInformation = this.localStore.getObj('PAGEDESIGN_BASICINFO');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.id) {\r\n      const validation = this.validationBasicInfo();\r\n      if (!validation) {\r\n        this._router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this._route });\r\n        return this._alert.error('Please fill in all the required fields.');\r\n      }\r\n    }\r\n    this.initTabConfigForm();\r\n    this.loadDropDowns();\r\n  }\r\n\r\n  validationBasicInfo(): any {\r\n    if (\r\n      !this.basicPageInformation.pagename ||\r\n      !this.basicPageInformation.pagetype ||\r\n      !this.basicPageInformation.description\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  loadDropDowns(): void {\r\n    this.dropdownService.getDropDownValues('page').subscribe(result => {\r\n      this.pageTypeList = result['data'];\r\n    });\r\n    this.dropdownService.getDropDownValues('tabOrientation').subscribe(result => {\r\n      this.taborientationList = result['data'];\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n\r\n  setCurrentFormData() {\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      const tabConfig = this.formData ? (this.formData?.tabconfig ? JSON.parse(this.formData?.tabconfig) : null) : null;\r\n      this.tabsForm.get('ribbonid').setValue(this.formData.ribbonid);\r\n      this.tabsForm.get('taborientation').setValue(this.formData.taborientation);\r\n      if (tabConfig && tabConfig.length) {\r\n        const tabsControl = this.tabsForm.get('tabs') as UntypedFormArray;\r\n        tabsControl.clear(); // Clear existing tabs before adding new ones\r\n\r\n        tabConfig.forEach(val => {\r\n          const childTabs = this._formBuilder.array([]);\r\n          if (val.tabs && val.tabs.length) {\r\n            val.tabs.forEach(d => {\r\n              childTabs.push(\r\n                this._formBuilder.group({\r\n                  id: d.id,\r\n                  name: d.name,\r\n                  icon: d.icon,\r\n                  tabs: d.tabs\r\n                })\r\n              );\r\n            });\r\n          }\r\n\r\n          tabsControl.push(\r\n            this._formBuilder.group({\r\n              id: val.id,\r\n              name: val.name,\r\n              icon: val.icon,\r\n              tabs: childTabs\r\n            })\r\n          );\r\n\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  initTabConfigForm(): void {\r\n    this.tabsForm = this._formBuilder.group({\r\n      ribbonid: [''],\r\n      taborientation: [''],\r\n      tabs: this._formBuilder.array([this.addTabGroup()])\r\n    });\r\n  }\r\n\r\n  getAllPages(): void {\r\n    this.pageBuilderAddService.getOrgList(this.orgId).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.pageList = res?.data?.data?.filter(\r\n            page =>\r\n              page?.pageTypeDetails?.key !== 'BTP' &&\r\n              page?.pageTypeDetails?.key !== 'RBTP' &&\r\n              page?.pageTypeDetails?.key !== 'DR'\r\n          );\r\n          this.ribbonpageList = res?.data?.data?.filter(page => page?.pageTypeDetails?.key === 'DR');\r\n          this.setCurrentFormData();\r\n        }\r\n      },\r\n      _err => this._alert.error(AppConstants.errorMessage)\r\n    );\r\n  }\r\n\r\n  private addTabGroup(): UntypedFormGroup {\r\n    return this._formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      id: ['', [Validators.required]],\r\n      icon: [],\r\n      tableName: [''],\r\n      tabs: this._formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  addTab() {\r\n    this.tabs.push(this.addTabGroup());\r\n    this.tabErrorShow = false;\r\n    this.pageErrorShow = false;\r\n  }\r\n\r\n  get tabs(): UntypedFormArray {\r\n    return this.tabsForm.get('tabs') as UntypedFormArray;\r\n  }\r\n\r\n  /**\r\n   * Method to Remove tab\r\n   * @param _index index of the tab to be removed\r\n   */\r\n  removeTab(_index: number) {\r\n    const tabs = this.tabsForm.get('tabs') as UntypedFormArray;\r\n    tabs.removeAt(_index);\r\n  }\r\n\r\n  cancel() {\r\n    this.pageBuilderAddService.returnToList();\r\n  }\r\n\r\n  saveTabs(publish: boolean) {\r\n    const validation = this.validationPage();\r\n    if (validation) {\r\n      const tabs = this.tabsForm.getRawValue().tabs;\r\n      this.tabErrorShow = true;\r\n      this.pageErrorShow = true;\r\n      tabs.forEach((tab) => {\r\n        tab.type = this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.pageTypeDetails?.key;\r\n        tab.tableName = JSON.parse(\r\n          this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.activeVersion?.tableschemaconfig\r\n        )?.tablelist;\r\n        tab.tabs.forEach((childtab) => {\r\n          childtab.type = this.pageList.length && this.pageList.filter(page => page.id === childtab.id)[0]?.pageTypeDetails?.key;\r\n          childtab.tableName = JSON.parse(\r\n            this.pageList.length && this.pageList.filter(page => page.id === childtab.id)[0]?.activeVersion?.tableschemaconfig\r\n          )?.tablelist;\r\n        });\r\n      });\r\n      this.formData.tabconfig = JSON.stringify(tabs);\r\n      this.formData.ribbonid = this.tabsForm.get('ribbonid').value;\r\n      this.formData.taborientation = this.tabsForm.get('taborientation').value;\r\n      console.log(this.formData);\r\n      if (!this.id) {\r\n        this.formData.published = publish;\r\n        this.pageBuilderAddService.createPage(this.formData).subscribe(result => {\r\n          const data = result['data'];\r\n          this._router.navigate([`pages/page-design/versions/${data.id}`]);\r\n          if (publish) {\r\n            this._alert.success(\r\n              `Tab Page Version ${data.version || data.activeVersion.version}  is published successfully`\r\n            );\r\n          } else {\r\n            this._alert.success('Tab Page added successfully');\r\n          }\r\n        });\r\n      } else {\r\n        const formDetails = this.formData;\r\n        formDetails.id = this.id;\r\n        formDetails.published = publish;\r\n        this.pageBuilderService.updatePageVersion(this.id, formDetails).subscribe(() => {\r\n          this._router.navigate([`pages/page-design/versions/${formDetails.pageid}`]);\r\n          this._alert.success('Tab Page updated successfully');\r\n        });\r\n      }\r\n    } else {\r\n      this._alertService.error('Please fill all mandatory fields');\r\n    }\r\n  }\r\n\r\n  validationPage(): any {\r\n    if (!this.tabsForm.value.taborientation || !this.tabsForm.value.ribbonid) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addChildTab(index: number) {\r\n    this.childTabs(index).push(this.addTabGroup());\r\n  }\r\n\r\n  childTabs(tabIndex: number): UntypedFormArray {\r\n    return this.tabs.at(tabIndex).get('tabs') as UntypedFormArray;\r\n  }\r\n\r\n  removeChildTab(tabIndex: number, childIndex: number) {\r\n    this.childTabs(tabIndex).removeAt(childIndex);\r\n  }\r\n\r\n  dropItem(event) {\r\n    if (event.container === event.previousContainer) {\r\n      moveItemInArray(\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    } else {\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    }\r\n  }\r\n}","<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Ribbon Tab Configuration</span>\r\n    </div>\r\n    <div class=\"p-fluid\">\r\n      <div class=\"\">\r\n        <form [formGroup]=\"tabsForm\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"p-field col-12 col-md-6\">\r\n              <label for=\"ribbonpage\" class=\"referral-form-labels\">Ribbon Page\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <p-dropdown [options]=\"ribbonpageList\" placeholder=\"Select Ribbon Page\" id=\"ribbonpagetype\"\r\n                optionLabel=\"activeVersion.pagename\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_RIBBON_PAGE\" optionValue=\"id\"\r\n                formControlName=\"ribbonid\" [filter]=\"true\" [required]=\"true\">\r\n              </p-dropdown>\r\n              <div *ngIf=\"tabsForm.controls['ribbonid'].errors && tabsForm.controls['ribbonid'].touched\">\r\n                <div class=\"p-error block mt-1\">Ribbon Page is required </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-field col-12 col-md-6\">\r\n              <label for=\"taborientation\" class=\"referral-form-labels\">Tab Orientation\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <p-dropdown [options]=\"taborientationList\" placeholder=\"Select Page Type\" id=\"pagetype\"\r\n                optionLabel=\"lookupvalue\" optionValue=\"lookupkey\" formControlName=\"taborientation\"\r\n                fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_TAB_ORIENTATION\" [required]=\"true\">\r\n              </p-dropdown>\r\n              <div *ngIf=\"tabsForm.controls['taborientation'].errors && tabsForm.controls['taborientation'].touched\">\r\n                <div class=\"p-error block mt-1\">Tab Orientation is required </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n            <span class=\"report_head font-weight-bold\"></span>\r\n            <button class=\"btn btn-primary\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_ADD_TAB\" (click)=\"addTab()\">\r\n              <em class=\"fa fa-plus\" aria-hidden=\"true\"></em> Add Tab\r\n            </button>\r\n          </div>\r\n          <div class=\"dragBoxtable\">\r\n            <div formArrayName=\"tabs\" class=\"cdkDropList-group\" cdkDropList cdkDropListGroup (cdkDropListDropped)=\"dropItem($event)\"\r\n            [cdkDropListData]=\"tabs.controls\">\r\n              <div *cdkDragPlaceholder></div>\r\n              <div class=\"mb-3\" *ngFor=\"let item of tabs.controls; let i = index\" [cdkDragData]=\"item\" [formGroupName]=\"i\" cdkDrag>\r\n                <div class=\"row my-2\">\r\n                  <div class=\"col-lg-1 pt-1\">\r\n                    <label class=\"d-block\">&#160;</label>\r\n                    <div class=\"drag-icon\">\r\n                      <svg title=\"\" id=\"img{{ i }}\" width=\"8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n                        <path\r\n                          d=\"M88 352C110.1 352 128 369.9 128 392V440C128 462.1 110.1 480 88 480H40C17.91 480 0 462.1 0 440V392C0 369.9 17.91 352 40 352H88zM280 352C302.1 352 320 369.9 320 392V440C320 462.1 302.1 480 280 480H232C209.9 480 192 462.1 192 440V392C192 369.9 209.9 352 232 352H280zM40 320C17.91 320 0 302.1 0 280V232C0 209.9 17.91 192 40 192H88C110.1 192 128 209.9 128 232V280C128 302.1 110.1 320 88 320H40zM280 192C302.1 192 320 209.9 320 232V280C320 302.1 302.1 320 280 320H232C209.9 320 192 302.1 192 280V232C192 209.9 209.9 192 232 192H280zM40 160C17.91 160 0 142.1 0 120V72C0 49.91 17.91 32 40 32H88C110.1 32 128 49.91 128 72V120C128 142.1 110.1 160 88 160H40zM280 32C302.1 32 320 49.91 320 72V120C320 142.1 302.1 160 280 160H232C209.9 160 192 142.1 192 120V72C192 49.91 209.9 32 232 32H280z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-6 col-12\">\r\n                    <label class=\"d-block\">Tab Name</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\"\r\n                      fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_TAB_NAME\" placeholder=\"Enter Tab Name\" pInputText required />\r\n                    <div\r\n                      *ngIf=\"tabErrorShow ? item.get('name').invalid : item.get('name').errors && item.get('name').touched\">\r\n                      <small class=\"p-error block\">Tab Name is required </small>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-2 col-md-6 col-12\">\r\n                    <label class=\"d-block\">Icon</label>\r\n                    <p-dropdown [options]=\"iconList\" styleClass=\"icon-dropdown\" formControlName=\"icon\" [filter]=\"true\"\r\n                      optionLabel=\"label\" optionValue=\"value\" [showClear]=\"true\" placeholder=\"Select Icon\"\r\n                      fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_TAB_NAME\">\r\n                      <ng-template let-selectedItem pTemplate=\"selectedItem\">\r\n                        <div pTooltip=\"{{selectedItem.label}}\" tooltipPosition=\"top\"\r\n                          class=\"d-flex flex-row align-items-center gap-2\" *ngIf=\"selectedItem.value\">\r\n                          <span class=\"material-symbols-outlined userempty ml-0\">{{ selectedItem.value }}</span>\r\n                          <div class=\"text-truncate\">{{ selectedItem.label }}</div>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template let-icon pTemplate=\"item\">\r\n                        <div class=\"d-flex flex-row align-items-start gap-2\">\r\n                          <span class=\"material-symbols-outlined userempty ml-0\">{{ icon.value }}</span>\r\n                          <div>{{ icon.label }}</div>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-6 col-12\">\r\n                    <label class=\"d-block\">Page</label>\r\n                    <p-dropdown [options]=\"pageList\" placeholder=\"Select Page\" id=\"pagetype\"\r\n                      optionLabel=\"activeVersion.pagename\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_SELECT_PAGE\"\r\n                      optionValue=\"id\" formControlName=\"id\" [filter]=\"true\" [required]=\"true\"></p-dropdown>\r\n                    <div\r\n                      *ngIf=\"pageErrorShow ? item.get('id').invalid : item.get('id').errors && item.get('id').touched\">\r\n                      <small class=\"p-error block\">Page is required </small>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-1 text-left pt-1\">\r\n                    <label class=\"d-block\">&#160;</label>\r\n                    <a href=\"javascript:void(0)\" class=\"mr-2 text-primary trash-align\" title=\"Add Child Tab\"\r\n                      fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_ADD_TAB\"><em class=\"pi pi-plus\"\r\n                        (click)=\"addChildTab(i)\"></em></a>\r\n                    <a href=\"javascript:void(0)\" class=\"mr-2 text-danger trash-align\" title=\"Delete\"\r\n                      fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_DELETE\" *ngIf=\"tabs.controls.length > 1\"><em\r\n                        class=\"pi pi-trash\" (click)=\"removeTab(i)\"></em></a>\r\n                  </div>\r\n                </div>\r\n                <!-- Begin of 2nd level Tab configuration -->\r\n                <div formArrayName=\"tabs\" class=\"childTabs\">\r\n                  <div cdkDropList (cdkDropListDropped)=\"dropItem($event)\"\r\n                    [cdkDropListData]=\"childTabs(i).controls\" [id]=\"i\">\r\n                    <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\r\n                    <div *ngFor=\"let childitem of childTabs(i).controls; let childTabIndex = index\"\r\n                      [formGroupName]=\"childTabIndex\" cdkDrag [cdkDragData]=\"childitem\">\r\n                      <div class=\"row my-2\">\r\n                        <div class=\"col-lg-1 pt-1\">\r\n                          <label class=\"d-block\">&#160;</label>\r\n                          <div class=\"drag-icon\">\r\n                            <svg title=\"\" id=\"img{{ childTabIndex }}\" width=\"8\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                              viewBox=\"0 0 320 512\">\r\n                              <path\r\n                                d=\"M88 352C110.1 352 128 369.9 128 392V440C128 462.1 110.1 480 88 480H40C17.91 480 0 462.1 0 440V392C0 369.9 17.91 352 40 352H88zM280 352C302.1 352 320 369.9 320 392V440C320 462.1 302.1 480 280 480H232C209.9 480 192 462.1 192 440V392C192 369.9 209.9 352 232 352H280zM40 320C17.91 320 0 302.1 0 280V232C0 209.9 17.91 192 40 192H88C110.1 192 128 209.9 128 232V280C128 302.1 110.1 320 88 320H40zM280 192C302.1 192 320 209.9 320 232V280C320 302.1 302.1 320 280 320H232C209.9 320 192 302.1 192 280V232C192 209.9 209.9 192 232 192H280zM40 160C17.91 160 0 142.1 0 120V72C0 49.91 17.91 32 40 32H88C110.1 32 128 49.91 128 72V120C128 142.1 110.1 160 88 160H40zM280 32C302.1 32 320 49.91 320 72V120C320 142.1 302.1 160 280 160H232C209.9 160 192 142.1 192 120V72C192 49.91 209.9 32 232 32H280z\" />\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-lg-4\">\r\n                          <label class=\"d-block\">Tab Name</label>\r\n                          <input type=\"text\" class=\"form-control\" formControlName=\"name\"\r\n                            fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_TAB_NAME\" placeholder=\"Enter Tab Name\" pInputText\r\n                            required />\r\n                          <div\r\n                            *ngIf=\"tabErrorShow ? childitem.get('name').invalid : childitem.get('name').errors && childitem.get('name').touched\">\r\n                            <small class=\"p-error block\">Tab Name is required </small>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                          <label class=\"d-block\">Icon</label>\r\n                          <p-dropdown [options]=\"iconList\" styleClass=\"icon-dropdown\" formControlName=\"icon\"\r\n                            [filter]=\"true\" optionLabel=\"label\" optionValue=\"value\" [showClear]=\"true\"\r\n                            placeholder=\"Select Icon\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_TAB_NAME\">\r\n                            <ng-template let-selectedItem pTemplate=\"selectedItem\">\r\n                              <div pTooltip=\"{{selectedItem.label}}\" tooltipPosition=\"top\"\r\n                                class=\"d-flex flex-row align-items-center gap-2\" *ngIf=\"selectedItem.value\">\r\n                                <span class=\"material-symbols-outlined userempty ml-0\">{{ selectedItem.value }}</span>\r\n                                <div class=\"text-truncate\">{{ selectedItem.label }}</div>\r\n                              </div>\r\n                            </ng-template>\r\n                            <ng-template let-icon pTemplate=\"item\">\r\n                              <div class=\"d-flex flex-row align-items-start gap-2\">\r\n                                <span class=\"material-symbols-outlined userempty ml-0\">{{ icon.value }}</span>\r\n                                <div>{{ icon.label }}</div>\r\n                              </div>\r\n                            </ng-template>\r\n                          </p-dropdown>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                          <label class=\"d-block\">Page</label>\r\n                          <p-dropdown [options]=\"pageList\" placeholder=\"Select Page\" id=\"pagetype\"\r\n                            optionLabel=\"activeVersion.pagename\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_SELECT_PAGE\"\r\n                            optionValue=\"id\" formControlName=\"id\" [filter]=\"true\" [required]=\"true\"></p-dropdown>\r\n                          <div\r\n                            *ngIf=\"pageErrorShow ? childitem.get('id').invalid : childitem.get('id').errors && childitem.get('id').touched\">\r\n                            <small class=\"p-error block\">Page is required </small>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-lg-1 text-left\">\r\n                          <label class=\"d-block\">&#160;</label>\r\n                          <a href=\"javascript:void(0)\" class=\"mr-2 text-danger trash-align\" title=\"Delete\"\r\n                            fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_DELETE\"><em class=\"pi pi-trash\"\r\n                              (click)=\"removeChildTab(i, childTabIndex)\"></em></a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- End of 2nd level Tab configuration -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n  <div class=\"formicon mt-3 text-right\">\r\n    <button class=\"mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    <button class=\"mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_PUBLISH\"\r\n      (click)=\"saveTabs(true)\">\r\n      Publish\r\n    </button>\r\n    <button class=\"mb-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_RIBBON_TAB_CONFIG_SAVE_TABS\"\r\n      (click)=\"saveTabs(false)\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport customPageList from '../../../@core/constants/config.json';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\ninterface CustomPage {\r\n  name: any;\r\n  component: any;\r\n  componentName: any;\r\n  selectedTag: any;\r\n}\r\n@Component({\r\n  selector: 'app-routing-config',\r\n  templateUrl: './routing-config.component.html',\r\n  styleUrls: ['./routing-config.component.scss']\r\n})\r\nexport class RoutingConfigComponent implements OnInit, OnDestroy {\r\n  tabsForm!: UntypedFormGroup;\r\n  formData: any;\r\n  id = '';\r\n  pageTypeList: any;\r\n  dropdownService: CommonDropdownsService;\r\n  pageList: any;\r\n  filteredPageList: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  pageBuilderService: PageBuilderService;\r\n  authService: AuthService;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  customPage: CustomPage[] = customPageList;\r\n  RBACORG: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _alert: AlertService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.id = this._route.snapshot.parent.paramMap.get('id');\r\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.getAllPages();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPageTypes();\r\n    this.initTabConfigForm();\r\n    this.setCurrentFormData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n\r\n  setCurrentFormData() {\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      const tabConfig = JSON.parse(this.formData?.tabconfig);\r\n      if (tabConfig) {\r\n        const tabsControl = <UntypedFormArray>this.tabsForm.controls['tabs'];\r\n        tabsControl.controls = [];\r\n        if (tabConfig?.length) {\r\n          tabConfig.forEach(val => {\r\n            tabsControl.push(\r\n              this._formBuilder.group({\r\n                id: val.id,\r\n                pathname: val.pathname,\r\n                type: val.type ? val.type : 'ROUTING'\r\n              })\r\n            );\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  initTabConfigForm(): void {\r\n    this.tabsForm = this._formBuilder.group({\r\n      tabs: this._formBuilder.array([this.addTabGroup()])\r\n    });\r\n  }\r\n\r\n  getPageTypes(): void {\r\n    this.dropdownService.getDropDownValues('page').subscribe(result => {\r\n      this.pageTypeList = result['data'];\r\n    });\r\n  }\r\n\r\n  getAllPages(): void {\r\n    this.pageBuilderAddService.getOrgList(this.orgId).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.pageList = res?.data?.filter(page => page?.pageTypeDetails?.key !== 'BTP');\r\n        }\r\n      },\r\n      _err => this._alert.error(AppConstants.errorMessage)\r\n    );\r\n  }\r\n\r\n  selectedPageType(event) {\r\n    console.log(event);\r\n    this.filteredPageList = this.pageList.filter(page => page.pageTypeDetails.id === event);\r\n  }\r\n\r\n  private addTabGroup(): any {\r\n    return this._formBuilder.group({\r\n      pathname: ['', [Validators.required]],\r\n      type: ['ROUTING'],\r\n      id: ['']\r\n    });\r\n  }\r\n\r\n  get tabs() {\r\n    return (this.tabsForm.get('tabs') as UntypedFormArray).controls as UntypedFormControl[];\r\n  }\r\n\r\n  // addTab() {\r\n  //   const tabs = (this.tabsForm.get('tabs') as FormArray).controls;\r\n  //   tabs.push(this.addTabGroup());\r\n  // }\r\n\r\n  // patchTab(tabValue) {\r\n  //   const tabs = (this.tabsForm.get('tabs') as FormArray).controls;\r\n  //   tabs.push(tabValue);\r\n  // }\r\n\r\n  /**\r\n   * Method to Remove tab\r\n   * @param _index index of the tab to be removed\r\n   */\r\n  // removeTab(_index: number) {\r\n  //   const tabs = this.tabsForm.get('tabs') as FormArray;\r\n  //   tabs.removeAt(_index);\r\n  // }\r\n\r\n  // getPage(id?: any) {\r\n  //   console.log(id);\r\n  //   if (id && id !== '') {\r\n  //     return this.pageList.filter(_ => _.pageTypeDetails.id == id);\r\n  //   }\r\n  // }\r\n  cancel() {\r\n    this.pageBuilderAddService.returnToList();\r\n  }\r\n\r\n  saveTabs(publish: boolean) {\r\n    if (!this.tabsForm.valid) {\r\n      return this._alert.error('Please fill all mandatory fields.');\r\n    }\r\n    const tabs = this.tabsForm.getRawValue().tabs;\r\n    this.formData.tabconfig = JSON.stringify(tabs);\r\n    if (!this.id) {\r\n      this.formData.published = publish;\r\n      this.pageBuilderAddService.createPage(this.formData).subscribe(result => {\r\n        const data = result['data'];\r\n        this._router.navigate([`pages/page-design/versions/${data.id}`]);\r\n        if (publish) {\r\n          this._alert.success(\r\n            `Tab Page Version ${data.version || data.activeVersion.version}  is published successfully`\r\n          );\r\n        } else {\r\n          this._alert.success('Tab Page added successfully');\r\n        }\r\n      });\r\n    } else {\r\n      const formDetails = this.formData;\r\n      formDetails.id = this.id;\r\n      formDetails.published = publish;\r\n      this.pageBuilderService.updatePageVersion(this.id, formDetails).subscribe(() => {\r\n        this._router.navigate([`pages/page-design/versions/${formDetails.pageid}`]);\r\n        this._alert.success('Tab Page updated successfully');\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Routing Configuration</span>\r\n    </div>\r\n    <div class=\"p-fluid\">\r\n      <div class=\"\">\r\n        <form [formGroup]=\"tabsForm\">\r\n          <div formArrayName=\"tabs\">\r\n            <div *ngFor=\"let item of tabs; let i = index\">\r\n              <div class=\"row\" [formGroupName]=\"i\">\r\n                <div class=\"p-field p-col-3\">\r\n                  <label for=\"pname\" class=\"referral-form-labels\"\r\n                    >Routing Path\r\n                    <span class=\"requiredfield text-danger\">*</span>\r\n                  </label>\r\n                  <p-dropdown\r\n                    [options]=\"customPage\"\r\n                    placeholder=\"Select Routing Page\"\r\n                    id=\"pathname\"\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"component\"\r\n                    formControlName=\"pathname\"\r\n                    fieldKey=\"PAG_DES_ROUTE_CONFIG_ROUTING_PATH\"\r\n                    (onChange)=\"selectedPage($event.value)\">\r\n                  </p-dropdown>\r\n                  <div *ngIf=\"item['controls'].pathname.errors && item['controls'].pathname.touched\">\r\n                    <small class=\"p-error block\">Routing Path is required </small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <button\r\n              class=\"pull-right mb-2 btn btn-primary btncommon\"\r\n              [disabled]=\"!tabsForm.valid\"\r\n              (click)=\"saveTabs(true)\"\r\n              fieldKey=\"PAG_DES_ROUTE_CONFIG_PUBLISH\">\r\n              <em class=\"fa fa-save\" aria-hidden=\"true\"></em> Publish\r\n            </button>\r\n            <button\r\n              class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\"\r\n              fieldKey=\"PAG_DES_ROUTE_CONFIG_SAVE_TABS\"\r\n              [disabled]=\"!tabsForm.valid\"\r\n              (click)=\"saveTabs(false)\">\r\n              <em class=\"fa fa-save\" aria-hidden=\"true\"></em> Save Tabs\r\n            </button>\r\n            <button class=\"pull-right mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n</div>\r\n","import { AfterViewChecked, ChangeDetectorRef, Component, Injector, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\n@Component({\r\n  selector: 'app-search-params',\r\n  templateUrl: './search-params.component.html',\r\n  styleUrls: ['./search-params.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchParamsComponent implements OnInit, AfterViewChecked {\r\n  searchParamsForm!: UntypedFormGroup;\r\n  searchParams: any;\r\n  fieldMapping = [];\r\n  formData: any;\r\n  tableSchemaConfig: any;\r\n  dynamicData: any;\r\n  layout: any;\r\n  id: any = '';\r\n  baseQueryColumns: any;\r\n  assetList: any;\r\n  databaseType: any;\r\n  columnText: any;\r\n  jsonMode: any[] = [];\r\n  dropdownService: CommonDropdownsService;\r\n  service: PageBuilderAddService;\r\n  gridFieldList: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private cdRef: ChangeDetectorRef,\r\n    private alert: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.service = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dgpjsonMode();\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.loadForm();\r\n    this.loadDropDown();\r\n    this.service.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      this.searchParams =\r\n        this.formData.searchparams && typeof this.formData.searchparams === 'string'\r\n          ? JSON.parse(this.formData.searchparams)\r\n          : this.formData.searchparams;\r\n      this.layout = this.formData && this.formData.layouttype ? this.formData.layouttype : null;\r\n      if (this.formData.tableschemaconfig) {\r\n        this.tableSchemaConfig =\r\n          typeof this.formData.tableschemaconfig === 'string'\r\n            ? JSON.parse(this.formData.tableschemaconfig)\r\n            : this.formData.tableschemaconfig;\r\n        if (this.tableSchemaConfig && Object.keys(this.tableSchemaConfig).length) {\r\n          this.fieldMapping = this.tableSchemaConfig.fieldmapping;\r\n        }\r\n      }\r\n      if (this.tableSchemaConfig) {\r\n        this.patchQueryParams();\r\n      }\r\n    });\r\n\r\n    this.service.currentBasicData.subscribe((data: any) => {\r\n      if (data) {\r\n        if (this.formData) {\r\n          this.formData.pagename = data.pagename;\r\n          this.formData.pagetype = data.pagetype;\r\n          this.formData.description = data.description;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  loadForm() {\r\n    this.searchParamsForm = this.formBuilder.group({\r\n      databasetypekey: [null],\r\n      baseQuery: [''],\r\n      baseQueryColumns: [null],\r\n      jsontag: [null],\r\n      mode: [null]\r\n    });\r\n  }\r\n\r\n  loadDropDown() {\r\n    this.dropdownService.getDropDownValues('Database').subscribe(result => {\r\n      this.databaseType = result['data'];\r\n    });\r\n  }\r\n\r\n  patchQueryParams() {\r\n    this.searchParamsForm.patchValue({\r\n      mode: this.tableSchemaConfig?.mode ? this.tableSchemaConfig?.mode : null,\r\n      jsontag: this.tableSchemaConfig?.jsontag ? this.tableSchemaConfig?.jsontag : null,\r\n      databasetypekey: this.tableSchemaConfig?.databasetypekey ? this.tableSchemaConfig?.databasetypekey : '',\r\n      baseQuery: this.tableSchemaConfig.baseQuery ? this.tableSchemaConfig.baseQuery : ''\r\n    });\r\n  }\r\n\r\n  formDataHandler(data) {\r\n    this.dynamicData = data;\r\n  }\r\n\r\n  changeBaseQueryType() {\r\n    this.searchParamsForm.get('baseQuery')?.setValue('');\r\n    this.searchParamsForm.get('baseQuery')?.clearValidators();\r\n    this.searchParamsForm.get('baseQuery')?.updateValueAndValidity();\r\n  }\r\n\r\n  parseSql(sql) {\r\n    sql = sql.toLowerCase();\r\n    const found: Array<any> = [];\r\n    ['SELECT', ' WHERE ', ' FROM ', ' AND ', ' OR ', ';'].forEach(function (word) {\r\n      word = word.toLowerCase();\r\n      let idx = sql.indexOf(word.toLowerCase());\r\n\r\n      while (idx !== -1) {\r\n        found.push({ word: word, index: idx });\r\n        idx = sql.indexOf(word, idx + 1);\r\n      }\r\n    });\r\n\r\n    found.sort(function (x, y) {\r\n      return x.index - y.index;\r\n    });\r\n    found.forEach(function (x, i, xs) {\r\n      if (i < xs.length - 1) {\r\n        x.text = sql\r\n          .substring(x.index, xs[i + 1].index)\r\n          .replace(xs[i].word, '')\r\n          .trim();\r\n      }\r\n    });\r\n\r\n    return found;\r\n  }\r\n\r\n  saveSearchParams() {\r\n    const formDetails = this.formData;\r\n    const searchDetails = this.searchParamsForm.getRawValue();\r\n\r\n    if (this.formData.pagetype === 'BUSP') {\r\n      searchDetails.baseQuery = this.dynamicData ? JSON.stringify(this.dynamicData) : null;\r\n      this.gridFieldList = this.dynamicData && this.dynamicData.fieldmapping ? this.dynamicData.fieldmapping : [];\r\n      this.setPageJsonData(searchDetails, formDetails);\r\n    } else {\r\n      if (searchDetails.baseQuery) {\r\n        let baseQuery = searchDetails.baseQuery;\r\n\r\n        baseQuery = baseQuery.replace(/\\n/g, ' '); // query - make single line if multiple lines\r\n\r\n        baseQuery = baseQuery.replace('select', 'SELECT').replace('from', 'FROM').replace('join', 'JOIN');\r\n        const sqlData = this.parseSql(baseQuery);\r\n        this.checkSqlData(sqlData, baseQuery, searchDetails, formDetails);\r\n      }\r\n    }\r\n  }\r\n  checkSqlData(sqlData, baseQuery, searchDetails, formDetails) {\r\n    if (sqlData && sqlData.length) {\r\n      this.columnText = sqlData[0].text ? sqlData[0].text : '';\r\n      if (this.columnText) {\r\n        if (this.columnText === '*') {\r\n          this.checkColumnText(baseQuery, searchDetails, formDetails);\r\n        } else {\r\n          this.columnListCheck(baseQuery, searchDetails, formDetails);\r\n        }\r\n      } else {\r\n        this.alert.error('Please enter valid select query');\r\n      }\r\n    } else {\r\n      this.alert.error('Please enter valid select query');\r\n    }\r\n  }\r\n\r\n  checkColumnText(baseQuery, searchDetails, formDetails) {\r\n    // Start - check schema exist in query\r\n    const tableList = baseQuery.match(/(FROM|JOIN)\\s+(\\w+.\\w+)/g).map(e => e.split(' ')[1]);\r\n    if (tableList.length) {\r\n      const checkSchema = tableList.filter(item => !item.includes('.'));\r\n      if (checkSchema.length) {\r\n        this.alert.error('Please enter query with schema');\r\n        return;\r\n      }\r\n      // checkSchema\r\n      this.getTableFields(tableList, searchDetails, formDetails);\r\n      // End - check schema exist in query\r\n    }\r\n  }\r\n\r\n  columnListCheck(baseQuery, searchDetails, formDetails) {\r\n    // Start - check schema exist in query\r\n    const tableList = baseQuery.match(/(FROM|JOIN)\\s+(\\w+.\\w+)/g).map(e => e.split(' ')[1]);\r\n    if (tableList.length) {\r\n      const checkSchema = tableList.filter(item => !item.includes('.'));\r\n      if (checkSchema.length) {\r\n        this.alert.error('Please enter query with schema');\r\n        return;\r\n      }\r\n    }\r\n    // End - check schema exist in query\r\n    const regex = AppConstants.checSchemaExistQuery; // column name with underscore issue fix\r\n    this.columnText = baseQuery.match(regex);\r\n    this.baseQueryColumns = this.columnText.map(data => {\r\n      data = data.replaceAll('\"', '');\r\n      data = data.replaceAll('~', '');\r\n      return {\r\n        header: data.charAt(0).toUpperCase() + data.substring(1),\r\n        columnDef: data.trim().toLowerCase()\r\n      };\r\n    });\r\n    this.setPageJsonData(searchDetails, formDetails);\r\n  }\r\n\r\n  setPageJsonData(searchDetails, formDetails) {\r\n    this.formDataPageType(searchDetails);\r\n    // Start - Set grid config data\r\n    const gridConfig =\r\n      formDetails.gridconfig && typeof formDetails.gridconfig === 'string'\r\n        ? JSON.parse(formDetails.gridconfig)\r\n        : formDetails.gridconfig;\r\n    let gridConfigFormArray = [];\r\n    if (gridConfig) {\r\n      gridConfigFormArray =\r\n        Object.keys(gridConfig).length && gridConfig.gridConfigFormArray && gridConfig.gridConfigFormArray.length\r\n          ? gridConfig.gridConfigFormArray\r\n          : [];\r\n    }\r\n\r\n    const tempData: Array<any> = [];\r\n    let gridConfigList;\r\n    if (this.gridFieldList && this.gridFieldList.length) {\r\n      for (const gridField of this.gridFieldList) {\r\n        this.gridFieldListCondition(gridField, gridConfigFormArray, tempData);\r\n      }\r\n      this.templateDataCheck(tempData, gridConfig, gridConfigList);\r\n    } else {\r\n      gridConfigList = '';\r\n    }\r\n    // End - Set grid config data\r\n\r\n    if (this.formData.pagetype === 'DSP' || this.formData.pagetype === 'DGP') {\r\n      formDetails.tableschemaconfig = searchDetails;\r\n    }\r\n\r\n    formDetails.layouttype = this.layout;\r\n    formDetails.gridconfig = gridConfigList;\r\n\r\n    this.service.setFormData(formDetails);\r\n\r\n    formDetails.tableschemaconfig = JSON.stringify(searchDetails);\r\n    this.formDataIdcheck(formDetails, gridConfigList);\r\n    this.checkCreatePage(formDetails, searchDetails);\r\n  }\r\n  formDataPageType(searchDetails) {\r\n    if (this.formData.pagetype === 'DSP' || this.formData.pagetype === 'DGP') {\r\n      this.gridFieldList = this.baseQueryColumns ? this.baseQueryColumns : [];\r\n      searchDetails.baseQueryColumns = this.baseQueryColumns;\r\n    }\r\n  }\r\n\r\n  gridFieldListCondition(gridField, gridConfigFormArray, tempData) {\r\n    let item;\r\n    gridField.columnDef = gridField.columnDef ? gridField.columnDef : gridField.field;\r\n    gridField.header = gridField.header ? gridField.header : gridField.label;\r\n\r\n    if (gridConfigFormArray.length) {\r\n      item = gridConfigFormArray.find((b: any) => b.columnDef === (gridField.columnDef || gridField.field));\r\n    }\r\n    if (!item) {\r\n      item = {\r\n        columnDef: gridField.columnDef,\r\n        dateFormat: '',\r\n        datetext: '',\r\n        filter: '',\r\n        header: gridField.header,\r\n        icon: '',\r\n        icontext: '',\r\n        link: '',\r\n        sort: ''\r\n      };\r\n    }\r\n    tempData.push(item);\r\n  }\r\n\r\n  templateDataCheck(tempData, gridConfig, gridConfigList) {\r\n    if (tempData.length) {\r\n      let defaultSortColumn;\r\n      if (gridConfig) {\r\n        defaultSortColumn = tempData.find(item => item.columnDef === gridConfig.defaultSortColumn);\r\n      }\r\n      gridConfigList = { ...gridConfig };\r\n      gridConfigList.defaultSortColumn = defaultSortColumn ? gridConfig.defaultSortColumn : '';\r\n      gridConfigList.defaultSortType = defaultSortColumn ? gridConfig.defaultSortType : '';\r\n      gridConfigList.gridConfigFormArray = tempData;\r\n    }\r\n  }\r\n\r\n  formDataIdcheck(formDetails, gridConfigList) {\r\n    formDetails.gridconfig =\r\n      gridConfigList && Object.keys(gridConfigList).length ? JSON.stringify(gridConfigList) : null;\r\n    if (this.id) {\r\n      formDetails.id = this.id;\r\n    }\r\n  }\r\n\r\n  checkCreatePage(formDetails, searchDetails) {\r\n    this.service.createPage(formDetails).subscribe(result => {\r\n      if (!this.id) {\r\n        const data = result['data'];\r\n        this.resultCheckKey(result, data);\r\n      }\r\n\r\n      if (this.formData.pagetype === 'REPORT' && result) {\r\n        this.saveReportTable(result['data']);\r\n      }\r\n\r\n      this.alert.success('Page saved successfully');\r\n    });\r\n\r\n    if (this.formData.pagetype === 'DGP' || this.formData.pagetype === 'DSP') {\r\n      this.saveAsset(searchDetails.baseQueryColumns);\r\n    }\r\n  }\r\n  resultCheckKey(result, data) {\r\n    if (result && Object.keys(data).length) {\r\n      const id = data?.id ? data?.id : '';\r\n      if (id) {\r\n        this.router.navigate(['../edit', id], { relativeTo: this.route });\r\n      }\r\n    }\r\n  }\r\n\r\n  saveAsset(columns) {\r\n    const tableCoulmn = columns;\r\n    const fieldArr: Array<any> = [];\r\n    this.conditionCheckSaveAssests(fieldArr);\r\n\r\n    const assetNameArr = this.assetList && this.assetList.length ? this.assetList.map(item => item.assetname) : [];\r\n    const activeArr: Array<any> = [];\r\n    const inactiveArr: Array<any> = [];\r\n\r\n    this.conditionCheckSave(fieldArr, activeArr, inactiveArr);\r\n\r\n    this.newAssetArrCheck(fieldArr, assetNameArr, tableCoulmn, activeArr);\r\n\r\n    const assetData = [...activeArr, ...inactiveArr];\r\n    this.service.getMenuList(assetData, this.formData.id).subscribe(() => {\r\n      //This is intentional\r\n    });\r\n  }\r\n\r\n  newAssetArrCheck(fieldArr, assetNameArr, tableCoulmn, activeArr) {\r\n    let newAssetArr = fieldArr;\r\n    if (assetNameArr && assetNameArr.length && fieldArr && fieldArr.length) {\r\n      newAssetArr = fieldArr.filter(x => !assetNameArr.includes(x));\r\n    }\r\n    if (newAssetArr && newAssetArr.length) {\r\n      newAssetArr.forEach(item => {\r\n        const getFieldData = tableCoulmn.find(value => value.columnDef === item);\r\n        const data = {\r\n          assetname: item,\r\n          assetpath: this.formData.pagename + '.' + item,\r\n          assettype: '45F',\r\n          dashboardtemplatejson: null,\r\n          description: getFieldData && getFieldData.header ? getFieldData.header : null,\r\n          displayname: getFieldData && getFieldData.header ? getFieldData.header : null,\r\n          icon: null,\r\n          id: null,\r\n          pageid: this.formData.id,\r\n          parentassetid: null,\r\n          url: null,\r\n          isactive: this.formData.activeVersion?.isactive,\r\n          versionid: this.formData.activeVersion?.id\r\n        };\r\n        activeArr.push(data);\r\n      });\r\n    }\r\n  }\r\n  conditionCheckSaveAssests(_fieldArr) {\r\n    if (this.fieldMapping && this.fieldMapping.length) {\r\n      if (this.formData.pagetype === 'DSP') {\r\n        _fieldArr = this.fieldMapping.map((item: any) => 'grid_' + item.columnDef);\r\n      } else {\r\n        _fieldArr = this.fieldMapping.map((item: any) => item.columnDef);\r\n      }\r\n    }\r\n  }\r\n  conditionCheckSave(fieldArr, activeArr, inactiveArr) {\r\n    if (this.assetList && this.assetList.length) {\r\n      this.assetList.forEach(item => {\r\n        if (fieldArr.includes(item.assetname)) {\r\n          activeArr.push(item);\r\n        } else {\r\n          item.isactive = false;\r\n          inactiveArr.push(item);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  getTableFields(tableList, searchDetails, formDetails) {\r\n    const tableSchemaList = tableList.map(item => item.split('.'));\r\n    let fieldsArray = [];\r\n    const requestArray: Array<any> = [];\r\n    tableSchemaList.forEach((data, i) => {\r\n      requestArray[i] = this.service.getTableFields(data[1], data[0]);\r\n    });\r\n\r\n    forkJoin(requestArray).subscribe(results => {\r\n      if (results && results.length) {\r\n        results.forEach(item => {\r\n          const fieldData = JSON.parse(JSON.stringify(item)).map(value => ({ columnDef: value[0], header: value[1] }));\r\n          fieldsArray = fieldsArray.concat(...fieldData);\r\n        });\r\n        this.baseQueryColumns = fieldsArray;\r\n      }\r\n      this.setPageJsonData(searchDetails, formDetails);\r\n    });\r\n  }\r\n\r\n  saveReportTable(result) {\r\n    this.service\r\n      .createReportTable({\r\n        sourcetypekey: 'page',\r\n        sourceidorurl: result?.id,\r\n        reportname: result?.pagename,\r\n        organizationid: result?.organizationid\r\n      })\r\n      .subscribe(() => {\r\n        // This is intentional\r\n      });\r\n  }\r\n\r\n  dgpjsonMode() {\r\n    this.dropdownService.getDropDownValues('DGPJsonMode').subscribe(result => {\r\n      this.jsonMode = result['data'];\r\n    });\r\n  }\r\n  modeChanges(jsonModeRefKey) {\r\n    if (jsonModeRefKey === '143CN') {\r\n      //143CN: Concatenate | 143MG: Merge\r\n      this.searchParamsForm.get('jsontag')?.setValidators([Validators.pattern('^[.a-zA-Z0-9;!?]*$')]);\r\n    } else {\r\n      this.searchParamsForm.get('jsontag')?.clearValidators();\r\n    }\r\n    this.searchParamsForm.get('jsontag')?.updateValueAndValidity();\r\n  }\r\n}\r\n","<div *ngIf=\"formData.pagetype !== 'BGP'\">\r\n  <form [formGroup]=\"searchParamsForm\">\r\n    <div class=\"row mt-2\">\r\n      <div *ngIf=\"formData.pagetype === 'DGP' || formData.pagetype === 'REPORT'\" class=\"col-12 mt-3 mb-4\">\r\n        <mat-radio-group\r\n          formControlName=\"databasetypekey\"\r\n          aria-label=\"Database Type\"\r\n          [required]=\"formData.pagetype === 'DGP'\">\r\n          <mat-radio-button *ngFor=\"let item of databaseType\" value=\"{{ item.refkey }}\">\r\n            {{ item.description }}&nbsp;&nbsp;&nbsp;&nbsp;</mat-radio-button\r\n          >\r\n        </mat-radio-group>\r\n      </div>\r\n      <div class=\"col-6 mt-3 mb-4\" *ngIf=\"formData.pagetype === 'DGP'\">\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"JSON Mode\" formControlName=\"mode\" (selectionChange)=\"modeChanges($event.value)\">\r\n            <mat-option value=\"\">Select</mat-option>\r\n            <mat-option *ngFor=\"let jmode of jsonMode\" [value]=\"jmode.refkey\">\r\n              {{ jmode.displayvalue }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-6 mt-3 mb-4\" *ngIf=\"formData.pagetype === 'DGP'\">\r\n        <mat-form-field>\r\n          <mat-label>Json Tag</mat-label>\r\n          <input\r\n            type=\"text\"\r\n            matInput\r\n            formControlName=\"jsontag\"\r\n            [required]=\"searchParamsForm.value.mode && searchParamsForm.value.mode !== ''\" />\r\n          <mat-error\r\n            *ngIf=\"\r\n              searchParamsForm.get('mode')?.value &&\r\n              searchParamsForm.value.mode !== '' &&\r\n              !searchParamsForm.get('jsontag')?.value\r\n            \">\r\n            Json Tag is required</mat-error\r\n          >\r\n          <mat-error *ngIf=\"searchParamsForm.get('jsontag')?.value\"> Json Tag is invalid</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field\r\n          class=\"out\"\r\n          *ngIf=\"formData.pagetype === 'DSP' || formData.pagetype === 'DGP' || formData.pagetype === 'REPORT'\">\r\n          <textarea\r\n            class=\"query-textarea\"\r\n            matInput\r\n            placeholder=\"Query\"\r\n            formControlName=\"baseQuery\"\r\n            [required]=\"formData.pagetype === 'DSP' || formData.pagetype === 'DGP'\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <ng-container *ngIf=\"formData.pagetype === 'BUSP'\">\r\n        <app-query-params [isDynamicSearchBaseQuery]=\"false\" (formDataChanged)=\"formDataHandler($event)\" class=\"col-12\">\r\n        </app-query-params>\r\n      </ng-container>\r\n    </div>\r\n  </form>\r\n  <div\r\n    class=\"col-12 mt-2 text-right\"\r\n    *ngIf=\"formData.pagetype === 'DSP' || formData.pagetype === 'DGP' || formData.pagetype === 'REPORT'\">\r\n    <button class=\"btn btn-pri\" [disabled]=\"searchParamsForm.invalid\" (click)=\"saveSearchParams()\">Save</button>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"formData.pagetype === 'BGP'\">\r\n  <app-query-params [isGridPage]=\"true\" (formDataChanged)=\"formDataHandler($event)\" class=\"col-12\"></app-query-params>\r\n</div>\r\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../../@core/constants/app-constants';\r\nimport { AlertService } from '../../../@core/services/alert.service';\r\nimport { AuthService } from '../../../@core/services/auth.service';\r\nimport { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';\r\nimport { DataStoreService } from '../../../@core/services/data-store.service';\r\nimport { LocalService } from '../../../@core/services/local.service';\r\nimport { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';\r\nimport { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';\r\n@Component({\r\n  selector: 'app-tab-config',\r\n  templateUrl: './tab-config.component.html',\r\n  styleUrls: ['./tab-config.component.scss']\r\n})\r\nexport class TabConfigComponent implements OnInit, OnDestroy {\r\n  tabsForm!: UntypedFormGroup;\r\n  formData: any;\r\n  id = '';\r\n  pageTypeList: any;\r\n  dropdownService: CommonDropdownsService;\r\n  pageList: any;\r\n  filteredPageList: any;\r\n  pageBuilderAddService: PageBuilderAddService;\r\n  pageBuilderService: PageBuilderService;\r\n  authService: AuthService;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  fieldList: any = [];\r\n  allFieldList: any = [];\r\n  parentFieldList: any = [];\r\n  tempList: any = [];\r\n  pageErrorShow = false;\r\n  tabErrorShow = false;\r\n  basicPageInformation: any;\r\n  localStore: LocalService;\r\n  httpService: any;\r\n  RBACORG: any;\r\n  constructor(\r\n    injector: Injector,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _alert: AlertService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _storeservice: DataStoreService,\r\n  ) {\r\n    this.pageBuilderAddService = injector.get<PageBuilderAddService>(PageBuilderAddService);\r\n    this.dropdownService = injector.get<CommonDropdownsService>(CommonDropdownsService);\r\n    this.pageBuilderService = injector.get<PageBuilderService>(PageBuilderService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.localStore = injector.get<LocalService>(LocalService);\r\n    this.id = this._route.snapshot.parent.paramMap.get('id');\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.httpService = res['HTTPSERVICE'];\r\n        this.RBACORG = res['RBACORG'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if (this.orgId) {\r\n          this.getAllPages();\r\n        }\r\n      }\r\n    })\r\n    this.basicPageInformation = this.localStore.getObj('PAGEDESIGN_BASICINFO');\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.id) {\r\n      const validation = this.validationPage();\r\n      if (!validation) {\r\n        this._router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this._route });\r\n        return this._alert.error('Please fill in all the required fields.');\r\n      }\r\n    }\r\n    this.getPageTypes();\r\n    this.initTabConfigForm();\r\n  }\r\n  validationPage(): any {\r\n    if (\r\n      !this.basicPageInformation.pagename ||\r\n      !this.basicPageInformation.pagetype ||\r\n      !this.basicPageInformation.description\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n\r\n  setCurrentFormData() {\r\n    this.pageBuilderAddService.currentFormData.subscribe((data: any) => {\r\n      this.formData = data;\r\n      const tabConfig = this.formData ? JSON.parse(this.formData?.tabconfig) : null;\r\n      if (tabConfig) {\r\n        const tabsControl = <UntypedFormArray>this.tabsForm.controls['tabs'];\r\n        tabsControl.controls = [];\r\n        if (tabConfig?.length) {\r\n          tabConfig.forEach((val, index) => {\r\n            tabsControl.push(\r\n              this._formBuilder.group({\r\n                id: val.id,\r\n                name: val.name,\r\n                field: val.field,\r\n                pfield: val.pfield,\r\n                icon: val.icon\r\n              })\r\n            );\r\n            this.onChange(val.id, index);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  initTabConfigForm(): void {\r\n    this.tabsForm = this._formBuilder.group({\r\n      tabs: this._formBuilder.array([this.addTabGroup()])\r\n    });\r\n  }\r\n\r\n  getPageTypes(): void {\r\n    this.dropdownService.getDropDownValues('page').subscribe(result => {\r\n      this.pageTypeList = result['data'];\r\n    });\r\n  }\r\n\r\n  getAllPages(): void {\r\n    this.pageBuilderAddService.getOrgList(this.orgId).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.pageList = res?.data?.filter(page => page?.pageTypeDetails?.key !== 'BTP');\r\n          this.setCurrentFormData();\r\n        }\r\n      },\r\n      _err => this._alert.error(AppConstants.errorMessage)\r\n    );\r\n  }\r\n\r\n  // selectedPageType(event) {\r\n  //   console.log(event);\r\n  //   this.filteredPageList = this.pageList.filter(page => page.pageTypeDetails.id === event);\r\n  // }\r\n\r\n  private addTabGroup(): any {\r\n    return this._formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      id: ['', [Validators.required]],\r\n      field: [''],\r\n      pfield: [''],\r\n      icon: [''],\r\n      tableName: ['']\r\n    });\r\n  }\r\n\r\n  get tabs() {\r\n    return (this.tabsForm.get('tabs') as UntypedFormArray).controls as UntypedFormControl[];\r\n  }\r\n\r\n  addTab() {\r\n    const tabs = (this.tabsForm.get('tabs') as UntypedFormArray).controls;\r\n    tabs.push(this.addTabGroup());\r\n    this.tabErrorShow = false;\r\n    this.pageErrorShow = false;\r\n  }\r\n\r\n  // patchTab(tabValue) {\r\n  //   const tabs = (this.tabsForm.get('tabs') as FormArray).controls;\r\n  //   tabs.push(tabValue);\r\n  // }\r\n\r\n  // /**\r\n  //  * Method to Remove tab\r\n  //  * @param _index index of the tab to be removed\r\n  //  */\r\n  removeTab(_index: number) {\r\n    const tabs = this.tabsForm.get('tabs') as UntypedFormArray;\r\n    tabs.removeAt(_index);\r\n  }\r\n\r\n  // getPage(id?: any) {\r\n  //   console.log(id);\r\n  //   if (id && id !== '') {\r\n  //     return this.pageList.filter(_ => _.pageTypeDetails.id == id);\r\n  //   }\r\n  // }\r\n  cancel() {\r\n    this.pageBuilderAddService.returnToList();\r\n  }\r\n\r\n  saveTabs(publish: boolean) {\r\n    console.log(this.tabsForm.getRawValue());\r\n    console.log(this.tabsForm.valid);\r\n    // TODO: change to tabconfig\r\n    const tabs = this.tabsForm.getRawValue().tabs;\r\n    this.tabErrorShow = true;\r\n    this.pageErrorShow = true;\r\n    tabs.forEach(tab => {\r\n      tab.type = this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.pageTypeDetails?.key;\r\n      tab.tableName = JSON.parse(\r\n        this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.activeVersion?.tableschemaconfig\r\n      )?.tablelist;\r\n      tab.parentTableName = tab.pfield?.split('.')[0];\r\n    });\r\n    this.formData.tabconfig = JSON.stringify(tabs);\r\n    console.log('Saving....');\r\n    console.log(this.formData);\r\n    if (!this.id) {\r\n      this.formData.published = publish;\r\n      this.pageBuilderAddService.createPage(this.formData).subscribe(result => {\r\n        const data = result['data'];\r\n        this._router.navigate([`pages/page-design/versions/${data.id}`]);\r\n        if (publish) {\r\n          this._alert.success(\r\n            `Tab Page Version ${data.version || data.activeVersion.version}  is published successfully`\r\n          );\r\n        } else {\r\n          this._alert.success('Tab Page added successfully');\r\n        }\r\n      });\r\n    } else {\r\n      const formDetails = this.formData;\r\n      formDetails.id = this.id;\r\n      formDetails.published = publish;\r\n      this.pageBuilderService.updatePageVersion(this.id, formDetails).subscribe(() => {\r\n        this._router.navigate([`pages/page-design/versions/${formDetails.pageid}`]);\r\n        this._alert.success('Tab Page updated successfully');\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(value, index: number) {\r\n    if (value) {\r\n      const selectedPage = this.pageList && this.pageList?.length ? this.pageList.find(x => x.id == value) : {};\r\n      const fieldmapping = selectedPage.activeVersion\r\n        ? JSON.parse(selectedPage?.activeVersion?.tableschemaconfig)?.fieldmapping\r\n        : [];\r\n      const data =\r\n        fieldmapping && fieldmapping?.length\r\n          ? fieldmapping.map(element => {\r\n            element.label = element.tablename + '.' + element.field;\r\n            return element;\r\n          })\r\n          : [];\r\n      this.pageList[index].fieldmapping = data;\r\n    } else {\r\n      this.pageList[index].fieldmapping = [];\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Tab Configuration</span>\r\n    </div>\r\n    <div class=\"p-fluid\">\r\n      <div class=\"\">\r\n        <form [formGroup]=\"tabsForm\">\r\n          <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n            <span class=\"report_head font-weight-bold\"></span>\r\n            <button class=\"btn btn-primary\" fieldKey=\"PAG_DES_TAB_CONFIG_ADD_TAB\" (click)=\"addTab()\">\r\n              <em class=\"fa fa-plus\" aria-hidden=\"true\"></em> Add Tab\r\n            </button>\r\n          </div>\r\n          <table aria-describedby=\"gridConfigTable\" class=\"table table-borderless actionadd mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Tab Name <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Icon</th>\r\n                <th scope=\"col\">Page <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Field Mapping</th>\r\n                <th scope=\"col\">Parent Field Mapping</th>\r\n                <th scope=\"col\">&#160;</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody formArrayName=\"tabs\" *ngFor=\"let item of tabs; let i = index\">\r\n              <tr [formGroupName]=\"i\">\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Tab Name\"\r\n                    pInputText\r\n                    required />\r\n                  <div\r\n                    *ngIf=\"\r\n                      tabErrorShow ? item.get('name').invalid : item.get('name').errors && item.get('name').touched\r\n                    \">\r\n                    <div class=\"p-error block mt-1\">Tab Name is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"icon\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Icon\"\r\n                    pInputText />\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.pageList\"\r\n                    placeholder=\"Select Page\"\r\n                    id=\"pagetype\"\r\n                    optionLabel=\"activeVersion.pagename\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"id\"\r\n                    formControlName=\"id\"\r\n                    [filter]=\"true\"\r\n                    (onChange)=\"onChange($event.value, i)\"\r\n                    [required]=\"true\">\r\n                  </p-dropdown>\r\n                  <div *ngIf=\"pageErrorShow ? item.get('id').invalid : item.get('id').errors && item.get('id').touched\">\r\n                    <div class=\"p-error block mt-1\">Page is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"pageList && pageList?.length ? pageList[i].fieldmapping : []\"\r\n                    placeholder=\"Select Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"field\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"field\"\r\n                    formControlName=\"field\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.parentFieldList[i]\"\r\n                    placeholder=\"Select Parent Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"label\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"label\"\r\n                    formControlName=\"pfield\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td class=\"text-center\" *ngIf=\"tabs.length > 1\">\r\n                  <a\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"text-danger trash-align\"\r\n                    title=\"Delete\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_DELETE\">\r\n                    <em class=\"pi pi-trash\" (click)=\"removeTab(i)\"></em>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n  <div class=\"formicon mt-3 text-right\">\r\n    <button class=\"mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    <button class=\"mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_PUBLISH\" (click)=\"saveTabs(true)\">\r\n      Publish\r\n    </button>\r\n    <button class=\"mb-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_SAVE_TABS\" (click)=\"saveTabs(false)\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BasicInfoComponent } from './basic-info/basic-info.component';\r\nimport { DesignPageComponent } from './design-page/design-page.component';\r\nimport { GridConfigComponent } from './grid-config/grid-config.component';\r\nimport { PageBuilderAddComponent } from './page-builder-add.component';\r\nimport { QueryParamsComponent } from './query-params/query-params.component';\r\nimport { RibbonDesignPageComponent } from './ribbon-design-page/ribbon-design-page.component';\r\nimport { RibbonTabConfigComponent } from './ribbon-tab-config/ribbon-tab-config.component';\r\nimport { RoutingConfigComponent } from './routing-config/routing-config.component';\r\nimport { SearchParamsComponent } from './search-params/search-params.component';\r\nimport { TabConfigComponent } from './tab-config/tab-config.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PageBuilderAddComponent,\r\n    children: [\r\n      {\r\n        path: 'basic-info',\r\n        component: BasicInfoComponent\r\n      },\r\n      {\r\n        path: 'page-design',\r\n        component: DesignPageComponent\r\n      },\r\n      {\r\n        path: 'grid-config',\r\n        component: GridConfigComponent\r\n      },\r\n      {\r\n        path: 'search-params',\r\n        component: SearchParamsComponent\r\n      },\r\n      {\r\n        path: 'grid-field',\r\n        component: QueryParamsComponent\r\n      },\r\n      {\r\n        path: 'tab-config',\r\n        component: TabConfigComponent\r\n      },\r\n      {\r\n        path: 'routing-config',\r\n        component: RoutingConfigComponent\r\n      },\r\n      // {\r\n      //   path: 'ocr-validation',\r\n      //   loadChildren: () => import('../../../ocr-validation/ocr-validation.module').then(m => m.OcrValidationModule)\r\n      // },\r\n      {\r\n        path: 'ribbon-tab-config',\r\n        component: RibbonTabConfigComponent\r\n      },\r\n      {\r\n        path: 'page-ribbon-design',\r\n        component: RibbonDesignPageComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PageBuilderAddRoutingModule { }\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, Injector, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormioModule } from '@formio/angular';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DxListModule } from 'devextreme-angular';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DirectivesModule } from '../../@core/directives/directives.module';\r\nimport { MaterialUIModule } from '../../@core/material-ui/material-ui.module';\r\nimport { SharedPipesModule } from '../../@core/pipes/shared-pipes.module';\r\nimport { PrimengModule } from '../../@core/primeng.module';\r\nimport { GridListModule } from '../../@shared/grid-list/grid-list.module';\r\nimport { BasicInfoComponent } from './basic-info/basic-info.component';\r\nimport { DateRangeWrapperComponent } from './date-Range/dateRange-wrapper.component';\r\nimport { registerDateRangeComponent } from './date-Range/dateRange-wrapper.formio';\r\nimport { DesignPageComponent } from './design-page/design-page.component';\r\nimport { FileUploadBasicComponent } from './file-upload-basic/file-upload-basic.component';\r\nimport { registerBasicFileUploadComponent } from './file-upload-basic/file-upload-basic.formio';\r\nimport { FileUploadWrapperComponent } from './file-upload-wrapper/file-upload-wrapper.component';\r\nimport { registerFileUploadComponent } from './file-upload-wrapper/file-upload-wrapper.formio';\r\nimport { GlobalSearchWrapperComponent } from './global-search-wrapper/global-search-wrapper.component';\r\nimport { registerGlobalSearchComponent } from './global-search-wrapper/global-search-wrapper.formio';\r\nimport { GridConfigComponent } from './grid-config/grid-config.component';\r\nimport { PageBuilderAddRoutingModule } from './page-builder-add-routing.module';\r\nimport { PageBuilderAddComponent } from './page-builder-add.component';\r\nimport { PopupWrapperComponent } from './popup-wrapper/popup-wrapper.component';\r\nimport { registerPopupComponent } from './popup-wrapper/popup-wrapper.formio';\r\nimport { QueryParamsComponent } from './query-params/query-params.component';\r\nimport { RatingWrapperComponent } from './rating-wrapper/rating-wrapper.component';\r\nimport { registerRatingComponent } from './rating-wrapper/rating-wrapper.formio';\r\nimport { RibbonDesignPageComponent } from './ribbon-design-page/ribbon-design-page.component';\r\nimport { RibbonTabConfigComponent } from './ribbon-tab-config/ribbon-tab-config.component';\r\nimport { RoutingConfigComponent } from './routing-config/routing-config.component';\r\nimport { SearchParamsComponent } from './search-params/search-params.component';\r\nimport { TabConfigComponent } from './tab-config/tab-config.component';\r\n@NgModule({\r\n    declarations: [\r\n        PageBuilderAddComponent,\r\n        SearchParamsComponent,\r\n        GridConfigComponent,\r\n        DesignPageComponent,\r\n        QueryParamsComponent,\r\n        PopupWrapperComponent,\r\n        BasicInfoComponent,\r\n        TabConfigComponent,\r\n        DateRangeWrapperComponent,\r\n        RoutingConfigComponent,\r\n        RatingWrapperComponent,\r\n        FileUploadWrapperComponent,\r\n        GlobalSearchWrapperComponent,\r\n        FileUploadBasicComponent,\r\n        RibbonTabConfigComponent,\r\n        RibbonDesignPageComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PageBuilderAddRoutingModule,\r\n        NgbModule,\r\n        FormioModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialUIModule,\r\n        DxListModule,\r\n        SharedPipesModule,\r\n        PrimengModule,\r\n        GridListModule,\r\n        DirectivesModule,\r\n        PanelModule,\r\n        TreeSelectModule,\r\n        DragDropModule,\r\n        AutoCompleteModule\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n    providers: [\r\n        {\r\n            provide: STEPPER_GLOBAL_OPTIONS,\r\n            useValue: { displayDefaultIndicatorType: false }\r\n        }\r\n    ]\r\n})\r\nexport class PageBuilderAddModule {\r\n    constructor(injector: Injector) {\r\n        registerPopupComponent(injector);\r\n        registerDateRangeComponent(injector);\r\n        registerRatingComponent(injector);\r\n        registerFileUploadComponent(injector);\r\n        registerGlobalSearchComponent(injector);\r\n        registerBasicFileUploadComponent(injector);\r\n    }\r\n}\r\n"],"names":["i1.DataStoreService","i3.DataStoreService","i4.AlertService","i5","i6","i8","i9","i11.PermissionDirective","i1","i2.LocalService","i3.AlertService","i4","i5.DataStoreService","i7","i10","i11","i12.ShowFieldDirective","PageBuilderService","i4.DataStoreService","i12.PermissionDirective","i13.ShowFieldDirective","i4.PermissionStore","i2.AlertService","i3","i8.PermissionDirective","i10.QueryParamsComponent","i9.PermissionDirective"],"mappings":"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"}