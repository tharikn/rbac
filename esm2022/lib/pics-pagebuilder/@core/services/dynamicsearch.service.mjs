import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { DynamicSearchURL } from '../url/dynamic-search-url.config';
import * as i0 from "@angular/core";
import * as i1 from "./data-store.service";
;
export class DynamicsearchService {
    _storeservice;
    port;
    port_communication;
    port_document;
    port_searchinput;
    port_report;
    onChangePageEventData;
    onChangePageEventId;
    onChangePageUserData;
    onChangePersonId;
    onChangeConfigData;
    inputFieldId;
    personTabName;
    personHealthTabName;
    personFinanceTabName;
    clickedId;
    rowData;
    caseNumberAfterApproval;
    isPageDesign = new BehaviorSubject(false);
    observePage = this.isPageDesign.asObservable();
    data = new BehaviorSubject(false);
    sourceId = new BehaviorSubject('');
    sourceIdService = new BehaviorSubject('');
    id = new BehaviorSubject('');
    pageId = new BehaviorSubject('');
    moduleid = new BehaviorSubject('');
    purposeid = new BehaviorSubject('');
    workFlowDesign = new BehaviorSubject(null);
    workFlowStatus = new BehaviorSubject('');
    result = new BehaviorSubject('');
    httpService;
    constructor(_storeservice) {
        this._storeservice = _storeservice;
        console.log("HHTPPService2222", this._storeservice.getData('HTTPSERVICE'));
        this._storeservice.currentStore.subscribe((res) => {
            if (res) {
                this.httpService = res['HTTPSERVICE'];
            }
        });
        this.port = 'workflow';
        this.port_communication = 'communication';
        this.port_document = 'document';
        this.port_searchinput = 'searchinput';
        this.port_report = 'report';
    }
    set clickableData(data) {
        this.inputFieldId = data;
    }
    get clickableData() {
        return this.inputFieldId;
    }
    set personTabNameData(data) {
        this.personTabName = data;
    }
    get personTabNameData() {
        return this.personTabName;
    }
    set personHealthTabNameData(data) {
        this.personHealthTabName = data;
    }
    get personHealthTabNameData() {
        return this.personHealthTabName;
    }
    set personFinanceTabNameData(data) {
        this.personFinanceTabName = data;
    }
    get personFinanceTabNameData() {
        return this.personFinanceTabName;
    }
    set clickedIdData(data) {
        this.clickedId = data;
    }
    get clickedIdData() {
        return this.clickedId;
    }
    set caseNumberAfterApprovalData(data) {
        this.caseNumberAfterApproval = data;
    }
    get caseNumberAfterApprovalData() {
        return this.caseNumberAfterApproval;
    }
    set clickedRowData(data) {
        this.rowData = data;
    }
    get clickedRowData() {
        return this.rowData;
    }
    getGridUserPreference(id) {
        return this.httpService.get(DynamicSearchURL.EndPoints.userConfig.getUserConfig + id);
    }
    getStaticGridConfig(id) {
        return this.httpService.get(DynamicSearchURL.EndPoints.userConfig.getStaticGridConfig.replace('{id}', id));
    }
    saveGridUserPreference(data) {
        return this.httpService.post(DynamicSearchURL.EndPoints.userConfig.saveUserConfig, data);
    }
    sendMail(data) {
        return this.httpService.post(DynamicSearchURL.EndPoints.notification.sendMail, data);
    }
    generateDocument(data, typeCheck) {
        const url = typeCheck
            ? DynamicSearchURL.EndPoints.documents.generateExcel
            : DynamicSearchURL.EndPoints.documents.generatePDF;
        return this.httpService.post(url, data);
    }
    exportData(data, link) {
        return this.httpService.post(link, data);
    }
    saveSearchCriteria(data) {
        return this.httpService.post(DynamicSearchURL.EndPoints.pageConfig.postApiurl, data);
    }
    startScheduling(data, url) {
        return this.httpService.post(url, data);
    }
    startSchedulingNoUrl(data, id) {
        return this.httpService.post(DynamicSearchURL.EndPoints.report.schedulertrigger + id, data);
    }
    getTemplate(formId) {
        return this.httpService.get(DynamicSearchURL.EndPoints.pageConfig.pageVersion + '/' + formId + '?applyPermissions=true');
    }
    // Remove Permission For Page-Designer View
    getTemplateView(formId) {
        return this.httpService.get(DynamicSearchURL.EndPoints.pageConfig.pageVersion + '/' + formId + '?applyPermissions=false');
    }
    getPageTabs(pageId) {
        return this.httpService.get(DynamicSearchURL.EndPoints.pageConfig.page + '/' + pageId);
    }
    changePage(page) {
        this.isPageDesign.next(page);
    }
    getFormResponse(pageId) {
        return this.httpService.get(DynamicSearchURL.EndPoints.formResponse.get.replace('{pageid}', pageId)).toPromise();
    }
    getProviderData(providerid) {
        return this.httpService.get(DynamicSearchURL.EndPoints.provider.providerData + '?userid=' + providerid);
    }
    saveCriteriaByPageId(data) {
        return this.httpService.post(DynamicSearchURL.EndPoints.criteria.save, data);
    }
    getCriteriaByPageId(pageId) {
        return this.httpService.get(DynamicSearchURL.EndPoints.criteria.getByPageId.replace('{pageId}', pageId));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DynamicsearchService, deps: [{ token: i1.DataStoreService }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DynamicsearchService, providedIn: 'root' });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DynamicsearchService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.DataStoreService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pY3NlYXJjaC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGljcy1tb2R1bGUvcGFnZS1idWlsZGVyL3NyYy9saWIvcGljcy1wYWdlYnVpbGRlci9AY29yZS9zZXJ2aWNlcy9keW5hbWljc2VhcmNoLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXZDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDOzs7QUFGN0IsQ0FBQztBQU94QyxNQUFNLE9BQU8sb0JBQW9CO0lBK0JYO0lBOUJwQixJQUFJLENBQVM7SUFDYixrQkFBa0IsQ0FBUztJQUMzQixhQUFhLENBQVM7SUFDdEIsZ0JBQWdCLENBQVM7SUFDekIsV0FBVyxDQUFTO0lBQ2IscUJBQXFCLENBQU07SUFDM0IsbUJBQW1CLENBQU07SUFDekIsb0JBQW9CLENBQU07SUFDMUIsZ0JBQWdCLENBQU07SUFDdEIsa0JBQWtCLENBQU07SUFDL0IsWUFBWSxDQUFNO0lBQ2xCLGFBQWEsQ0FBTTtJQUNuQixtQkFBbUIsQ0FBTTtJQUN6QixvQkFBb0IsQ0FBTTtJQUMxQixTQUFTLENBQU07SUFDZixPQUFPLENBQU07SUFDYix1QkFBdUIsQ0FBTTtJQUNyQixZQUFZLEdBQUcsSUFBSSxlQUFlLENBQVUsS0FBSyxDQUFDLENBQUM7SUFDM0QsV0FBVyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDeEMsSUFBSSxHQUF5QixJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RCxRQUFRLEdBQXlCLElBQUksZUFBZSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3pELGVBQWUsR0FBeUIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEUsRUFBRSxHQUF5QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNuRCxNQUFNLEdBQXlCLElBQUksZUFBZSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZELFFBQVEsR0FBeUIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDekQsU0FBUyxHQUF5QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMxRCxjQUFjLEdBQXlCLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pFLGNBQWMsR0FBeUIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDL0QsTUFBTSxHQUF5QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5RCxXQUFXLENBQU07SUFDakIsWUFBb0IsYUFBK0I7UUFBL0Isa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBQ2pELE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUMxRSxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtZQUNyRCxJQUFHLEdBQUcsRUFBQztnQkFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQTthQUN0QztRQUNILENBQUMsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLElBQUksR0FBRyxVQUFVLENBQUM7UUFDdkIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGVBQWUsQ0FBQztRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLFVBQVUsQ0FBQztRQUNoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsYUFBYSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLGFBQWEsQ0FBQyxJQUFTO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQUksaUJBQWlCLENBQUMsSUFBUztRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLHVCQUF1QixDQUFDLElBQVM7UUFDbkMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSx1QkFBdUI7UUFDekIsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksd0JBQXdCLENBQUMsSUFBUztRQUNwQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJLHdCQUF3QjtRQUMxQixPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSSxhQUFhLENBQUMsSUFBUztRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFDRCxJQUFJLDJCQUEyQixDQUFDLElBQVM7UUFDdkMsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQztJQUN0QyxDQUFDO0lBRUQsSUFBSSwyQkFBMkI7UUFDN0IsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUM7SUFDdEMsQ0FBQztJQUVELElBQUksY0FBYyxDQUFDLElBQVM7UUFDMUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVELHFCQUFxQixDQUFDLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBRUQsbUJBQW1CLENBQUMsRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdHLENBQUM7SUFFRCxzQkFBc0IsQ0FBQyxJQUFJO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVELFFBQVEsQ0FBQyxJQUFJO1FBQ1gsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFNBQVM7UUFDOUIsTUFBTSxHQUFHLEdBQUcsU0FBUztZQUNuQixDQUFDLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxhQUFhO1lBQ3BELENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQztRQUNyRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxJQUFJO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUVELGVBQWUsQ0FBQyxJQUFJLEVBQUUsR0FBRztRQUN2QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsb0JBQW9CLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM5RixDQUFDO0lBRUQsV0FBVyxDQUFDLE1BQU07UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FDekIsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEdBQUcsR0FBRyxHQUFHLE1BQU0sR0FBRyx3QkFBd0IsQ0FDNUYsQ0FBQztJQUNKLENBQUM7SUFFRCwyQ0FBMkM7SUFDM0MsZUFBZSxDQUFDLE1BQU07UUFDcEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FDekIsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEdBQUcsR0FBRyxHQUFHLE1BQU0sR0FBRyx5QkFBeUIsQ0FDN0YsQ0FBQztJQUNKLENBQUM7SUFFRCxXQUFXLENBQUMsTUFBTTtRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQsVUFBVSxDQUFDLElBQUk7UUFDYixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsZUFBZSxDQUFDLE1BQWM7UUFDNUIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkgsQ0FBQztJQUNELGVBQWUsQ0FBQyxVQUFVO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEdBQUcsVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDO0lBQzFHLENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxJQUFJO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNELG1CQUFtQixDQUFDLE1BQU07UUFDeEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDM0csQ0FBQzt3R0ExS1Usb0JBQW9COzRHQUFwQixvQkFBb0IsY0FGbkIsTUFBTTs7NEZBRVAsb0JBQW9CO2tCQUhoQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnOztcclxuaW1wb3J0IHsgRGF0YVN0b3JlU2VydmljZSB9IGZyb20gJy4vZGF0YS1zdG9yZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRHluYW1pY1NlYXJjaFVSTCB9IGZyb20gJy4uL3VybC9keW5hbWljLXNlYXJjaC11cmwuY29uZmlnJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIER5bmFtaWNzZWFyY2hTZXJ2aWNlIHtcclxuICBwb3J0OiBzdHJpbmc7XHJcbiAgcG9ydF9jb21tdW5pY2F0aW9uOiBzdHJpbmc7XHJcbiAgcG9ydF9kb2N1bWVudDogc3RyaW5nO1xyXG4gIHBvcnRfc2VhcmNoaW5wdXQ6IHN0cmluZztcclxuICBwb3J0X3JlcG9ydDogc3RyaW5nO1xyXG4gIHB1YmxpYyBvbkNoYW5nZVBhZ2VFdmVudERhdGE6IGFueTtcclxuICBwdWJsaWMgb25DaGFuZ2VQYWdlRXZlbnRJZDogYW55O1xyXG4gIHB1YmxpYyBvbkNoYW5nZVBhZ2VVc2VyRGF0YTogYW55O1xyXG4gIHB1YmxpYyBvbkNoYW5nZVBlcnNvbklkOiBhbnk7XHJcbiAgcHVibGljIG9uQ2hhbmdlQ29uZmlnRGF0YTogYW55O1xyXG4gIGlucHV0RmllbGRJZDogYW55O1xyXG4gIHBlcnNvblRhYk5hbWU6IGFueTtcclxuICBwZXJzb25IZWFsdGhUYWJOYW1lOiBhbnk7XHJcbiAgcGVyc29uRmluYW5jZVRhYk5hbWU6IGFueTtcclxuICBjbGlja2VkSWQ6IGFueTtcclxuICByb3dEYXRhOiBhbnk7XHJcbiAgY2FzZU51bWJlckFmdGVyQXBwcm92YWw6IGFueTtcclxuICBwcml2YXRlIGlzUGFnZURlc2lnbiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gIG9ic2VydmVQYWdlID0gdGhpcy5pc1BhZ2VEZXNpZ24uYXNPYnNlcnZhYmxlKCk7XHJcbiAgcHVibGljIGRhdGE6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChmYWxzZSk7XHJcbiAgcHVibGljIHNvdXJjZUlkOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xyXG4gIHB1YmxpYyBzb3VyY2VJZFNlcnZpY2U6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XHJcbiAgcHVibGljIGlkOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xyXG4gIHB1YmxpYyBwYWdlSWQ6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XHJcbiAgcHVibGljIG1vZHVsZWlkOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xyXG4gIHB1YmxpYyBwdXJwb3NlaWQ6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XHJcbiAgcHVibGljIHdvcmtGbG93RGVzaWduOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3QobnVsbCk7XHJcbiAgcHVibGljIHdvcmtGbG93U3RhdHVzOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xyXG4gIHB1YmxpYyByZXN1bHQ6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XHJcbiAgaHR0cFNlcnZpY2U6IGFueTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zdG9yZXNlcnZpY2U6IERhdGFTdG9yZVNlcnZpY2UpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiSEhUUFBTZXJ2aWNlMjIyMlwiLHRoaXMuX3N0b3Jlc2VydmljZS5nZXREYXRhKCdIVFRQU0VSVklDRScpKTtcclxuICAgIHRoaXMuX3N0b3Jlc2VydmljZS5jdXJyZW50U3RvcmUuc3Vic2NyaWJlKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICBpZihyZXMpe1xyXG4gICAgICAgIHRoaXMuaHR0cFNlcnZpY2UgPSByZXNbJ0hUVFBTRVJWSUNFJ11cclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIHRoaXMucG9ydCA9ICd3b3JrZmxvdyc7XHJcbiAgICB0aGlzLnBvcnRfY29tbXVuaWNhdGlvbiA9ICdjb21tdW5pY2F0aW9uJztcclxuICAgIHRoaXMucG9ydF9kb2N1bWVudCA9ICdkb2N1bWVudCc7XHJcbiAgICB0aGlzLnBvcnRfc2VhcmNoaW5wdXQgPSAnc2VhcmNoaW5wdXQnO1xyXG4gICAgdGhpcy5wb3J0X3JlcG9ydCA9ICdyZXBvcnQnO1xyXG4gIH1cclxuXHJcbiAgc2V0IGNsaWNrYWJsZURhdGEoZGF0YTogYW55KSB7XHJcbiAgICB0aGlzLmlucHV0RmllbGRJZCA9IGRhdGE7XHJcbiAgfVxyXG5cclxuICBnZXQgY2xpY2thYmxlRGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLmlucHV0RmllbGRJZDtcclxuICB9XHJcbiAgc2V0IHBlcnNvblRhYk5hbWVEYXRhKGRhdGE6IGFueSkge1xyXG4gICAgdGhpcy5wZXJzb25UYWJOYW1lID0gZGF0YTtcclxuICB9XHJcblxyXG4gIGdldCBwZXJzb25UYWJOYW1lRGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLnBlcnNvblRhYk5hbWU7XHJcbiAgfVxyXG4gIHNldCBwZXJzb25IZWFsdGhUYWJOYW1lRGF0YShkYXRhOiBhbnkpIHtcclxuICAgIHRoaXMucGVyc29uSGVhbHRoVGFiTmFtZSA9IGRhdGE7XHJcbiAgfVxyXG5cclxuICBnZXQgcGVyc29uSGVhbHRoVGFiTmFtZURhdGEoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5wZXJzb25IZWFsdGhUYWJOYW1lO1xyXG4gIH1cclxuXHJcbiAgc2V0IHBlcnNvbkZpbmFuY2VUYWJOYW1lRGF0YShkYXRhOiBhbnkpIHtcclxuICAgIHRoaXMucGVyc29uRmluYW5jZVRhYk5hbWUgPSBkYXRhO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBlcnNvbkZpbmFuY2VUYWJOYW1lRGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLnBlcnNvbkZpbmFuY2VUYWJOYW1lO1xyXG4gIH1cclxuXHJcbiAgc2V0IGNsaWNrZWRJZERhdGEoZGF0YTogYW55KSB7XHJcbiAgICB0aGlzLmNsaWNrZWRJZCA9IGRhdGE7XHJcbiAgfVxyXG5cclxuICBnZXQgY2xpY2tlZElkRGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLmNsaWNrZWRJZDtcclxuICB9XHJcbiAgc2V0IGNhc2VOdW1iZXJBZnRlckFwcHJvdmFsRGF0YShkYXRhOiBhbnkpIHtcclxuICAgIHRoaXMuY2FzZU51bWJlckFmdGVyQXBwcm92YWwgPSBkYXRhO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNhc2VOdW1iZXJBZnRlckFwcHJvdmFsRGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLmNhc2VOdW1iZXJBZnRlckFwcHJvdmFsO1xyXG4gIH1cclxuXHJcbiAgc2V0IGNsaWNrZWRSb3dEYXRhKGRhdGE6IGFueSkge1xyXG4gICAgdGhpcy5yb3dEYXRhID0gZGF0YTtcclxuICB9XHJcblxyXG4gIGdldCBjbGlja2VkUm93RGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLnJvd0RhdGE7XHJcbiAgfVxyXG5cclxuICBnZXRHcmlkVXNlclByZWZlcmVuY2UoaWQpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLmdldChEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy51c2VyQ29uZmlnLmdldFVzZXJDb25maWcgKyBpZCk7XHJcbiAgfVxyXG5cclxuICBnZXRTdGF0aWNHcmlkQ29uZmlnKGlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoRHluYW1pY1NlYXJjaFVSTC5FbmRQb2ludHMudXNlckNvbmZpZy5nZXRTdGF0aWNHcmlkQ29uZmlnLnJlcGxhY2UoJ3tpZH0nLCBpZCkpO1xyXG4gIH1cclxuXHJcbiAgc2F2ZUdyaWRVc2VyUHJlZmVyZW5jZShkYXRhKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5wb3N0KER5bmFtaWNTZWFyY2hVUkwuRW5kUG9pbnRzLnVzZXJDb25maWcuc2F2ZVVzZXJDb25maWcsIGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgc2VuZE1haWwoZGF0YSkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UucG9zdChEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy5ub3RpZmljYXRpb24uc2VuZE1haWwsIGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVEb2N1bWVudChkYXRhLCB0eXBlQ2hlY2spIHtcclxuICAgIGNvbnN0IHVybCA9IHR5cGVDaGVja1xyXG4gICAgICA/IER5bmFtaWNTZWFyY2hVUkwuRW5kUG9pbnRzLmRvY3VtZW50cy5nZW5lcmF0ZUV4Y2VsXHJcbiAgICAgIDogRHluYW1pY1NlYXJjaFVSTC5FbmRQb2ludHMuZG9jdW1lbnRzLmdlbmVyYXRlUERGO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UucG9zdCh1cmwsIGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgZXhwb3J0RGF0YShkYXRhLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5wb3N0KGxpbmssIGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgc2F2ZVNlYXJjaENyaXRlcmlhKGRhdGEpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLnBvc3QoRHluYW1pY1NlYXJjaFVSTC5FbmRQb2ludHMucGFnZUNvbmZpZy5wb3N0QXBpdXJsLCBkYXRhKTtcclxuICB9XHJcblxyXG4gIHN0YXJ0U2NoZWR1bGluZyhkYXRhLCB1cmwpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLnBvc3QodXJsLCBkYXRhKTtcclxuICB9XHJcblxyXG4gIHN0YXJ0U2NoZWR1bGluZ05vVXJsKGRhdGEsIGlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5wb3N0KER5bmFtaWNTZWFyY2hVUkwuRW5kUG9pbnRzLnJlcG9ydC5zY2hlZHVsZXJ0cmlnZ2VyICsgaWQsIGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VGVtcGxhdGUoZm9ybUlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoXHJcbiAgICAgIER5bmFtaWNTZWFyY2hVUkwuRW5kUG9pbnRzLnBhZ2VDb25maWcucGFnZVZlcnNpb24gKyAnLycgKyBmb3JtSWQgKyAnP2FwcGx5UGVybWlzc2lvbnM9dHJ1ZSdcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvLyBSZW1vdmUgUGVybWlzc2lvbiBGb3IgUGFnZS1EZXNpZ25lciBWaWV3XHJcbiAgZ2V0VGVtcGxhdGVWaWV3KGZvcm1JZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UuZ2V0KFxyXG4gICAgICBEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy5wYWdlQ29uZmlnLnBhZ2VWZXJzaW9uICsgJy8nICsgZm9ybUlkICsgJz9hcHBseVBlcm1pc3Npb25zPWZhbHNlJ1xyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGdldFBhZ2VUYWJzKHBhZ2VJZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UuZ2V0KER5bmFtaWNTZWFyY2hVUkwuRW5kUG9pbnRzLnBhZ2VDb25maWcucGFnZSArICcvJyArIHBhZ2VJZCk7XHJcbiAgfVxyXG5cclxuICBjaGFuZ2VQYWdlKHBhZ2UpIHtcclxuICAgIHRoaXMuaXNQYWdlRGVzaWduLm5leHQocGFnZSk7XHJcbiAgfVxyXG5cclxuICBnZXRGb3JtUmVzcG9uc2UocGFnZUlkOiBzdHJpbmcpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLmdldChEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy5mb3JtUmVzcG9uc2UuZ2V0LnJlcGxhY2UoJ3twYWdlaWR9JywgcGFnZUlkKSkudG9Qcm9taXNlKCk7XHJcbiAgfVxyXG4gIGdldFByb3ZpZGVyRGF0YShwcm92aWRlcmlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoRHluYW1pY1NlYXJjaFVSTC5FbmRQb2ludHMucHJvdmlkZXIucHJvdmlkZXJEYXRhICsgJz91c2VyaWQ9JyArIHByb3ZpZGVyaWQpO1xyXG4gIH1cclxuXHJcbiAgc2F2ZUNyaXRlcmlhQnlQYWdlSWQoZGF0YSkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UucG9zdChEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy5jcml0ZXJpYS5zYXZlLCBkYXRhKTtcclxuICB9XHJcbiAgZ2V0Q3JpdGVyaWFCeVBhZ2VJZChwYWdlSWQpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLmdldChEeW5hbWljU2VhcmNoVVJMLkVuZFBvaW50cy5jcml0ZXJpYS5nZXRCeVBhZ2VJZC5yZXBsYWNlKCd7cGFnZUlkfScsIHBhZ2VJZCkpO1xyXG4gIH1cclxufVxyXG4iXX0=