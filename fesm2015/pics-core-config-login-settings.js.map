{"version":3,"file":"pics-core-config-login-settings.js","sources":["../../../../projects/pics-core/config-login-settings/src/lib/config-login-settings.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/urls/rbac-url.config.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/store.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/permissions/permission.store.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/data-store.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/constants/app-constants.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/alert.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/urls/configuration-settings-url.config.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/configuration-settings.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@shared/alert/alert.component.ts","../../../../projects/pics-core/config-login-settings/src/lib/@shared/alert/alert.component.html","../../../../projects/pics-core/config-login-settings/src/lib/pics-config-login-settings/config-login-settings/config-login-settings.component.ts","../../../../projects/pics-core/config-login-settings/src/lib/pics-config-login-settings/config-login-settings/config-login-settings.component.html","../../../../projects/pics-core/config-login-settings/src/lib/config-login-settings.component.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/app.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/logger.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/credentials.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/auth.guard.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/local-storage.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/storage.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/local.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/microstrategy.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/theme.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/directives/permission.directive.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/directives/show-field.directives.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/directives/directives.module.ts","../../../../projects/pics-core/config-login-settings/src/lib/@shared/alert/alert.module.ts","../../../../projects/pics-core/config-login-settings/src/lib/pics-config-login-settings/pics-config-login-settings.module.ts","../../../../projects/pics-core/config-login-settings/src/lib/@core/service/share-data.service.ts","../../../../projects/pics-core/config-login-settings/src/lib/config-login-settings.module.ts","../../../../projects/pics-core/config-login-settings/src/public-api.ts","../../../../projects/pics-core/config-login-settings/src/pics-core-config-login-settings.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigLoginSettingsService {\r\n\r\n  constructor() { }\r\n}\r\n","export class RoleConfig {\r\n  public static EndPoint = {\r\n    role: {\r\n      getAllUserRole: '/access-control/role',\r\n      createRole: '/access-control/role/create',\r\n      getLandingPage: '/platform/menu/application',\r\n      addPolicyGroup: '/access-control/role',\r\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\r\n      dossier: '/dossier'\r\n    }\r\n  };\r\n}\r\n\r\nexport class UserConfig {\r\n  public static EndPoint = {\r\n    User: {\r\n      getAllUserList: '/org/user',\r\n      getAllUserActiveInactive: '/org/user?includeInactiveUsers=true',\r\n      getUserConfig: '/org/user/getUserPreference/USER_THEME_PREFERENCES/{id}',\r\n      activateUser: '/org/user/activate',\r\n      createUser: '/org/user/create',\r\n      userRole: '/org/user/role',\r\n      managementgroup: '/org/team/managementgroup',\r\n      getAllUserOrgList: '/org/user/organization/',\r\n      saveUserConfig: '/user/saveUserPreference'\r\n    },\r\n    Provider: {\r\n      getProviderList: '/ref/provider',\r\n      searchProviderList: '/ref/provider/search',\r\n      addProviderUser: '/ref/provider/create/account'\r\n    }\r\n  }\r\n}\r\nexport class AttachmentConfig {\r\n  public static EndPoint = {\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\nexport class PolicyGroupConfig {\r\n  public static EndPoint = {\r\n    policyGroup: {\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup',\r\n      getAllPolicyGroupList: '/platform/page-designer/policyGroup/all',\r\n      createPolicyGroup: '/platform/page-designer/policyGroup',\r\n      getOrgPolicyGroups: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    }\r\n  };\r\n}\r\nexport class PermissionsURL {\r\n  public static EndPoints = {\r\n    permission: {\r\n      permissionRoleById: '/access-control/permission/role/{id}',\r\n      pagePermission: '/access-control/permission/page',\r\n      getPermission: '/access-control/permission/{id}',\r\n      createPermission: '/access-control/permission/create',\r\n      updateDeletePermission: '/access-control/permission/{permissionid}',\r\n      getPermissionTree: '/access-control/permission/page/{pageid}/{parentid}',\r\n      getPermissionTypes: '/access-control/permission/type/{applicationid}',\r\n      applicationPermissionsTree: '/access-control/permission/application/{applicationid}'\r\n    },\r\n    page: {\r\n      createPage: '/platform/menu/create',\r\n      updateDeletePage: '/platform/menu/{pageid}',\r\n      AllPageTree: '/platform/menu/tree/{applicationid}'\r\n    }\r\n  };\r\n}\r\nexport class AccessManagementConfig {\r\n  public static EndPoint = {\r\n    Organization: {\r\n      getOrganizationList: '/org/organization/all',\r\n      getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n    }\r\n  };\r\n}\r\nexport class MasterURL {\r\n  public static EndPoints = {\r\n    lookup: {\r\n      createCategory: '/platform/master/lookup/category',\r\n      updateDeleteCategory: '/platform/master/lookup/category/{id}',\r\n      lookup: '/platform/master/lookup/{id}',\r\n      createLookup: '/platform/master/lookup',\r\n      getPermissionRoleById: '/access-control/permission/role/{id}',\r\n      getAllCategoryTree: '/platform/master/lookup/category/tree/{applicationid}',\r\n      getLookupTree: '/platform/master/lookup/tree/{categoryid}',\r\n      getPermissionsTree: '/access-control/permission/application/{applicationid}'\r\n    }\r\n  };\r\n}\r\nexport class AuthURL {\r\n  public static EndPoints = {\r\n    auth: {\r\n      user: {\r\n        conformMail: '/org/auth/forgot-password',\r\n        changePassword: '/org/auth/forgot-password-verification',\r\n        login: '/org/auth/login',\r\n        refreshToken: '/org/auth/refresh-token',\r\n        logout: '/org/auth/logout',\r\n        userInfo: '/org/user/page/list',\r\n        userRole: '/org/user/{id}',\r\n        routeToDynamicPage: '/platform/page-designer/page/organization/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true',\r\n        authMe: '/org/auth/me',\r\n        resetPassword: '/org/user/reset-password',\r\n        orgList: '/org/management-group/organization/tree',\r\n        notification: '/worker/notification',\r\n        workerAvailability: '/worker/updateAvailablity',\r\n        getWorkerAvailability: '/worker/getByCurrentUser',\r\n        userValidate: '/org/auth/user-validate',\r\n        generateLoginUrl: '/org/auth/get-login-url',\r\n        getTokenValidationUrl: '/org/auth/token-validation',\r\n      },\r\n      permission: {\r\n        permissionRoleById: '/access-control/permission/role/{id}',\r\n        pagePermission: '/access-control/permission/page',\r\n        pageLookupPermission: '/access-control/permission/page/lookup'\r\n      },\r\n      microstrategy: {\r\n        login: '/platform/microstrategy/login',\r\n        getLibrary: '/platform/microstrategy/library'\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","export class AppConstants {\r\n  public static errorMessage = 'Something went wrong!';\r\n  public static regexEmail = '^[0-9a-zA-Z.-]+[@][0-9a-zA-Z.-]+[.][0-9a-zA-Z]{2,}$';\r\n\r\n  public static errorList = [\r\n    'Have at least one (1) number',\r\n    'Have at least one (1) special character',\r\n    'Have at least one (1) upper case letter',\r\n    'Have at least one (1) lower case letter',\r\n    'Contain a minimum of fourteen (14) characters'\r\n  ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","export class ConfigurationSettingsConfig {\r\n  public static EndPoint = {\r\n    Organization: {\r\n      getOrganizationList: '/platform/page-designer/page/organization/all',\r\n      getOrganization:\r\n        '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n    },\r\n    Page: {\r\n      getPage: '/page'\r\n    },\r\n    Asset: {\r\n      getAsset: 'asset',\r\n      getPageAsset: '/platform/page-designer/asset/getpagebyid',\r\n      getUserAsset: '/platform/page-designer/asset/getUserAssets',\r\n      getRoleAsset: '/platform/page-designer/asset/getRoleAssets',\r\n      getPolicyGroupAsset: '/platform/page-designer/asset/getPolicyGroupAssets'\r\n    },\r\n    User: {\r\n      getUser: '/org/user/',\r\n      getUserList: '/org/user/all',\r\n      getUserorgList: '/org/user/organization/'\r\n    },\r\n    ConfigSettings: {\r\n      saveConfig: '/org/config-settings/create',\r\n      getConfigList: '/org/config-settings/list',\r\n      getConfigById: '/org/config-settings/list?id=',\r\n      deleteConfig: '/org/config-settings/',\r\n      updateConfig: '/org/config-settings/',\r\n      registrationInfo: '/org/auth/configsettings'\r\n    },\r\n    role: {\r\n      getAllUserRole: '/access-control/role',\r\n      createRole: '/access-control/role/create',\r\n      getLandingPage: '/platform/menu/application',\r\n      addPolicyGroup: '/access-control/role',\r\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\r\n      dossier: '/dossier'\r\n    },\r\n    Email: {\r\n      emailtemplateList: '/solution/emailtemplate/channel/EMAIL'\r\n    },\r\n    org: {\r\n      getOrganizations: '/org/management-group/organization/tree'\r\n    },\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\nexport class AttachmentConfig {\r\n  public static EndPoint = {\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigurationSettingsConfig } from '../urls/configuration-settings-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigurationSettingsService {\r\n\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n\r\n  getUserList(orgid) {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.User.getUserorgList + orgid);\r\n  }\r\n  saveConfigSettings(modal) {\r\n    return this.httpService.post(ConfigurationSettingsConfig.EndPoint.ConfigSettings.saveConfig, modal);\r\n  }\r\n  getConfigList() {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.ConfigSettings.getConfigList);\r\n  }\r\n  getConfigById(id) {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.ConfigSettings.getConfigById + id);\r\n  }\r\n  deleteConfig(id) {\r\n    return this.httpService.delete(ConfigurationSettingsConfig.EndPoint.ConfigSettings.deleteConfig + id);\r\n  }\r\n  updateConfig(id, modal) {\r\n    return this.httpService.patch(ConfigurationSettingsConfig.EndPoint.ConfigSettings.updateConfig + id, modal);\r\n  }\r\n  getAllUserRole(id?: any) {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.role.getAllOrgRole.replace('{orgid}', String(id)));\r\n  }\r\n  getEmailTemplateNewList() {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.Email.emailtemplateList);\r\n  }\r\n  getAllOrganizations() {\r\n    return this.httpService.get(ConfigurationSettingsConfig.EndPoint.org.getOrganizations);\r\n  }\r\n  uploadKey(objparams) {\r\n    return this.httpService.post(ConfigurationSettingsConfig.EndPoint.Attachments.UploadKey, objparams);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\r\nconst DISPLAY_IN_SECONDS = 8;\r\n@Component({\r\n  // moduleId: module.id,\r\n  selector: 'app-alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (!alert) {\r\n        // clear alerts when an empty alert is received\r\n        this.alerts = [];\r\n        return;\r\n      }\r\n\r\n      // add alert to array\r\n      this.alerts.push(alert);\r\n      // remove alert after 5 seconds\r\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\r\n    });\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    this.alerts = this.alerts.filter(x => x !== alert);\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    // return css class based on alert type\r\n    switch (alert.type) {\r\n      case AlertType.Success:\r\n        return 'alert alert-success';\r\n      case AlertType.Error:\r\n        return 'alert alert-danger';\r\n      case AlertType.Info:\r\n        return 'alert alert-info';\r\n      case AlertType.Warning:\r\n        return 'alert alert-warning';\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\r\n  {{ alert.message }}\r\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../@core/constants/app-constants';\r\nimport { AlertService } from '../../@core/service/alert.service';\r\nimport { ConfigurationSettingsService } from '../../@core/service/configuration-settings.service';\r\nimport { DataStoreService } from '../../@core/service/data-store.service';\r\n\r\n@Component({\r\n  selector: 'lib-config-login-settings',\r\n  templateUrl: './config-login-settings.component.html',\r\n  styleUrls: ['./config-login-settings.component.scss']\r\n})\r\nexport class ConfigLoginSettingsComponent implements OnInit {\r\n  Organization: any;\r\n  closeResult = '';\r\n  RBACORG: any;\r\n  PERMISSION: any;\r\n  LOGININFO: any;\r\n  loginEvent$: BehaviorSubject<any>;\r\n  thumbnailLogo = '';\r\n  thumbnailBanner = '';\r\n  orgId: any;\r\n  orgSubs: Subscription;\r\n  userRoles = [];\r\n  emailTemplate = [];\r\n  organizations = [];\r\n  imageDataLogo: any;\r\n  uploadedFileLogo: any;\r\n  urlPathLogo: any;\r\n  attachTypeLogo: any;\r\n  imageDataBanner: any;\r\n  uploadedFileBanner: any;\r\n  urlPathBanner: any;\r\n  attachTypeBanner: any;\r\n  userid = '';\r\n  updateButton = false;\r\n  environment: any;\r\n  visible = false;\r\n  bannerVisible = false;\r\n  configRegistrationForm: FormGroup;\r\n  editConfigSettings: any;\r\n  httpService:any;\r\n  authService:any;\r\n  attachmentService:any;\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private _formBuilder: FormBuilder,\r\n    private _configurationSettingsService: ConfigurationSettingsService,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.loginEvent$ = new BehaviorSubject<any>(null);\r\n    this.userid = sessionStorage.getItem('id');\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE'];\r\n        this.authService = res['AUTHSERVICE'];\r\n        this.attachmentService = res['ATTACHMENTSERVICE'];\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        console.log(this.RBACORG, 'RBACORG Profile');\r\n        this.environment = this.RBACORG['environment'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if(this.environment){\r\n          this.organizationsList();\r\n          this.getEmailTemplateNewList();\r\n          this.initilizeForm();\r\n          this.getRolesList();\r\n          this.getConfigById();\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n  initilizeForm() {\r\n    this.configRegistrationForm = this._formBuilder.group({\r\n      id: [''],\r\n      registration: false,\r\n      layout: [1],\r\n      role_for_registration: ['', Validators.required],\r\n      template_for_registration: ['', Validators.required],\r\n      banner: ['', Validators.required],\r\n      organization_title: ['', Validators.required],\r\n      logo: ['', Validators.required],\r\n      organizationid: ['', Validators.required]\r\n    });\r\n  }\r\n  getRolesList() {\r\n    this._configurationSettingsService.getAllUserRole(this.orgId).subscribe(\r\n      res => {\r\n        this.userRoles = res['data'];\r\n      },\r\n      _error => this.alertService.error(AppConstants.errorMessage)\r\n    );\r\n  }\r\n  getEmailTemplateNewList() {\r\n    this._configurationSettingsService.getEmailTemplateNewList().subscribe((_res: any) => {\r\n      if (_res) {\r\n        this.emailTemplate = _res.data;\r\n      }\r\n    });\r\n  }\r\n  organizationsList() {\r\n    this._configurationSettingsService.getAllOrganizations().subscribe((res: any) => {\r\n      this.organizations = res.data;\r\n    });\r\n  }\r\n  handleFileInput(fileValue: any) {\r\n    const target = fileValue.target as HTMLInputElement;\r\n    const file: File = target.files[0];\r\n    this.uploadedFileLogo = fileValue.target.files[0].name;\r\n    this.imageDataLogo = {\r\n      contentType: fileValue.target.files[0].type,\r\n      fileName: `login-orgimage/${this.userid}/${this.uploadedFileLogo}`\r\n    };\r\n    if (this.validateImage(fileValue.target.files, 'LOGO')) {\r\n      this._configurationSettingsService.uploadKey(this.imageDataLogo).subscribe(\r\n        (res: any) => {\r\n          this.urlPathLogo = res.data;\r\n          const uploadAttachment: any = document.getElementById('file');\r\n          const uploadAttachmentDetails = uploadAttachment.files[0];\r\n          this.httpService.putUpload(this.urlPathLogo, uploadAttachmentDetails, uploadAttachmentDetails.type).subscribe(\r\n            (_resp: any) => {\r\n              this.alertService.success('Uploaded Successfully!');\r\n              const reader = new FileReader();\r\n              reader.onload = () => {\r\n                // this.thumbnailLogo = reader.result as string;\r\n                this.thumbnailLogo = this.urlPathLogo;\r\n                this.configRegistrationForm.patchValue({\r\n                  logo: this.urlPathLogo\r\n                });\r\n              };\r\n              reader.readAsDataURL(file);\r\n              this.attachTypeLogo = fileValue.target.files[0].type;\r\n            },\r\n            error => {\r\n              if (error.status == 0) {\r\n                this.alertService.error(AppConstants.errorMessage);\r\n                this.uploadedFileLogo = '';\r\n                this.urlPathLogo = '';\r\n              }\r\n            }\r\n          );\r\n        },\r\n        _error => {\r\n          this.alertService.error(AppConstants.errorMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  validateImage(file: any, type) {\r\n    const fileSize = Number(file[0].size) / 1024;\r\n    const filetype = file[0].type.replace('image/', '');\r\n    if (\r\n      filetype === 'jpg' ||\r\n      filetype === 'jpeg' ||\r\n      filetype === 'png' ||\r\n      filetype === 'gif' ||\r\n      filetype === 'svg+xml'\r\n    ) {\r\n      if (fileSize < 1024 && type === 'BANNER') {\r\n        return true;\r\n      } else if (fileSize < 120 && type === 'LOGO') {\r\n        return true;\r\n      } else {\r\n        this.alertService.warn('File is bigger than 1024 KB');\r\n        return false;\r\n      }\r\n    } else {\r\n      this.alertService.warn(`${filetype} format is not supported`);\r\n      return false;\r\n    }\r\n  }\r\n  removeThumbnail() {\r\n    this.thumbnailLogo = '';\r\n  }\r\n  handleFileInputBanner(fileValue: any) {\r\n    const target = fileValue.target as HTMLInputElement;\r\n    const file: File = target.files[0];\r\n    this.uploadedFileBanner = fileValue.target.files[0].name;\r\n    this.imageDataBanner = {\r\n      contentType: fileValue.target.files[0].type,\r\n      fileName: `login-orgimage/${this.userid}/${this.uploadedFileBanner}`\r\n    };\r\n    if (this.validateImage(fileValue.target.files, 'BANNER')) {\r\n      this.attachmentService.uploadKey(this.imageDataBanner).subscribe(\r\n        (res: any) => {\r\n          this.urlPathBanner = res.data;\r\n          const uploadAttachment: any = document.getElementById('file1');\r\n          const uploadAttachmentDetails = uploadAttachment.files[0];\r\n          this.httpService\r\n            .putUpload(this.urlPathBanner, uploadAttachmentDetails, uploadAttachmentDetails.type)\r\n            .subscribe(\r\n              (_resp: any) => {\r\n                this.alertService.success('Uploaded Successfully!');\r\n                const reader = new FileReader();\r\n                this.thumbnailBanner = this.urlPathBanner;\r\n                reader.onload = () => {\r\n                  this.configRegistrationForm.patchValue({\r\n                    banner: this.urlPathBanner\r\n                  });\r\n                };\r\n                reader.readAsDataURL(file);\r\n                this.attachTypeBanner = fileValue.target.files[0].type;\r\n              },\r\n              error => {\r\n                if (error.status == 0) {\r\n                  this.alertService.error(AppConstants.errorMessage);\r\n                  this.uploadedFileBanner = '';\r\n                  this.urlPathBanner = '';\r\n                }\r\n              }\r\n            );\r\n        },\r\n        _error => {\r\n          this.alertService.error(AppConstants.errorMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  removeThumbnailBanner() {\r\n    this.thumbnailBanner = '';\r\n  }\r\n  saveConfig() {\r\n    const validate = this.conditionValidation();\r\n    if (validate) {\r\n      if (this.editConfigSettings) {\r\n        const inputRequest = {\r\n          id: this.editConfigSettings.id,\r\n          registration: this.configRegistrationForm.value.registration,\r\n          // eslint-disable-next-line radix\r\n          layout: parseInt(this.configRegistrationForm.value.layout),\r\n          role_for_registration: this.configRegistrationForm.value.role_for_registration,\r\n          template_for_registration: this.configRegistrationForm.value.template_for_registration,\r\n          banner: this.configRegistrationForm.value.banner,\r\n          organization_title: this.configRegistrationForm.value.organization_title,\r\n          logo: this.configRegistrationForm.value.logo,\r\n          organizationid: this.configRegistrationForm.value.organizationid\r\n        };\r\n        this.updateButton = true;\r\n        this._configurationSettingsService.updateConfig(this.editConfigSettings.id, inputRequest).subscribe(_res => {\r\n          this.alertService.success('Updated successfully!');\r\n        });\r\n      } else {\r\n        const urlPathLogo = this.urlPathLogo ? this.urlPathLogo.split('?')[0] : '';\r\n        const urlPathBanner = this.urlPathBanner ? this.urlPathBanner.split('?')[0] : '';\r\n        this.configRegistrationForm.patchValue({\r\n          logo: urlPathLogo,\r\n          banner: urlPathBanner\r\n        });\r\n        const inputRequest = {\r\n          registration: this.configRegistrationForm.value.registration,\r\n          layout: this.configRegistrationForm.value.layout,\r\n          role_for_registration: this.configRegistrationForm.value.role_for_registration,\r\n          template_for_registration: this.configRegistrationForm.value.template_for_registration,\r\n          banner: this.configRegistrationForm.value.banner,\r\n          organization_title: this.configRegistrationForm.value.organization_title,\r\n          logo: this.configRegistrationForm.value.logo,\r\n          organizationid: this.configRegistrationForm.value.organizationid\r\n        };\r\n        this.updateButton = true;\r\n        this._configurationSettingsService.saveConfigSettings(inputRequest).subscribe(_res => {\r\n          this.alertService.success('Saved successfully!');\r\n        });\r\n      }\r\n    }\r\n  }\r\n  backToPreview() {\r\n    this.updateButton = false;\r\n  }\r\n\r\n  showUploadedLogo() {\r\n    this.visible = true;\r\n  }\r\n  showUploadedBanner() {\r\n    this.bannerVisible = true;\r\n  }\r\n  getConfigById() {\r\n    this._configurationSettingsService.getConfigList().subscribe((res: any) => {\r\n      if (res.data) {\r\n        this.updateButton = true;\r\n        const configSettingsList = res.data;\r\n        const valuesMax1 = configSettingsList.map(item => item.id);\r\n        const max1 = Math.max(...valuesMax1);\r\n        this.editConfigSettings = configSettingsList.filter(x => x.id === max1)[0];\r\n        this.configRegistrationForm.patchValue(this.editConfigSettings);\r\n        // eslint-disable-next-line radix\r\n        this.configRegistrationForm.patchValue({ organizationid: parseInt(this.editConfigSettings.organizationid) });\r\n        this.thumbnailLogo = this.editConfigSettings.logo;\r\n        this.thumbnailBanner = this.editConfigSettings.banner;\r\n      } else {\r\n        this.updateButton = false;\r\n      }\r\n    });\r\n  }\r\n  conditionValidation(): any {\r\n    if (!this.configRegistrationForm.value.organization_title) {\r\n      this.alertService.warn('Please fill the organization title');\r\n      return false;\r\n    } else if (!this.configRegistrationForm.value.banner) {\r\n      this.alertService.warn('Please upload the banner');\r\n      return false;\r\n    } else if (!this.configRegistrationForm.value.logo) {\r\n      this.alertService.warn('Please upload the logo');\r\n      return false;\r\n    } else if (!this.configRegistrationForm.value.organizationid) {\r\n      this.alertService.warn('Please select the organization');\r\n      return false;\r\n    } else if (!this.configRegistrationForm.value.role_for_registration) {\r\n      this.alertService.warn('Please select the role');\r\n      return false;\r\n    } else if (!this.configRegistrationForm.value.template_for_registration) {\r\n      this.alertService.warn('Please select the template');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","<app-alert></app-alert>\r\n<p-card styleClass=\"w-100\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 col-12\">\r\n      <div class=\"customizer customizer-styling customizer-styling-skin skin\">\r\n        <h6 class=\"font-weight-bold mb-3\">Choose Login Layout</h6>\r\n        <div class=\"d-flex justify-content-start align-items-center\">\r\n          <!-- Layout 1 -->\r\n          <div class=\"custom-control custom-radio mr-4 mb-md-0 mb-3\">\r\n            <figure class=\"active mb-0\">\r\n              <label role=\"link\" class=\"mb-0 layout-select\" for=\"layout1\">\r\n                <img src=\"../../../../assets/images/Layout.jpg\" class=\"img-fluid\" alt=\"layout1\" />\r\n              </label>\r\n              <figcaption>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"layout1\"\r\n                  name=\"layout\"\r\n                  class=\"custom-control-input layout-name\"\r\n                  [attr.checked]=\"true\"\r\n                  value=\"Layout 1\" />\r\n                <label class=\"custom-control-label mt-2 mb-0\" for=\"layout1\">Layout 1</label>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n\r\n<p-card styleClass=\"w-100 mt-3\">\r\n  <div class=\"customizer\" [formGroup]=\"configRegistrationForm\">\r\n    <h6 class=\"font-weight-bold mb-3\">Configure Login</h6>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"organizationName\">Organization Title</label>\r\n        <input\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"Title Name\"\r\n          id=\"organizationName\"\r\n          autocomplete=\"off\"\r\n          formControlName=\"organization_title\"\r\n          pInputText />\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels mb-0\" for=\"thumbnailBanner\">Upload Banner</label>\r\n        <div *ngIf=\"!thumbnailBanner\" id=\"thumbnailBanner\">\r\n          <figure class=\"mt-2 mb-0 pic-upload justify-content-md-center\">\r\n            <label for=\"file1\" class=\"btn btn-primary file-upload-btn mb-0\">\r\n              <span class=\"d-flex align-items-center justify-content-center\">\r\n                <span class=\"aterial-icon material-symbols-outlined text-white mr-2\">cloud_upload</span>\r\n                <span>Upload</span>\r\n              </span>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file1\"\r\n              aria-hidden=\"true\"\r\n              style=\"display: none\"\r\n              (change)=\"handleFileInputBanner($event)\" />\r\n          </figure>\r\n          <p><small>Image size max 1MB (min-width 1100px and min-height 800px)</small></p>\r\n        </div>\r\n        <div *ngIf=\"thumbnailBanner\">\r\n          <div class=\"d-flex align-items-center justify-content-between p-1 bg-light\">\r\n            <span role=\"button\" (click)=\"showUploadedBanner()\" title=\"Zoom\">\r\n              <img width=\"45\" height=\"45\" [src]=\"thumbnailBanner || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n            </span>\r\n            <span>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-search-plus fa-lg text-primary mr-2\"\r\n                (click)=\"showUploadedBanner()\"\r\n                title=\"Zoom\"></em>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-trash fa-lg text-danger mr-2\"\r\n                (click)=\"removeThumbnailBanner()\"\r\n                title=\"Delete\"></em>\r\n            </span>\r\n          </div>\r\n          <p-dialog header=\"Banner Preview\" [(visible)]=\"bannerVisible\" [style]=\"{ width: '50vw' }\">\r\n            <img class=\"img-fluid\" [attr.src]=\"thumbnailBanner || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n          </p-dialog>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-122 form-group\">\r\n        <label class=\"intake-form-labels mb-0\" for=\"thumbnailLogo\">Upload Logo</label>\r\n        <div *ngIf=\"!thumbnailLogo\" id=\"thumbnailLogo\">\r\n          <figure class=\"mt-2 mb-0 pic-upload justify-content-md-center\">\r\n            <label for=\"file\" class=\"btn btn-primary file-upload-btn mb-0\">\r\n              <span class=\"d-flex align-items-center justify-content-center\">\r\n                <span class=\"aterial-icon material-symbols-outlined text-white mr-2\">cloud_upload</span>\r\n                <span>Upload</span>\r\n              </span>\r\n            </label>\r\n            <input type=\"file\" id=\"file\" aria-hidden=\"true\" style=\"display: none\" (change)=\"handleFileInput($event)\" />\r\n          </figure>\r\n          <p><small>Image size max 120kb (min-width 400px and min-height 60px)</small></p>\r\n        </div>\r\n        <div *ngIf=\"thumbnailLogo\">\r\n          <div class=\"d-flex align-items-center justify-content-between p-1 bg-light\">\r\n            <span role=\"button\" (click)=\"showUploadedLogo()\" title=\"Zoom\">\r\n              <img width=\"45\" height=\"45\" [attr.src]=\"thumbnailLogo || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n            </span>\r\n            <span>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-search-plus fa-lg text-primary mr-2\"\r\n                (click)=\"showUploadedLogo()\"\r\n                title=\"Zoom\"></em>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-trash fa-lg text-danger mr-2\"\r\n                (click)=\"removeThumbnail()\"\r\n                title=\"Delete\"></em>\r\n            </span>\r\n          </div>\r\n          <p-dialog header=\"Logo Preview\" [(visible)]=\"visible\" [style]=\"{ width: '50vw' }\">\r\n            <img class=\"img-fluid\" [src]=\"thumbnailLogo || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n          </p-dialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n\r\n<p-card styleClass=\"w-100 mt-3\">\r\n  <div class=\"customizer\" [formGroup]=\"configRegistrationForm\">\r\n    <h6 class=\"font-weight-bold mb-3\">Configure Registration</h6>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-sm-6 col-12 mb-md-4 mb-3\">\r\n        <p-checkbox inputId=\"registrationid\" [binary]=\"true\" formControlName=\"registration\"></p-checkbox>\r\n        <label class=\"intake-form-labels mb-0 ml-2\" for=\"registrationid\">Enable Registration?</label>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"selectOrganization\">Select Organization</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"organizations\"\r\n          placeholder=\"Select Role\"\r\n          id=\"selectOrganization\"\r\n          formControlName=\"organizationid\"\r\n          ariaLabelledBy=\"roleforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"roleforregistration\">Select Role</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"userRoles\"\r\n          placeholder=\"Select Role\"\r\n          id=\"roleforregistration\"\r\n          formControlName=\"role_for_registration\"\r\n          ariaLabelledBy=\"roleforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"templateforregistration\">Select Template</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"emailTemplate\"\r\n          placeholder=\"Select Template\"\r\n          id=\"templateforregistration\"\r\n          formControlName=\"template_for_registration\"\r\n          ariaLabelledBy=\"templateforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class=\"text-md-right mt-2\">\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveConfig()\">\r\n        {{ updateButton ? 'Update' : 'Submit' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionStore } from './@core/permissions/permission.store';\r\nimport { DataStoreService } from './@core/service/data-store.service';\r\nimport { RBACINFO } from './@core/urls/rbac-url.config';\r\n\r\n@Component({\r\n  selector: 'config-login-settings',\r\n  template: `\r\n    <lib-config-login-settings></lib-config-login-settings>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ConfigLoginSettingsComponent implements OnInit {\r\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION?: any;\r\n  @Input() public configureEvent!: Observable<any>;\r\n  @Input() public COMMONSERVICE:Observable<any>;\r\n\r\n  constructor(\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n    this.COMMONSERVICE.subscribe((val: any) => {\r\n      if(val){\r\n        this._storeservice.setData('HTTPSERVICE',val.httpService);\r\n        this._storeservice.setData('AUTHSERVICE',val.authService);\r\n        this._storeservice.setData('ATTACHMENTSERVICE',val.attachmentService);\r\n      }\r\n    })\r\n     this.configureEvent.subscribe((val: any) => {\r\n      this.RBACORG = val.RBACORG;\r\n      this.PERMISSION = val.PERMISSION;\r\n      this._storeservice.setData('RBACORG', this.RBACORG);\r\n      this.permissionStore.setStore(this.PERMISSION);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  currentState: Subject<any> = new Subject();\r\n  currentValue = new BehaviorSubject<any>({});\r\n  getValue = this.currentValue.asObservable();\r\n  addValue(key: string, value: string) {\r\n    this.currentState.next({ key, value });\r\n  }\r\n\r\n  setValue(key: string, value: string) {\r\n    this.currentValue.next({ key, value });\r\n  }\r\n}\r\n","/**\r\n * Simple logger system with the possibility of registering custom outputs.\r\n *\r\n * 4 different log levels are provided, with corresponding methods:\r\n * - debug   : for debug information\r\n * - info    : for informative status of the application (success, ...)\r\n * - warning : for non-critical errors that do not prevent normal application behavior\r\n * - error   : for critical errors that prevent normal application behavior\r\n *\r\n * Example usage:\r\n * ```\r\n * import { Logger } from 'app/core/logger.service';\r\n *\r\n * const log = new Logger('myFile');\r\n * ...\r\n * log.debug('something happened');\r\n * ```\r\n *\r\n * To disable debug and info logs in production, add this snippet to your root component:\r\n * ```\r\n * export class AppComponent implements OnInit {\r\n *   ngOnInit() {\r\n *     if (environment.production) {\r\n *       Logger.enableProductionMode();\r\n *     }\r\n *     ...\r\n *   }\r\n * }\r\n *\r\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\r\n */\r\n\r\n/**\r\n * The possible log levels.\r\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\r\n */\r\nexport enum LogLevel {\r\n  Off = 0,\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug\r\n}\r\n\r\n/**\r\n * Log output handler function.\r\n */\r\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\r\n\r\nexport class Logger {\r\n  /**\r\n   * Current logging level.\r\n   * Set it to LogLevel.Off to disable logs completely.\r\n   */\r\n  static level = LogLevel.Debug;\r\n\r\n  /**\r\n   * Additional log outputs.\r\n   */\r\n  static outputs: LogOutput[] = [];\r\n\r\n  /**\r\n   * Enables production mode.\r\n   * Sets logging level to LogLevel.Warning.\r\n   */\r\n  static enableProductionMode() {\r\n    Logger.level = LogLevel.Warning;\r\n  }\r\n\r\n  constructor(private source?: string) {}\r\n\r\n  /**\r\n   * Logs messages or objects  with the debug level.\r\n   * Works the same as console.log().\r\n   */\r\n  debug(...objects: any[]) {\r\n    this.log(console.log, LogLevel.Debug, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the info level.\r\n   * Works the same as console.log().\r\n   */\r\n  info(...objects: any[]) {\r\n    this.log(console.info, LogLevel.Info, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the warning level.\r\n   * Works the same as console.log().\r\n   */\r\n  warn(...objects: any[]) {\r\n    this.log(console.warn, LogLevel.Warning, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the error level.\r\n   * Works the same as console.log().\r\n   */\r\n  error(...objects: any[]) {\r\n    this.log(console.error, LogLevel.Error, objects);\r\n  }\r\n\r\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\r\n    if (level <= Logger.level) {\r\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\r\n      func.apply(console, log);\r\n      Logger.outputs.forEach(output => output.apply(output, [this.source, level, ...objects]));\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  // Customize received credentials here\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\nconst credentialsKey = 'jwt-token';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredentialsService {\r\n  private token: string | null = null;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this.token = savedCredentials;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  /**\r\n   * Gets the user credentials.\r\n   * @return The user credentials or null if the user is not authenticated.\r\n   */\r\n  get credentials(): string | null {\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * Sets the user credentials.\r\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\r\n   * Otherwise, the credentials are only persisted for the current session.\r\n   * @param credentials The user credentials.\r\n   * @param remember True to remember credentials across sessions.\r\n   */\r\n  setCredentials(credentials?: string) {\r\n    this.token = credentials || null;\r\n    if (credentials) {\r\n      sessionStorage.setItem(credentialsKey, credentials);\r\n    } else {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { CredentialsService } from './credentials.service';\r\nimport { Logger } from './logger.service';\r\n\r\nconst log = new Logger('AuthenticationGuard');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private credentialsService: CredentialsService) {}\r\n\r\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\r\n    if (this.credentialsService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n    log.debug('Not authenticated, redirecting and adding redirect url...');\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst APP_PREFIX = 'GAMED-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {\r\n    // This is intentional\r\n  }\r\n\r\n  static loadInitialState() {\r\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\r\n      if (storageKey.includes(APP_PREFIX)) {\r\n        const stateKeys = storageKey\r\n          .replace(APP_PREFIX, '')\r\n          .toLowerCase()\r\n          .split('.')\r\n          .map(key =>\r\n            key\r\n              .split('-')\r\n              .map((token, index) => (index === 0 ? token : token.charAt(0).toUpperCase() + token.slice(1)))\r\n              .join('')\r\n          );\r\n        let currentStateRef = state;\r\n        stateKeys.forEach((key, index) => {\r\n          if (index === stateKeys.length - 1) {\r\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey) || '');\r\n            return;\r\n          }\r\n          currentStateRef[key] = currentStateRef[key] || {};\r\n          currentStateRef = currentStateRef[key];\r\n        });\r\n      }\r\n      return state;\r\n    }, {});\r\n  }\r\n\r\n  setItem(key: string, value: any) {\r\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return localStorage.getItem(`${APP_PREFIX}${key}`) || '';\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    const retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","export class StorageService {\r\n  constructor(protected Storage: any) {}\r\n\r\n  public getItem(key: string): any {\r\n    return this.Storage.getItem(key);\r\n  }\r\n\r\n  public setItem(key: string, item: any): void {\r\n    return this.Storage.setItem(key, item);\r\n  }\r\n\r\n  public getObj(key: string, safe = true): any {\r\n    try {\r\n      const item = this.getItem(key);\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      if (!safe) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setObj(key: string, item: any): void {\r\n    return this.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  public removeItem(key: string): void {\r\n    this.Storage.removeItem(key);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.Storage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalService extends StorageService {\r\n  constructor() {\r\n    super(window.sessionStorage);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertService } from './alert.service';\r\nimport { DataStoreService } from './data-store.service';\r\nimport { PermissionStore } from './../permissions/permission.store';\r\n\r\ndeclare const microstrategy: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MicrostrategyService {\r\n  dossierList: any;\r\n  RBACORG: any;\r\n  environment: any;\r\n  constructor(private http: HttpClient,\r\n    private alertService: AlertService,\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n          if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.environment = this.RBACORG['environment'] ? this.RBACORG['environment'] : '';\r\n        }\r\n      });\r\n    }\r\n\r\n  getAuthToken() {\r\n    const body = {\r\n      username: this.environment.mstrUsername,\r\n      password: this.environment.mstrPassword,\r\n      loginMode: 1\r\n    };\r\n    return this.http.post(`${this.environment.mstrURL}/api/auth/login`, body, {\r\n      withCredentials: true,\r\n      headers: { 'Content-type': 'application/json' },\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getDossier(projectId?: string, dossierId?: string, pageNo?: string) {\r\n    const permissions = this.permissionStore.state;\r\n    const projectUrl = `${this.environment.mstrURL}/app/${projectId}`;\r\n    const dossierUrl = `${projectUrl}/${dossierId}/${pageNo}`;\r\n     microstrategy.dossier\r\n      .create({\r\n        placeholder: document.getElementById('dossierContainer'),\r\n        url: dossierUrl,\r\n        navigationBar: {\r\n          enabled: true,\r\n          gotoLibrary: permissions?.ANA_LIBRARY,\r\n          title: true,\r\n          toc: true,\r\n          reset: true,\r\n          reprompt: true,\r\n          share: true,\r\n          comment: true,\r\n          notification: true,\r\n          filter: true,\r\n          options: true,\r\n          search: true,\r\n          bookmark: true\r\n        },\r\n        enableCustomAuthentication: true,\r\n        enableResponsive: false,\r\n        containerWidth: 400,\r\n        containerHeight: 400,\r\n        customAuthenticationType: microstrategy.dossier.CustomAuthenticationType.AUTH_TOKEN,\r\n        getLoginToken: async () => {\r\n          const response = await this.getAuthToken().toPromise();\r\n          return response.headers.get('x-mstr-authtoken');\r\n        }\r\n      })\r\n      .catch((_err: any) => this.alertService.error(`Failed to connect ${this.environment.mstrURL}`));\r\n  }\r\n\r\n  async getLibraryDetails() {\r\n    const token = await this.getAuthToken().toPromise();\r\n    const authtoken = token.headers.get('x-mstr-authtoken')\r\n    const headerInfo = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'X-MSTR-AuthToken': authtoken ? authtoken: '',\r\n      'X-MSTR-ProjectID': this.environment.mstrProjectID\r\n    };\r\n    return this.http\r\n      .get(`${this.environment.mstrURL}/api/library`, {\r\n        withCredentials: true,\r\n        headers: headerInfo\r\n      })\r\n      .toPromise()\r\n      .then((response: any) => {\r\n        return response.map((mstr: any) => ({\r\n          id: mstr.target.id,\r\n          projectId: mstr.projectId,\r\n          name: mstr.target.name\r\n        }));\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FontSet, Theme } from '../constants/common.entities';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private active?: any;\r\n  private activeFont?: any;\r\n\r\n  constructor() {\r\n    // This is intentional\r\n  }\r\n\r\n  setActiveTheme(theme: Theme): void {\r\n    this.active = theme;\r\n    Object.keys(this.active.properties).forEach(property => {\r\n      document.documentElement.style.setProperty(property, this.active.properties[property]);\r\n    });\r\n  }\r\n\r\n  setActiveFont(Fontset: FontSet): void {\r\n    this.activeFont = Fontset;\r\n    if(this.activeFont){\r\n      Object.keys(this.activeFont.properties).forEach(property => {\r\n        document.documentElement.style.setProperty(property, this.activeFont.properties[property]);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[fieldKey]'\r\n})\r\nexport class PermissionDirective implements AfterViewInit {\r\n  @Input() fieldKey!: string;\r\n  permissions: any;\r\n  constructor(\r\n    private readonly renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dataStore: PermissionStore\r\n  ) {\r\n  }\r\n  ngAfterViewInit() {\r\n    const permissions =  this.dataStore.state;\r\n     if (permissions) {\r\n      if (!permissions[this.fieldKey]) {\r\n        const template = this.elementRef.nativeElement;\r\n        if (template.tagName === 'A') {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.href = 'javascript:void(0);';\r\n            r['disabled'] = true;\r\n            r.className = template.className;\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else if (\r\n          template.tagName === 'P-MULTISELECT' ||\r\n          template.tagName === 'P-DROPDOWN' ||\r\n          template.tagName === 'P-CHECKBOX' ||\r\n          template.tagName === 'P-TREESELECT' ||\r\n          template.tagName === 'P-RADIOBUTTON' ||\r\n          template.tagName === 'P-CALENDAR'\r\n        ) {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.className = template.className;\r\n            r.className += ' p-disabled';\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else {\r\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\r\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\r\n            'input, select, textarea, button, a, ng-select, div, lable'\r\n          );\r\n          childInputNodes.forEach((elem: any) => {\r\n            this.renderer.setAttribute(elem, 'disabled', 'true');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n@Directive({\r\n  selector: '[showField]'\r\n})\r\nexport class ShowFieldDirective implements OnInit {\r\n  @Input() showField!: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private dataStore: PermissionStore\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const permissions = this.dataStore.state;\r\n    if (!permissions || !permissions[this.showField]) {\r\n      this.viewContainer.clear();\r\n    } else {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n      const lookupIds = sessionStorage.getItem('LOOKUP_IDS');\r\n      if (lookupIds) {\r\n        const lookupIdArray = lookupIds.split(',');\r\n        Object.entries(permissions)\r\n          .filter(item => item[0].startsWith('GALKP_'))\r\n          .forEach(([key, value]) => {\r\n            for (const _value of <[]>value) {\r\n              const _key = key.replace('GALKP_', '');\r\n              if (\r\n                _key === this.showField &&\r\n                lookupIdArray.includes(String(_value['lookupid'])) &&\r\n                _value['action'] === 'H'\r\n              ) {\r\n                this.viewContainer.clear();\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionDirective } from './permission.directive';\r\nimport { ShowFieldDirective } from './show-field.directives';\r\n\r\n@NgModule({\r\n  declarations: [PermissionDirective, ShowFieldDirective],\r\n  imports: [CommonModule],\r\n  exports: [PermissionDirective, ShowFieldDirective]\r\n})\r\nexport class DirectivesModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfigLoginSettingsComponent } from './config-login-settings/config-login-settings.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DirectivesModule } from '../@core/directives/directives.module';\r\nimport { AlertModule } from '../@shared/alert/alert.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfigLoginSettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TreeSelectModule,\r\n    CheckboxModule,\r\n    DropdownModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    AccordionModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    SidebarModule,\r\n    ContextMenuModule,\r\n    ConfirmPopupModule,\r\n    DirectivesModule,\r\n    AlertModule\r\n  ],\r\n  exports: [ConfigLoginSettingsComponent],\r\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class PicsConfigLoginSettingsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShareDataService {\r\n\r\n  public data = new BehaviorSubject<string>('');\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ConfigLoginSettingsComponent } from './config-login-settings.component';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { PermissionStore } from './@core/permissions/permission.store';\r\nimport { AlertService } from './@core/service/alert.service';\r\nimport { AppService } from './@core/service/app.service';\r\nimport { AuthGuard } from './@core/service/auth.guard';\r\nimport { CredentialsService } from './@core/service/credentials.service';\r\nimport { DataStoreService } from './@core/service/data-store.service';\r\nimport { LocalStorageService } from './@core/service/local-storage.service';\r\nimport { LocalService } from './@core/service/local.service';\r\nimport { MicrostrategyService } from './@core/service/microstrategy.service';\r\nimport { ThemeService } from './@core/service/theme.service';\r\nimport { PicsConfigLoginSettingsModule } from './pics-config-login-settings/pics-config-login-settings.module';\r\nimport { ConfigurationSettingsService } from './@core/service/configuration-settings.service';\r\nimport { ShareDataService } from './@core/service/share-data.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfigLoginSettingsComponent\r\n  ],\r\n  imports: [\r\n    PicsConfigLoginSettingsModule\r\n  ],\r\n  exports: [\r\n    ConfigLoginSettingsComponent\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AppService,\r\n    CredentialsService,\r\n    LocalStorageService,\r\n    LocalService,\r\n    MicrostrategyService,\r\n    ThemeService,\r\n    AlertService,\r\n    ConfirmationService,\r\n    ConfigurationSettingsService,\r\n    PermissionStore,\r\n    ShareDataService,\r\n    DataStoreService]\r\n})\r\nexport class CardiConfigLoginSettingsModule { }\r\n","/*\r\n * Public API Surface of config-login-settings\r\n */\r\n\r\nexport * from './lib/config-login-settings.service';\r\nexport * from './lib/config-login-settings.component';\r\nexport * from './lib/config-login-settings.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AttachmentConfig","AccessManagementConfig","i1.DataStoreService","i1.AlertService","ConfigLoginSettingsComponent","i2","i3.ConfigurationSettingsService","i4.DataStoreService","i5.AlertComponent","i11","i1.PermissionStore","i2.DataStoreService","i3.ConfigLoginSettingsComponent","i2.CredentialsService","i1","i2.AlertService","i3.PermissionStore"],"mappings":"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"}