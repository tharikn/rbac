import { EventEmitter, Injector, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, FormArray } from '@angular/forms';
import { Subscription } from 'rxjs';
import { ProfileService } from '../../profile.service';
import { AlertService } from '../@core/service/alert.service';
import { ThemeService } from '../@core/service/theme.service';
import { AttachmentsService } from '../@core/service/attachments.service';
import { LocalService } from '../@core/service/local.service';
import { AuthService } from '../@core/service/auth.service';
import { RBACINFO } from '../@core/urls/rbac-url.config';
import { DataStoreService } from '../@core/service/data-store.service';
import { ConfirmationService } from 'primeng/api';
import { ProfileUpdateService } from '../../profile-update.service';
import { Router } from '@angular/router';
import { NavigationAlertService } from '../@core/service/navigation-alert.service';
import * as i0 from "@angular/core";
export declare class ProfileComponent implements OnInit {
    private authService;
    private formBuilder;
    private profileService;
    private attachmentService;
    private _storeservice;
    private confirmationService;
    private profileUpdateService;
    private router;
    private navigationAlertService;
    passwordSuccess: EventEmitter<any>;
    userForm: FormGroup;
    userid: any;
    thumbnail: string;
    imageData: any;
    uploadedFile: any;
    urlPath: any;
    attachType: any;
    resetPasswordForm: FormGroup;
    alertService: AlertService;
    formSubmitted: boolean;
    localstorage: LocalService;
    isValid: boolean;
    socketSubscription: Subscription;
    themes: any;
    fontSetList: any;
    selectedTheme: any;
    selectedFont: any;
    checked: boolean;
    themeService: ThemeService;
    rocketIcon: string;
    environment: any;
    RBACORG: RBACINFO;
    orgSubs: Subscription;
    orgId: any;
    optinPapper: boolean;
    errors: string[];
    userId: string;
    externalOnly: boolean;
    contactTypeList: any[];
    languagesList: any[];
    genderList: any[];
    currentDate: Date;
    httpService: any;
    nextNavigation: string;
    currentTab: string;
    isThemeActive: boolean;
    isProfileActive: boolean;
    isProfileShown: boolean;
    isThemeShown: boolean;
    routeTo: string;
    constructor(injector: Injector, authService: AuthService, formBuilder: FormBuilder, profileService: ProfileService, attachmentService: AttachmentsService, _storeservice: DataStoreService, confirmationService: ConfirmationService, profileUpdateService: ProfileUpdateService, router: Router, navigationAlertService: NavigationAlertService);
    ngOnInit(): void;
    get contactData(): FormArray;
    createRow(x?: any): FormGroup;
    addSerice(): void;
    removeSerice(i: number): void;
    updateThemePopup(): void;
    cancleThemePopup(): void;
    getTab(tab: any): void;
    setCurrentTab(tab: string): void;
    setFlag(flag: boolean): void;
    initializeResetPasswordForm(): void;
    initializeForm(): void;
    get resetFormcontrols(): {
        [key: string]: import("@angular/forms").AbstractControl<any, any>;
    };
    private passwordValidator;
    private passwordMatchValidator;
    getUserInfo(): void;
    get formValidate(): {
        [key: string]: import("@angular/forms").AbstractControl<any, any>;
    };
    getUserPreferenceList(): void;
    handleFileInput(fileValue: any): void;
    updateprofile(): void;
    updateStyling(): void;
    getUserTheme(): void;
    setTheme(event: any): void;
    setFont(event: any): void;
    setRangeFont(modal: any): void;
    changePassword(): void;
    validateImage(file: any): boolean;
    clearForm(): void;
    reset(): void;
    onClickRemove(): void;
    cancel(): void;
    removeThumbnail(): void;
    ngOnDestroy(): void;
    fontSlider(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProfileComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProfileComponent, "core-profile", never, {}, { "passwordSuccess": "passwordSuccess"; }, never, never, false, never>;
}
