import { Injectable } from '@angular/core';
import { ConfigurationSettingsConfig } from '../urls/configuration-settings-url.config';
import * as i0 from "@angular/core";
import * as i1 from "./data-store.service";
export class ConfigurationSettingsService {
    constructor(_storeservice) {
        this._storeservice = _storeservice;
        this._storeservice.currentStore.subscribe((res) => {
            if (res) {
                this.httpService = res['HTTPSERVICE'];
            }
        });
    }
    getUserList(orgid) {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.User.getUserorgList + orgid);
    }
    saveConfigSettings(modal) {
        return this.httpService.post(ConfigurationSettingsConfig.EndPoint.ConfigSettings.saveConfig, modal);
    }
    getConfigList() {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.ConfigSettings.getConfigList);
    }
    getConfigById(id) {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.ConfigSettings.getConfigById + id);
    }
    deleteConfig(id) {
        return this.httpService.delete(ConfigurationSettingsConfig.EndPoint.ConfigSettings.deleteConfig + id);
    }
    updateConfig(id, modal) {
        return this.httpService.patch(ConfigurationSettingsConfig.EndPoint.ConfigSettings.updateConfig + id, modal);
    }
    getAllUserRole(id) {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.role.getAllOrgRole.replace('{orgid}', String(id)));
    }
    getEmailTemplateNewList() {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.Email.emailtemplateList);
    }
    getAllOrganizations() {
        return this.httpService.get(ConfigurationSettingsConfig.EndPoint.org.getOrganizations);
    }
    uploadKey(objparams) {
        return this.httpService.post(ConfigurationSettingsConfig.EndPoint.Attachments.UploadKey, objparams);
    }
}
ConfigurationSettingsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ConfigurationSettingsService, deps: [{ token: i1.DataStoreService }], target: i0.ɵɵFactoryTarget.Injectable });
ConfigurationSettingsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ConfigurationSettingsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ConfigurationSettingsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.DataStoreService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1zZXR0aW5ncy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGljcy1jb3JlL3Byb2ZpbGUvc3JjL2xpYi9waWNzLXByb2ZpbGUvQGNvcmUvc2VydmljZS9jb25maWd1cmF0aW9uLXNldHRpbmdzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQzs7O0FBTXhGLE1BQU0sT0FBTyw0QkFBNEI7SUFHdkMsWUFBb0IsYUFBK0I7UUFBL0Isa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBQ2pELElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFO1lBQ3JELElBQUcsR0FBRyxFQUFDO2dCQUNMLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFBO2FBQ3RDO1FBQ0gsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQUs7UUFDZixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQyxDQUFDO0lBQ2hHLENBQUM7SUFDRCxrQkFBa0IsQ0FBQyxLQUFLO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdEcsQ0FBQztJQUNELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDakcsQ0FBQztJQUNELGFBQWEsQ0FBQyxFQUFFO1FBQ2QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUN0RyxDQUFDO0lBQ0QsWUFBWSxDQUFDLEVBQUU7UUFDYixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3hHLENBQUM7SUFDRCxZQUFZLENBQUMsRUFBRSxFQUFFLEtBQUs7UUFDcEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFlBQVksR0FBRyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUcsQ0FBQztJQUNELGNBQWMsQ0FBQyxFQUFRO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RILENBQUM7SUFDRCx1QkFBdUI7UUFDckIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDNUYsQ0FBQztJQUNELG1CQUFtQjtRQUNqQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBQ0QsU0FBUyxDQUFDLFNBQVM7UUFDakIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN0RyxDQUFDOzswSEF4Q1UsNEJBQTRCOzhIQUE1Qiw0QkFBNEIsY0FGM0IsTUFBTTs0RkFFUCw0QkFBNEI7a0JBSHhDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb25maWd1cmF0aW9uU2V0dGluZ3NDb25maWcgfSBmcm9tICcuLi91cmxzL2NvbmZpZ3VyYXRpb24tc2V0dGluZ3MtdXJsLmNvbmZpZyc7XHJcbmltcG9ydCB7IERhdGFTdG9yZVNlcnZpY2UgfSBmcm9tICcuL2RhdGEtc3RvcmUuc2VydmljZSc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0aW9uU2V0dGluZ3NTZXJ2aWNlIHtcclxuXHJcbiAgaHR0cFNlcnZpY2U6YW55O1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3N0b3Jlc2VydmljZTogRGF0YVN0b3JlU2VydmljZSkge1xyXG4gICAgdGhpcy5fc3RvcmVzZXJ2aWNlLmN1cnJlbnRTdG9yZS5zdWJzY3JpYmUoKHJlczogYW55KSA9PiB7XHJcbiAgICAgIGlmKHJlcyl7XHJcbiAgICAgICAgdGhpcy5odHRwU2VydmljZSA9IHJlc1snSFRUUFNFUlZJQ0UnXVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckxpc3Qob3JnaWQpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLmdldChDb25maWd1cmF0aW9uU2V0dGluZ3NDb25maWcuRW5kUG9pbnQuVXNlci5nZXRVc2Vyb3JnTGlzdCArIG9yZ2lkKTtcclxuICB9XHJcbiAgc2F2ZUNvbmZpZ1NldHRpbmdzKG1vZGFsKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5wb3N0KENvbmZpZ3VyYXRpb25TZXR0aW5nc0NvbmZpZy5FbmRQb2ludC5Db25maWdTZXR0aW5ncy5zYXZlQ29uZmlnLCBtb2RhbCk7XHJcbiAgfVxyXG4gIGdldENvbmZpZ0xpc3QoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoQ29uZmlndXJhdGlvblNldHRpbmdzQ29uZmlnLkVuZFBvaW50LkNvbmZpZ1NldHRpbmdzLmdldENvbmZpZ0xpc3QpO1xyXG4gIH1cclxuICBnZXRDb25maWdCeUlkKGlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoQ29uZmlndXJhdGlvblNldHRpbmdzQ29uZmlnLkVuZFBvaW50LkNvbmZpZ1NldHRpbmdzLmdldENvbmZpZ0J5SWQgKyBpZCk7XHJcbiAgfVxyXG4gIGRlbGV0ZUNvbmZpZyhpZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UuZGVsZXRlKENvbmZpZ3VyYXRpb25TZXR0aW5nc0NvbmZpZy5FbmRQb2ludC5Db25maWdTZXR0aW5ncy5kZWxldGVDb25maWcgKyBpZCk7XHJcbiAgfVxyXG4gIHVwZGF0ZUNvbmZpZyhpZCwgbW9kYWwpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLnBhdGNoKENvbmZpZ3VyYXRpb25TZXR0aW5nc0NvbmZpZy5FbmRQb2ludC5Db25maWdTZXR0aW5ncy51cGRhdGVDb25maWcgKyBpZCwgbW9kYWwpO1xyXG4gIH1cclxuICBnZXRBbGxVc2VyUm9sZShpZD86IGFueSkge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFNlcnZpY2UuZ2V0KENvbmZpZ3VyYXRpb25TZXR0aW5nc0NvbmZpZy5FbmRQb2ludC5yb2xlLmdldEFsbE9yZ1JvbGUucmVwbGFjZSgne29yZ2lkfScsIFN0cmluZyhpZCkpKTtcclxuICB9XHJcbiAgZ2V0RW1haWxUZW1wbGF0ZU5ld0xpc3QoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5nZXQoQ29uZmlndXJhdGlvblNldHRpbmdzQ29uZmlnLkVuZFBvaW50LkVtYWlsLmVtYWlsdGVtcGxhdGVMaXN0KTtcclxuICB9XHJcbiAgZ2V0QWxsT3JnYW5pemF0aW9ucygpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTZXJ2aWNlLmdldChDb25maWd1cmF0aW9uU2V0dGluZ3NDb25maWcuRW5kUG9pbnQub3JnLmdldE9yZ2FuaXphdGlvbnMpO1xyXG4gIH1cclxuICB1cGxvYWRLZXkob2JqcGFyYW1zKSB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5wb3N0KENvbmZpZ3VyYXRpb25TZXR0aW5nc0NvbmZpZy5FbmRQb2ludC5BdHRhY2htZW50cy5VcGxvYWRLZXksIG9ianBhcmFtcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==