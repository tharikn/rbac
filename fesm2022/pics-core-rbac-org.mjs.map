{"version":3,"file":"pics-core-rbac-org.mjs","sources":["../../../../projects/pics-core/rbac-org/src/lib/rbac-org.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/urls/management-groups-url.config.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/service/data-store.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/service/http.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/service/management-groups.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/service/alert.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/service/store.service.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/permissions/permission.store.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/directives/permission.directive.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@shared/alert/alert.component.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@shared/alert/alert.component.html","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/organization/organization.component.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/organization/organization.component.html","../../../../projects/pics-core/rbac-org/src/lib/rbac-org.component.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@core/directives/directives.module.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/@shared/alert/alert.module.ts","../../../../projects/pics-core/rbac-org/src/lib/pics-rbac-org/pics-rbac-org.module.ts","../../../../projects/pics-core/rbac-org/src/lib/rbac-org.module.ts","../../../../projects/pics-core/rbac-org/src/public-api.ts","../../../../projects/pics-core/rbac-org/src/pics-core-rbac-org.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RbacOrgService {\r\n\r\n  constructor() { }\r\n}\r\n","export class ManagementGroupsURL {\r\n  public static EndPoints = {\r\n    org: {\r\n      getOrganizationByid: '/org/management-group/organization/{id}',\r\n      createOrganization: '/org/management-group/organization/create',\r\n      updateOrganization: '/org/management-group/organization/{id}',\r\n      getOrganizations: '/org/management-group/organization/tree'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { map } from 'rxjs/operators';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n    RBACORG: any;\r\n    overrideUrl = true;\r\n    errorData!: HttpErrorResponse;\r\n    baseUrl = '';\r\n    tokenKey: any;\r\n    public headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('role', 'role=CP_PUBLIC');\r\n\r\n    public showSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    public outsideShowSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    url1: string;\r\n    url: any;\r\n    constructor(private http: HttpClient, private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n        if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.url = this.RBACORG['apiHost'] ? this.RBACORG['apiHost'] : 'http://localhost:3000/api';\r\n          this.tokenKey = this.RBACORG['tokenKey'];\r\n        }\r\n      });\r\n      this.url1 = '';\r\n    }\r\n\r\n    get(apiRoute: string) {\r\n      return this.http.get(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    post(apiRoute: string, body: any) {\r\n      return this.http.post(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    put(apiRoute: string, body: any) {\r\n      return this.http.put(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    patch(apiRoute: string, body?: any) {\r\n      return this.http.patch(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    delete(apiRoute: string) {\r\n      return this.http.delete(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    getHttpHeaders(): HttpHeaders {\r\n      return new HttpHeaders().set('key', 'value');\r\n    }\r\n    getHttpNewHeaders(): HttpHeaders {\r\n      return this.headers.set('Authorization', `Bearer ${this.getToken()}`);\r\n    }\r\n    getAttachmentHttpHeaders(contentType: any): HttpHeaders {\r\n      return new HttpHeaders().set('Content-Type', contentType).set('x-ms-blob-type', 'BlockBlob');\r\n    }\r\n    putUpload(apiRoute: string, body: any, contentType: any) {\r\n      return this.http.put(`${this.url1 + apiRoute}`, body, { headers: this.getAttachmentHttpHeaders(contentType) });\r\n    }\r\n\r\n    putupload2(apiRoute: string, body: any, contenttype: any): Observable<any> {\r\n      return this.http\r\n        .put(`${this.url1 + apiRoute}`, body, {\r\n          headers: this.getAttachmentHttpHeaders(contenttype),\r\n          observe: 'response'\r\n        })\r\n        .pipe(\r\n          map(data => {\r\n            return data;\r\n          })\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     * @param apiRoute\r\n     * This function will download the stream file from the API service.\r\n     * No HTTP required for this stream. So used Window.location.href to download the file\r\n     */\r\n    getFormDownloaded(apiRoute: string) {\r\n      window.location.href = `${this.url + apiRoute}`;\r\n    }\r\n    //common http service(optional)\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (error.error instanceof ErrorEvent) {\r\n        // Client-side errors\r\n        errorMessage = `Error: ${error.error.message}`;\r\n      } else {\r\n        // Server-side errors\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${\r\n          error?.error?.message ? error?.error?.message : error.message\r\n        }`;\r\n      }\r\n      return throwError(errorMessage);\r\n    }\r\n    getToken(): any {\r\n      const token = this.tokenKey ? this.tokenKey : 'jwt-token';\r\n      return sessionStorage.getItem(token);\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { ManagementGroupsURL } from '../urls/management-groups-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManagementGroupsService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  getOrganizations(organizationid: any) {\r\n    return this.httpService.get(ManagementGroupsURL.EndPoints.org.getOrganizationByid.replace('{id}', organizationid));\r\n  }\r\n\r\n  createOrganization(organization: any) {\r\n    return this.httpService.post(ManagementGroupsURL.EndPoints.org.createOrganization, organization);\r\n  }\r\n\r\n  updateOrganization(organization: any) {\r\n    return this.httpService.put(\r\n      ManagementGroupsURL.EndPoints.org.updateOrganization.replace('{id}', organization.id),\r\n      organization\r\n    );\r\n  }\r\n\r\n  deleteOrganization(organizationid: number) {\r\n    return this.httpService.delete(`/org/management-group/organization/${organizationid}`);\r\n  }\r\n\r\n  getManagementGroups(organizationid: number, parentid: number) {\r\n    return this.httpService.get(`/org/organization/group/${organizationid}/${parentid}`);\r\n  }\r\n\r\n  getManagementGroupTree(_organizationid: any) {\r\n    return this.httpService.get('/org/management-group/organization/tree');\r\n  }\r\n\r\n  createManagementGroup(managementGroup: any) {\r\n    return this.httpService.post('/org/organization/group/create', managementGroup);\r\n  }\r\n\r\n  updateManagementGroup(managementGroup: any) {\r\n    return this.httpService.put(`/org/organization/group/${managementGroup.id}`, managementGroup);\r\n  }\r\n\r\n  deleteManagementGroup(managementGroupId: number) {\r\n    return this.httpService.delete(`/org/organization/group/${managementGroupId}`);\r\n  }\r\n\r\n  getAllOrganizations() {\r\n    return this.httpService.get(ManagementGroupsURL.EndPoints.org.getOrganizations);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[fieldKey]'\r\n})\r\nexport class PermissionDirective implements AfterViewInit {\r\n  @Input() fieldKey!: string;\r\n  permissions: any;\r\n  constructor(\r\n    private readonly renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dataStore: PermissionStore\r\n  ) {\r\n  }\r\n  ngAfterViewInit() {\r\n    const permissions =  this.dataStore.state;\r\n     if (permissions) {\r\n      if (!permissions[this.fieldKey]) {\r\n        const template = this.elementRef.nativeElement;\r\n        if (template.tagName === 'A') {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.href = 'javascript:void(0);';\r\n            r['disabled'] = true;\r\n            r.className = template.className;\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else if (\r\n          template.tagName === 'P-MULTISELECT' ||\r\n          template.tagName === 'P-DROPDOWN' ||\r\n          template.tagName === 'P-CHECKBOX' ||\r\n          template.tagName === 'P-TREESELECT' ||\r\n          template.tagName === 'P-RADIOBUTTON' ||\r\n          template.tagName === 'P-CALENDAR'\r\n        ) {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.className = template.className;\r\n            r.className += ' p-disabled';\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else {\r\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\r\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\r\n            'input, select, textarea, button, a, ng-select, div, lable'\r\n          );\r\n          childInputNodes.forEach((elem: any) => {\r\n            this.renderer.setAttribute(elem, 'disabled', 'true');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\r\nconst DISPLAY_IN_SECONDS = 8;\r\n@Component({\r\n  // moduleId: module.id,\r\n  selector: 'app-alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (!alert) {\r\n        // clear alerts when an empty alert is received\r\n        this.alerts = [];\r\n        return;\r\n      }\r\n\r\n      // add alert to array\r\n      this.alerts.push(alert);\r\n      // remove alert after 5 seconds\r\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\r\n    });\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    this.alerts = this.alerts.filter(x => x !== alert);\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    // return css class based on alert type\r\n    switch (alert.type) {\r\n      case AlertType.Success:\r\n        return 'alert alert-success';\r\n      case AlertType.Error:\r\n        return 'alert alert-danger';\r\n      case AlertType.Info:\r\n        return 'alert alert-info';\r\n      case AlertType.Warning:\r\n        return 'alert alert-warning';\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\r\n  {{ alert.message }}\r\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ConfirmationService, MenuItem, PrimeIcons, TreeNode } from 'primeng/api';\r\nimport { AlertService } from '../@core/service/alert.service';\r\n\r\nimport { PermissionStore } from '../@core/permissions/permission.store';\r\nimport { ManagementGroupsService } from '../@core/service/management-groups.service';\r\nimport { DataStoreService } from '../@core/service/data-store.service';\r\n\r\n@Component({\r\n  selector: 'cardi-organization',\r\n  templateUrl: './organization.component.html',\r\n  styleUrls: ['./organization.component.scss']\r\n})\r\nexport class OrganizationComponent implements OnInit {\r\n  @Input() public RBACORG: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION: any;\r\n  organizations!: TreeNode[];\r\n  menuItems: MenuItem[] = [];\r\n  organizationForm!: FormGroup;\r\n  managementGroupForm!: FormGroup;\r\n  managementGroups!: any[];\r\n  nodeType: string;\r\n  saveMode: string;\r\n  selectedItem: any = {};\r\n  orgId: any;\r\n  orgName!: string;\r\n  constructor(\r\n    private managementGroupService: ManagementGroupsService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private confirmationService: ConfirmationService,\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n    this.nodeType = 'organization';\r\n    this.saveMode = 'INSERT';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._storeservice.setData('RBACORG', this.RBACORG);\r\n    this.permissionStore.setStore(this.PERMISSION);\r\n    this.initializeOrganizationForm();\r\n    this.initializeManagementGroupForm();\r\n    this.loadTree();\r\n    this.loadContextMenu();\r\n  }\r\n\r\n  initializeOrganizationForm() {\r\n    this.organizationForm = this.formBuilder.group({\r\n      id: [0],\r\n      name: ['', Validators.required],\r\n      attempts: [3],\r\n      timeout:[30],\r\n      passwordExpiryDays: [30, Validators.required],\r\n      deactive_days_limit:[180, Validators.required],\r\n      permanent_delete_days_limit:[7, Validators.required],\r\n      PromptNotificationDays: [ ],\r\n      PromptNotificationmsg: [''],\r\n      additionalinfo: this.formBuilder.group({\r\n        environment: [''],\r\n        apptitle: [''],\r\n        bannerlogo: [''],\r\n        basecolor: [''],\r\n        releaseversion: [''],\r\n        releasenotes: ['']\r\n      })\r\n    });\r\n    if (this.RBACORG.smsNotificationEnabled) {\r\n      (this.organizationForm as FormGroup).addControl('smsNotification', new FormControl(true));\r\n    }\r\n  }\r\n\r\n  initializeManagementGroupForm() {\r\n    this.managementGroupForm = this.formBuilder.group({\r\n      id: [0],\r\n      parentid: [null],\r\n      organizationid: [0],\r\n      name: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      zip: ['', Validators.required],\r\n      additionalinfo: this.formBuilder.group({})\r\n    });\r\n  }\r\n\r\n  onNodeContextMenuSelect(_event: any) {\r\n    // Test\r\n  }\r\n\r\n  nodeSelect(event: any) {\r\n    this.saveMode = 'UPDATE';\r\n    this.nodeType = event.node.type;\r\n    if (event.node.type === 'managementgroup') {\r\n      this.managementGroupForm.reset();\r\n      this.managementGroupForm.patchValue(event.node);\r\n    } else {\r\n      this.organizationForm.reset();\r\n      this.organizationForm.patchValue(event.node);\r\n    }\r\n    this.orgId = event?.node?.parent?.id;\r\n    this.orgName = event?.node?.parent?.name;\r\n  }\r\n\r\n  nodeExpand(event: any) {\r\n    const organizationId = event.node.type === 'managementgroup' ? event.node.organizationid : event.node.data;\r\n    const parentId = event.node.type === 'managementgroup' ? event.node.data : 0;\r\n    if (event.node && event.node.data) {\r\n      this.managementGroupService.getManagementGroups(organizationId, parentId).subscribe(nodes => {\r\n        event.node.children = (<any>nodes).data;\r\n      });\r\n    }\r\n  }\r\n\r\n  saveOrganization() {\r\n    const organization = this.organizationForm.value;\r\n    const validation = this.validationOrg();\r\n    if (validation) {\r\n      organization.additionalinfo.releases = organization.additionalinfo.releases\r\n        ? organization.additionalinfo.releases\r\n        : [];\r\n      if (organization.additionalinfo.releaseversion) {\r\n        const release = {\r\n          version: organization.additionalinfo.releaseversion,\r\n          notes: organization.additionalinfo.releasenotes,\r\n          date: new Date().toISOString(),\r\n          lastupdated: new Date().toISOString()\r\n        };\r\n        const index = organization.additionalinfo.releases.findIndex((item: any) => item.version === release.version);\r\n        if (index === -1) {\r\n          organization.additionalinfo.releases.push(release);\r\n        } else {\r\n          organization.additionalinfo.releases[index].notes = release.notes;\r\n          organization.additionalinfo.releases[index].lastupdated = new Date().toISOString();\r\n        }\r\n      }\r\n      organization.parentid = this.orgId;\r\n      if (this.saveMode === 'INSERT') {\r\n        this.managementGroupService.createOrganization(organization).subscribe(\r\n          () => {\r\n            this.alertService.success('Organization created successfully.');\r\n            this.loadTree();\r\n          },\r\n          _error => {\r\n            this.alertService.error('Failed to create organization.');\r\n          }\r\n        );\r\n      } else {\r\n        this.managementGroupService.updateOrganization(organization).subscribe(\r\n          () => {\r\n            this.alertService.success('Organization updated successfully.');\r\n            this.loadTree();\r\n          },\r\n          _error => {\r\n            this.alertService.error('Failed to update organization.');\r\n          }\r\n        );\r\n      }\r\n      this.clearForm();\r\n    }\r\n  }\r\n  validationOrg(): any {\r\n    if (!this.organizationForm.value.name) {\r\n      this.alertService.error('Please enter organization name');\r\n      return false;\r\n    } else if (!this.organizationForm.value.attempts && this.organizationForm.value.attempts <= 1) {\r\n      this.alertService.error('Please enter atleast one attempt(s)');\r\n      return false;\r\n    } else if (!this.organizationForm.value.timeout && this.organizationForm.value.timeout <= 1) {\r\n      this.alertService.error('Please enter a valid timeout value');\r\n      return false;\r\n    } else if (!this.organizationForm.value.passwordExpiryDays) {\r\n      this.alertService.error('Please enter a valid number of days for password expiry.');\r\n      return false;\r\n    }\r\n    else if (this.RBACORG['familyUserInactive'] && !this.organizationForm.value.deactive_days_limit) {\r\n      this.alertService.error('Please enter a valid number of days for family user inactive.');\r\n      return false;\r\n    }else if (this.RBACORG['familyUserInactive'] && !this.organizationForm.value.permanent_delete_days_limit) {\r\n      this.alertService.error('Please enter a valid number of days for family user deleted.');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  saveManagementGroup() {\r\n    const managementGroup = this.managementGroupForm.value;\r\n    if (this.managementGroupForm.valid) {\r\n      if (this.saveMode === 'INSERT') {\r\n        this.managementGroupService.createManagementGroup(managementGroup).subscribe(() => {\r\n          this.alertService.success('Management Group created successfully.');\r\n          this.loadTree();\r\n        });\r\n      } else {\r\n        this.managementGroupService.updateManagementGroup(managementGroup).subscribe(() => {\r\n          this.alertService.success('Management Group updated successfully.');\r\n          this.loadTree();\r\n        });\r\n      }\r\n    } else {\r\n      this.alertService.error('Invalid permission data.');\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.nodeType = 'organization';\r\n    this.saveMode = 'INSERT';\r\n    this.initializeManagementGroupForm();\r\n    this.initializeOrganizationForm();\r\n  }\r\n\r\n  createManagementGroupForm() {\r\n    if (this.nodeType === 'organization') {\r\n      this.nodeType = 'managementgroup';\r\n      this.managementGroupForm.patchValue({\r\n        organizationid: this.selectedItem.id\r\n      });\r\n    } else {\r\n      this.managementGroupForm.patchValue({\r\n        organizationid: this.selectedItem.organizationid,\r\n        parentid: this.selectedItem.id\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadContextMenu() {\r\n    const permission =  this.permissionStore.state;\r\n    this.menuItems = [\r\n      {\r\n        label: 'Create Organization',\r\n        visible: permission.SETTINGS_ORG_CREATE_ORGANIZATION ? permission.SETTINGS_ORG_CREATE_ORGANIZATION : false,\r\n        badge: 'SETTINGS_ORG_CREATE_ORGANIZATION',\r\n        icon: PrimeIcons.ARROW_UP_LEFT,\r\n        command: (event: any) => {\r\n          this.saveMode = 'INSERT';\r\n          this.nodeType = this.selectedItem.type;\r\n          if(!this.selectedItem?.parent || this.selectedItem?.parent){\r\n            this.orgId = this.selectedItem[0].id;\r\n            this.orgName = this.selectedItem[0].name;\r\n          }\r\n          if (this.selectedItem.type === 'managementgroup') {\r\n            this.nodeType = 'organization';\r\n          }\r\n          this.clearForm();\r\n        }\r\n      },\r\n      // {\r\n      //   label: 'Create Management Group',\r\n      //   icon: PrimeIcons.ARROW_DOWN_RIGHT,\r\n      //   visible: permission.SETTINGS_ORG_CREATE_MANAGEMENT_GROUP,\r\n      //   badge: 'SETTINGS_ORG_CREATE_MANAGEMENT_GROUP',\r\n      //   command: _event => {\r\n      //     this.saveMode = 'INSERT';\r\n      //     this.nodeType = this.selectedItem.type;\r\n      //     this.clearForm();\r\n      //     this.createManagementGroupForm();\r\n      //   }\r\n      // },\r\n      {\r\n        label: 'Delete',\r\n        icon: PrimeIcons.TRASH,\r\n        visible: permission.SETTINGS_ORG_DELETE ? permission.SETTINGS_ORG_DELETE : false,\r\n        // badge: 'SETTINGS_ORG_DELETE',\r\n        command: event => {\r\n          this.saveMode = 'DELETE';\r\n          this.nodeType = this.selectedItem.type;\r\n          this.confirmationService.confirm({\r\n            target: event['target'],\r\n            message: 'Are you sure that you want to delete?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n              this.deleteOrganization();\r\n              //confirm action\r\n            },\r\n            reject: () => {\r\n              // This is intentional\r\n            }\r\n          });\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  deleteOrganization(){\r\n    this.managementGroupService.deleteOrganization(this.selectedItem[0].id).subscribe((res:any)=>{\r\n      this.loadTree();\r\n      this.alertService.success('Deleted successfully')\r\n    })\r\n  }\r\n  private loadTree() {\r\n    this.managementGroupService.getAllOrganizations().subscribe((res: any) => {\r\n      this.organizations = res.data;\r\n    });\r\n  }\r\n}\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n  smsNotificationEnabled?: boolean;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n\r\n","<app-alert></app-alert>\r\n<div class=\"permission\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-4 col-md-6 col-12\">\r\n      <div class=\"clearfix\"></div>\r\n      <div class=\"tab-content py-2 px-2 px-sm-0\">\r\n        <div class=\"tab-pane fade show active\">\r\n          <div class=\"masteracess\">\r\n            <p-tree\r\n              [value]=\"organizations\"\r\n              selectionMode=\"multiple\"\r\n              [(selection)]=\"selectedItem\"\r\n              (onNodeSelect)=\"nodeSelect($event)\"\r\n              (onNodeContextMenuSelect)=\"onNodeContextMenuSelect($event)\"\r\n              [contextMenu]=\"treeContextMenu\"></p-tree>\r\n            <p-contextMenu #treeContextMenu [model]=\"menuItems\"></p-contextMenu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-8 col-md-6 col-12 master-right mt-2\">\r\n      <p-confirmPopup></p-confirmPopup>\r\n      <p-card\r\n        *ngIf=\"nodeType === 'organization'\"\r\n        id=\"pageForm\"\r\n        class=\"rbac-card\"\r\n        [formGroup]=\"organizationForm\"\r\n        [style]=\"{ width: '100%'}\">\r\n        <div class=\"strip_head toggleleft\">\r\n          <span class=\"report_head font-weight-bold\">Organization</span>\r\n        </div>\r\n        <input id=\"cid\" type=\"hidden\" formControlName=\"id\" />\r\n        <div class=\"p-fluid p-formgrid row\" *ngIf=\"orgName\">\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"orgname\" class=\"referral-form-labels\"> Parent Organization </label><br />\r\n            <label class=\"referral-form-labels parent-org\"> {{ orgName }} </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-fluid p-formgrid row\">\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"cname\" class=\"referral-form-labels\"\r\n              >Name\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"cname\"\r\n              type=\"text\"\r\n              fieldKey=\"SETTINGS_ORG_NAME\"\r\n              formControlName=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              aria-describedby=\"cname\"\r\n              pInputText />\r\n            <div\r\n              *ngIf=\"\r\n                organizationForm.controls['name'].invalid &&\r\n                (organizationForm.controls['name'].dirty || organizationForm.controls['name'].touched)\r\n              \">\r\n              <small *ngIf=\"organizationForm.controls['name'].invalid\" class=\"p-error block\">Name is required </small>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"p-field col-lg-4 d-none\"></div>\r\n          <div class=\"p-field col-lg-4 d-none\"></div>\r\n          <div class=\"p-field col-lg-4 d-none\"></div>\r\n        </div>\r\n        <ng-container formGroupName=\"additionalinfo\">\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"cenvironment\" class=\"referral-form-labels\">Environment </label>\r\n              <input\r\n                id=\"cenvironment\"\r\n                type=\"text\"\r\n                formControlName=\"environment\"\r\n                fieldKey=\"SETTINGS_ORG_ENVIRONMENT\"\r\n                placeholder=\"Enter Environment\"\r\n                aria-describedby=\"cenvironment\"\r\n                pInputText />\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"capptitle\" class=\"referral-form-labels\">Application Title </label>\r\n              <input\r\n                id=\"capptitle\"\r\n                type=\"text\"\r\n                formControlName=\"apptitle\"\r\n                fieldKey=\"SETTINGS_ORG_APPLICATION_TITLE\"\r\n                placeholder=\"Enter Application Title\"\r\n                aria-describedby=\"capptitle\"\r\n                pInputText />\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"cbannerlogo\" class=\"referral-form-labels\">Banner Logo </label>\r\n              <input\r\n                id=\"cbannerlogo\"\r\n                type=\"text\"\r\n                formControlName=\"bannerlogo\"\r\n                fieldKey=\"SETTINGS_ORG_BANNER_LOGO\"\r\n                placeholder=\"Enter Banner Logo\"\r\n                aria-describedby=\"cbannerlogo\"\r\n                pInputText />\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"cbasecolor\" class=\"referral-form-labels\">Base Color </label>\r\n              <input\r\n                id=\"cbasecolor\"\r\n                type=\"text\"\r\n                formControlName=\"basecolor\"\r\n                fieldKey=\"SETTINGS_ORG_BASE_COLOR\"\r\n                placeholder=\"Enter Base Color\"\r\n                aria-describedby=\"cbasecolor\"\r\n                pInputText />\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"creleaseversion\" class=\"referral-form-labels\">Release Version </label>\r\n              <input\r\n                id=\"creleaseversion\"\r\n                type=\"text\"\r\n                formControlName=\"releaseversion\"\r\n                fieldKey=\"SETTINGS_ORG_RELEASE_VERSION\"\r\n                placeholder=\"Enter Release Version\"\r\n                aria-describedby=\"creleaseversion\"\r\n                pInputText />\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"creleasenotes\" class=\"referral-form-labels\">Release Notes </label>\r\n              <textarea\r\n                id=\"creleasenotes\"\r\n                formControlName=\"releasenotes\"\r\n                fieldKey=\"SETTINGS_ORG_RELEASE_NOTES\"\r\n                placeholder=\"Enter Application Title\"\r\n                aria-describedby=\"creleasenotes\"\r\n                pInputText></textarea>\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12 mb-md-4 mb-3 mt-md-4 d-flex align-items-start\" *ngIf=\"RBACORG.smsNotificationEnabled\">\r\n              <p-checkbox inputId=\"smsNotification\" [binary]=\"true\" formControlName=\"smsNotification\"></p-checkbox>\r\n              <label class=\"intake-form-labels mb-0 ml-2\" for=\"smsNotification\">Enable SMS Notification?</label>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <div class=\"p-fluid p-formgrid row\">\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"noofattempts\" class=\"referral-form-labels\">Number of attempts</label>\r\n            <input\r\n              id=\"noofattempts\"\r\n              type=\"number\"\r\n              formControlName=\"attempts\"\r\n              fieldKey=\"SETTINGS_ORG_NO_OF_ATTEMPTS\"\r\n              placeholder=\"Enter Number of attempts\"\r\n              aria-describedby=\"noofattempts\"\r\n              min=\"1\"\r\n              pInputText />\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"noofattempts\" class=\"referral-form-labels\">Inactivity Timeout (In Minutes)</label>\r\n            <input\r\n            id=\"timeout\"\r\n            type=\"number\"\r\n            formControlName=\"timeout\"\r\n            fieldKey=\"SETTINGS_ORG_RELEASE_VERSION\"\r\n            placeholder=\"Enter Inactivity Timeout\"\r\n            aria-describedby=\"creleaseversion\"\r\n            pInputText />\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"noofattempts\" class=\"referral-form-labels\">Password Expiration (in Days)</label>\r\n            <input\r\n              id=\"passwordExpiryDays\"\r\n              type=\"number\"\r\n              formControlName=\"passwordExpiryDays\"\r\n              fieldKey=\"SETTINGS_ORG_RELEASE_VERSION\"\r\n              placeholder=\"Enter Password Expiration Days\"\r\n              aria-describedby=\"creleaseversion\"\r\n              pInputText />\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\" *ngIf=\"RBACORG['familyUserInactive']\">\r\n            <label for=\"noofattempts\" class=\"referral-form-labels\">Family User InActive (in Days)</label>\r\n            <input\r\n              id=\"deactive_days_limit\"\r\n              type=\"number\"\r\n              formControlName=\"deactive_days_limit\"\r\n              fieldKey=\"SETTINGS_ORG_RELEASE_VERSION\"\r\n              placeholder=\"Enter Family User Inactive Months\"\r\n              aria-describedby=\"creleaseversion\"\r\n              pInputText />\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\" *ngIf=\"RBACORG['familyUserDelete']\">\r\n            <label for=\"noofattempts\" class=\"referral-form-labels\">Family User Deleted (in Year)</label>\r\n            <input\r\n              id=\"permanent_delete_days_limit\"\r\n              type=\"number\"\r\n              formControlName=\"permanent_delete_days_limit\"\r\n              fieldKey=\"SETTINGS_ORG_RELEASE_VERSION\"\r\n              placeholder=\"Enter Family User Deleted Years\"\r\n              aria-describedby=\"creleaseversion\"\r\n              pInputText />\r\n          </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\" *ngIf=\"RBACORG['promtNotification']\">\r\n              <label for=\"noofattempts\" class=\"referral-form-labels\">Prompt notification (in Days)</label>\r\n              <input\r\n                id=\"PromptNotificationDays\"\r\n                type=\"number\"\r\n                formControlName=\"PromptNotificationDays\"\r\n                fieldKey=\"SETTINGS_ORG_NO_OF_ATTEMPTS\"\r\n                placeholder=\"Enter Number of PromptNotificationDays\"\r\n                aria-describedby=\"PromptNotificationDays\"\r\n                min=\"1\"\r\n                pInputText />\r\n            </div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\" *ngIf=\"RBACORG['promtNotification']\">\r\n              <label for=\"creleasenotes\" class=\"referral-form-labels\">Prompt notification message </label>\r\n              <textarea\r\n                id=\"PromptNotificationmsg\"\r\n                formControlName=\"PromptNotificationmsg\"\r\n                fieldKey=\"SETTINGS_ORG_RELEASE_NOTES\"\r\n                placeholder=\"Prompt notification message\"\r\n                aria-describedby=\"Promptnotificationmessage\"\r\n                pInputText></textarea>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-end mt-2\">\r\n          <button fieldKey=\"SETTINGS_ORG_CANCEL\" class=\"mb-md-0 mb-2 mr-2 btn bg-white text-primary border border-primary btncancel\" (click)=\"clearForm()\">\r\n            Cancel\r\n          </button>\r\n          <button class=\"mb-md-0 mb-2 btn btn-primary btncommon\" (click)=\"saveOrganization()\" fieldKey=\"SETTINGS_ORG_ADD_ORGANISATION\">\r\n            {{ saveMode === 'UPDATE' ? 'Update Organization' : 'Add Organization' }}\r\n          </button>\r\n        </div>\r\n      </p-card>\r\n\r\n      <p-card\r\n        *ngIf=\"nodeType === 'managementgroup'\"\r\n        id=\"managementGroupForm\"\r\n        class=\"rbac-card\"\r\n        [formGroup]=\"managementGroupForm\"\r\n        [style]=\"{ width: '100%', 'margin-bottom': '2em' }\">\r\n        <div class=\"strip_head toggleleft\">\r\n          <span class=\"report_head font-weight-bold\">Management Group</span>\r\n        </div>\r\n\r\n        <input id=\"lid\" type=\"hidden\" formControlName=\"id\" />\r\n        <input id=\"lorganizationid\" type=\"hidden\" formControlName=\"organizationid\" />\r\n        <input id=\"lparentid\" type=\"hidden\" formControlName=\"parentid\" />\r\n\r\n        <div class=\"p-fluid p-formgrid row\">\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"lname\" class=\"referral-form-labels\"\r\n              >Name\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"lname\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              formControlName=\"name\"\r\n              aria-describedby=\"lname\"\r\n              pInputText />\r\n            <div *ngIf=\"managementGroupForm.controls['name'].errors\">\r\n              <small *ngIf=\"managementGroupForm.controls['name'].invalid\" class=\"p-error block\">Name is required </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"llocation\" class=\"referral-form-labels\"\r\n              >Location\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"llocation\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Location\"\r\n              formControlName=\"location\"\r\n              aria-describedby=\"llocation\"\r\n              pInputText />\r\n            <div *ngIf=\"managementGroupForm.controls['location'].errors\">\r\n              <small *ngIf=\"managementGroupForm.controls['location'].invalid\" class=\"p-error block\"\r\n                >Location is required\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\">\r\n            <label for=\"lzip\" class=\"referral-form-labels\"\r\n              >Zip\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"lzip\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Zip Code\"\r\n              formControlName=\"zip\"\r\n              aria-describedby=\"lzip\"\r\n              pInputText />\r\n            <div *ngIf=\"managementGroupForm.controls['zip'].errors\">\r\n              <small *ngIf=\"managementGroupForm.controls['zip'].invalid\" class=\"p-error block\"\r\n                >Zip code is required\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex align-items-center justify-content-end mt-2\">\r\n          <button class=\"mb-md-0 mb-2 mr-2 btn bg-white text-primary btncancel\" (click)=\"clearForm()\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" class=\"mb-md-0 mb-2 btn btn-primary btncommon\" (click)=\"saveManagementGroup()\">\r\n            {{ saveMode === 'UPDATE' ? 'Update Management Group' : 'Add Management Group' }}\r\n          </button>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { RBACINFO } from './pics-rbac-org/organization/organization.component';\r\n\r\n@Component({\r\n  selector: 'rbac-org',\r\n  template: `\r\n    <cardi-organization [RBACORG]=\"RBACORG\" [PERMISSION]=\"PERMISSION\"></cardi-organization>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class RbacOrgComponent {\r\n  @Input() public RBACORG: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION: any;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionDirective } from './permission.directive';\r\n\r\n@NgModule({\r\n  declarations: [PermissionDirective],\r\n  imports: [CommonModule],\r\n  exports: [PermissionDirective]\r\n})\r\nexport class DirectivesModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DirectivesModule } from './@core/directives/directives.module';\r\nimport { AlertModule } from './@shared/alert/alert.module';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OrganizationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TreeSelectModule,\r\n    HttpClientModule,\r\n    CheckboxModule,\r\n    DropdownModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    AccordionModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    SidebarModule,\r\n    ContextMenuModule,\r\n    ConfirmPopupModule,\r\n    DirectivesModule,\r\n    AlertModule\r\n  ],\r\n   exports: [\r\n    OrganizationComponent\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class PicsRbacOrgModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RbacOrgComponent } from './rbac-org.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { PermissionStore } from './pics-rbac-org/@core/permissions/permission.store';\r\nimport { AlertService } from './pics-rbac-org/@core/service/alert.service';\r\nimport { DataStoreService } from './pics-rbac-org/@core/service/data-store.service';\r\nimport { HttpService } from './pics-rbac-org/@core/service/http.service';\r\nimport { ManagementGroupsService } from './pics-rbac-org/@core/service/management-groups.service';\r\nimport { PicsRbacOrgModule } from './pics-rbac-org/pics-rbac-org.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RbacOrgComponent\r\n  ],\r\n  imports: [\r\n    PicsRbacOrgModule\r\n  ],\r\n  exports: [\r\n    RbacOrgComponent\r\n  ],\r\n  providers: [ManagementGroupsService, HttpClient, HttpService, AlertService, ConfirmationService, PermissionStore, DataStoreService]\r\n})\r\nexport class RbacOrgModule { }\r\n","/*\r\n * Public API Surface of rbac-org\r\n */\r\n\r\nexport * from './lib/rbac-org.service';\r\nexport * from './lib/rbac-org.component';\r\nexport * from './lib/rbac-org.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.DataStoreService","i1.HttpService","i1","i1.PermissionStore","i1.AlertService","i1.ManagementGroupsService","i2","i3.AlertService","i5.PermissionStore","i6.DataStoreService","i7","i14.PermissionDirective","i15.AlertComponent","i1.OrganizationComponent"],"mappings":"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"}