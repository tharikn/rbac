import { OnInit } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { BehaviorSubject, Subscription } from 'rxjs';
import { AlertService } from '../../@core/service/alert.service';
import { AuthService } from '../../@core/service/auth.service';
import { ConfigurationSettingsService } from '../../@core/service/configuration-settings.service';
import { HttpService } from '../../@core/service/http.service';
import { AttachmentsService } from '../../@core/service/attachments.service';
import { DataStoreService } from '../../@core/service/data-store.service';
import * as i0 from "@angular/core";
export declare class ConfigLoginSettingsComponent implements OnInit {
    private authService;
    private alertService;
    private attachmentService;
    private httpService;
    private _formBuilder;
    private _configurationSettingsService;
    private _storeservice;
    Organization: any;
    closeResult: string;
    RBACORG: any;
    PERMISSION: any;
    LOGININFO: any;
    loginEvent$: BehaviorSubject<any>;
    thumbnailLogo: string;
    thumbnailBanner: string;
    orgId: any;
    orgSubs: Subscription;
    userRoles: any[];
    emailTemplate: any[];
    organizations: any[];
    imageDataLogo: any;
    uploadedFileLogo: any;
    urlPathLogo: any;
    attachTypeLogo: any;
    imageDataBanner: any;
    uploadedFileBanner: any;
    urlPathBanner: any;
    attachTypeBanner: any;
    userid: string;
    updateButton: boolean;
    environment: any;
    visible: boolean;
    bannerVisible: boolean;
    configRegistrationForm: FormGroup;
    editConfigSettings: any;
    constructor(authService: AuthService, alertService: AlertService, attachmentService: AttachmentsService, httpService: HttpService, _formBuilder: FormBuilder, _configurationSettingsService: ConfigurationSettingsService, _storeservice: DataStoreService);
    ngOnInit(): void;
    initilizeForm(): void;
    getRolesList(): void;
    getEmailTemplateNewList(): void;
    organizationsList(): void;
    handleFileInput(fileValue: any): void;
    validateImage(file: any, type: any): boolean;
    removeThumbnail(): void;
    handleFileInputBanner(fileValue: any): void;
    removeThumbnailBanner(): void;
    saveConfig(): void;
    backToPreview(): void;
    showUploadedLogo(): void;
    showUploadedBanner(): void;
    getConfigById(): void;
    conditionValidation(): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConfigLoginSettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConfigLoginSettingsComponent, "lib-config-login-settings", never, {}, {}, never, never>;
}
