import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { BehaviorSubject } from 'rxjs';
import { AppConstants } from '../../@core/constants/app-constants';
import * as i0 from "@angular/core";
import * as i1 from "../../@core/service/alert.service";
import * as i2 from "@angular/forms";
import * as i3 from "../../@core/service/configuration-settings.service";
import * as i4 from "../../@core/service/data-store.service";
import * as i5 from "../../@shared/alert/alert.component";
import * as i6 from "primeng/card";
import * as i7 from "primeng/dialog";
import * as i8 from "primeng/checkbox";
import * as i9 from "primeng/dropdown";
import * as i10 from "primeng/inputtext";
import * as i11 from "@angular/common";
export class ConfigLoginSettingsComponent {
    constructor(alertService, _formBuilder, _configurationSettingsService, _storeservice) {
        this.alertService = alertService;
        this._formBuilder = _formBuilder;
        this._configurationSettingsService = _configurationSettingsService;
        this._storeservice = _storeservice;
        this.closeResult = '';
        this.thumbnailLogo = '';
        this.thumbnailBanner = '';
        this.userRoles = [];
        this.emailTemplate = [];
        this.organizations = [];
        this.userid = '';
        this.updateButton = false;
        this.visible = false;
        this.bannerVisible = false;
        this.loginEvent$ = new BehaviorSubject(null);
        this.userid = sessionStorage.getItem('id');
        this._storeservice.currentStore.subscribe((res) => {
            if (res) {
                this.httpService = res['HTTPSERVICE'];
                this.authService = res['AUTHSERVICE'];
                this.attachmentService = res['ATTACHMENTSERVICE'];
            }
        });
    }
    ngOnInit() {
        this.orgSubs = this._storeservice.currentStore.subscribe((res) => {
            if (res['RBACORG'] && res['RBACORG'] !== '') {
                this.RBACORG = res['RBACORG'];
                console.log(this.RBACORG, 'RBACORG Profile');
                this.environment = this.RBACORG['environment'];
                this.orgId = parseInt(this.RBACORG['orgID']);
                if (this.environment) {
                    this.organizationsList();
                    this.getEmailTemplateNewList();
                    this.initilizeForm();
                    this.getRolesList();
                    this.getConfigById();
                }
            }
        });
    }
    initilizeForm() {
        this.configRegistrationForm = this._formBuilder.group({
            id: [''],
            registration: false,
            layout: [1],
            role_for_registration: ['', Validators.required],
            template_for_registration: ['', Validators.required],
            banner: ['', Validators.required],
            organization_title: ['', Validators.required],
            logo: ['', Validators.required],
            organizationid: ['', Validators.required]
        });
    }
    getRolesList() {
        this._configurationSettingsService.getAllUserRole(this.orgId).subscribe(res => {
            this.userRoles = res['data'];
        }, _error => this.alertService.error(AppConstants.errorMessage));
    }
    getEmailTemplateNewList() {
        this._configurationSettingsService.getEmailTemplateNewList().subscribe((_res) => {
            if (_res) {
                this.emailTemplate = _res.data;
            }
        });
    }
    organizationsList() {
        this._configurationSettingsService.getAllOrganizations().subscribe((res) => {
            this.organizations = res.data;
        });
    }
    handleFileInput(fileValue) {
        const target = fileValue.target;
        const file = target.files[0];
        this.uploadedFileLogo = fileValue.target.files[0].name;
        this.imageDataLogo = {
            contentType: fileValue.target.files[0].type,
            fileName: `login-orgimage/${this.userid}/${this.uploadedFileLogo}`
        };
        if (this.validateImage(fileValue.target.files, 'LOGO')) {
            this._configurationSettingsService.uploadKey(this.imageDataLogo).subscribe((res) => {
                this.urlPathLogo = res.data;
                const uploadAttachment = document.getElementById('file');
                const uploadAttachmentDetails = uploadAttachment.files[0];
                this.httpService.putUpload(this.urlPathLogo, uploadAttachmentDetails, uploadAttachmentDetails.type).subscribe((_resp) => {
                    this.alertService.success('Uploaded Successfully!');
                    const reader = new FileReader();
                    reader.onload = () => {
                        // this.thumbnailLogo = reader.result as string;
                        this.thumbnailLogo = this.urlPathLogo;
                        this.configRegistrationForm.patchValue({
                            logo: this.urlPathLogo
                        });
                    };
                    reader.readAsDataURL(file);
                    this.attachTypeLogo = fileValue.target.files[0].type;
                }, error => {
                    if (error.status == 0) {
                        this.alertService.error(AppConstants.errorMessage);
                        this.uploadedFileLogo = '';
                        this.urlPathLogo = '';
                    }
                });
            }, _error => {
                this.alertService.error(AppConstants.errorMessage);
            });
        }
    }
    validateImage(file, type) {
        const fileSize = Number(file[0].size) / 1024;
        const filetype = file[0].type.replace('image/', '');
        if (filetype === 'jpg' ||
            filetype === 'jpeg' ||
            filetype === 'png' ||
            filetype === 'gif' ||
            filetype === 'svg+xml') {
            if (fileSize < 1024 && type === 'BANNER') {
                return true;
            }
            else if (fileSize < 120 && type === 'LOGO') {
                return true;
            }
            else {
                this.alertService.warn('File is bigger than 1024 KB');
                return false;
            }
        }
        else {
            this.alertService.warn(`${filetype} format is not supported`);
            return false;
        }
    }
    removeThumbnail() {
        this.thumbnailLogo = '';
    }
    handleFileInputBanner(fileValue) {
        const target = fileValue.target;
        const file = target.files[0];
        this.uploadedFileBanner = fileValue.target.files[0].name;
        this.imageDataBanner = {
            contentType: fileValue.target.files[0].type,
            fileName: `login-orgimage/${this.userid}/${this.uploadedFileBanner}`
        };
        if (this.validateImage(fileValue.target.files, 'BANNER')) {
            this.attachmentService.uploadKey(this.imageDataBanner).subscribe((res) => {
                this.urlPathBanner = res.data;
                const uploadAttachment = document.getElementById('file1');
                const uploadAttachmentDetails = uploadAttachment.files[0];
                this.httpService
                    .putUpload(this.urlPathBanner, uploadAttachmentDetails, uploadAttachmentDetails.type)
                    .subscribe((_resp) => {
                    this.alertService.success('Uploaded Successfully!');
                    const reader = new FileReader();
                    this.thumbnailBanner = this.urlPathBanner;
                    reader.onload = () => {
                        this.configRegistrationForm.patchValue({
                            banner: this.urlPathBanner
                        });
                    };
                    reader.readAsDataURL(file);
                    this.attachTypeBanner = fileValue.target.files[0].type;
                }, error => {
                    if (error.status == 0) {
                        this.alertService.error(AppConstants.errorMessage);
                        this.uploadedFileBanner = '';
                        this.urlPathBanner = '';
                    }
                });
            }, _error => {
                this.alertService.error(AppConstants.errorMessage);
            });
        }
    }
    removeThumbnailBanner() {
        this.thumbnailBanner = '';
    }
    saveConfig() {
        const validate = this.conditionValidation();
        if (validate) {
            if (this.editConfigSettings) {
                const inputRequest = {
                    id: this.editConfigSettings.id,
                    registration: this.configRegistrationForm.value.registration,
                    // eslint-disable-next-line radix
                    layout: parseInt(this.configRegistrationForm.value.layout),
                    role_for_registration: this.configRegistrationForm.value.role_for_registration,
                    template_for_registration: this.configRegistrationForm.value.template_for_registration,
                    banner: this.configRegistrationForm.value.banner,
                    organization_title: this.configRegistrationForm.value.organization_title,
                    logo: this.configRegistrationForm.value.logo,
                    organizationid: this.configRegistrationForm.value.organizationid
                };
                this.updateButton = true;
                this._configurationSettingsService.updateConfig(this.editConfigSettings.id, inputRequest).subscribe(_res => {
                    this.alertService.success('Updated successfully!');
                });
            }
            else {
                const urlPathLogo = this.urlPathLogo ? this.urlPathLogo.split('?')[0] : '';
                const urlPathBanner = this.urlPathBanner ? this.urlPathBanner.split('?')[0] : '';
                this.configRegistrationForm.patchValue({
                    logo: urlPathLogo,
                    banner: urlPathBanner
                });
                const inputRequest = {
                    registration: this.configRegistrationForm.value.registration,
                    layout: this.configRegistrationForm.value.layout,
                    role_for_registration: this.configRegistrationForm.value.role_for_registration,
                    template_for_registration: this.configRegistrationForm.value.template_for_registration,
                    banner: this.configRegistrationForm.value.banner,
                    organization_title: this.configRegistrationForm.value.organization_title,
                    logo: this.configRegistrationForm.value.logo,
                    organizationid: this.configRegistrationForm.value.organizationid
                };
                this.updateButton = true;
                this._configurationSettingsService.saveConfigSettings(inputRequest).subscribe(_res => {
                    this.alertService.success('Saved successfully!');
                });
            }
        }
    }
    backToPreview() {
        this.updateButton = false;
    }
    showUploadedLogo() {
        this.visible = true;
    }
    showUploadedBanner() {
        this.bannerVisible = true;
    }
    getConfigById() {
        this._configurationSettingsService.getConfigList().subscribe((res) => {
            if (res.data) {
                this.updateButton = true;
                const configSettingsList = res.data;
                const valuesMax1 = configSettingsList.map(item => item.id);
                const max1 = Math.max(...valuesMax1);
                this.editConfigSettings = configSettingsList.filter(x => x.id === max1)[0];
                this.configRegistrationForm.patchValue(this.editConfigSettings);
                // eslint-disable-next-line radix
                this.configRegistrationForm.patchValue({ organizationid: parseInt(this.editConfigSettings.organizationid) });
                this.thumbnailLogo = this.editConfigSettings.logo;
                this.thumbnailBanner = this.editConfigSettings.banner;
            }
            else {
                this.updateButton = false;
            }
        });
    }
    conditionValidation() {
        if (!this.configRegistrationForm.value.organization_title) {
            this.alertService.warn('Please fill the organization title');
            return false;
        }
        else if (!this.configRegistrationForm.value.banner) {
            this.alertService.warn('Please upload the banner');
            return false;
        }
        else if (!this.configRegistrationForm.value.logo) {
            this.alertService.warn('Please upload the logo');
            return false;
        }
        else if (!this.configRegistrationForm.value.organizationid) {
            this.alertService.warn('Please select the organization');
            return false;
        }
        else if (!this.configRegistrationForm.value.role_for_registration) {
            this.alertService.warn('Please select the role');
            return false;
        }
        else if (!this.configRegistrationForm.value.template_for_registration) {
            this.alertService.warn('Please select the template');
            return false;
        }
        return true;
    }
}
ConfigLoginSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ConfigLoginSettingsComponent, deps: [{ token: i1.AlertService }, { token: i2.FormBuilder }, { token: i3.ConfigurationSettingsService }, { token: i4.DataStoreService }], target: i0.ɵɵFactoryTarget.Component });
ConfigLoginSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ConfigLoginSettingsComponent, selector: "lib-config-login-settings", ngImport: i0, template: "<app-alert></app-alert>\r\n<p-card styleClass=\"w-100\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 col-12\">\r\n      <div class=\"customizer customizer-styling customizer-styling-skin skin\">\r\n        <h6 class=\"font-weight-bold mb-3\">Choose Login Layout</h6>\r\n        <div class=\"d-flex justify-content-start align-items-center\">\r\n          <!-- Layout 1 -->\r\n          <div class=\"custom-control custom-radio mr-4 mb-md-0 mb-3\">\r\n            <figure class=\"active mb-0\">\r\n              <label role=\"link\" class=\"mb-0 layout-select\" for=\"layout1\">\r\n                <img src=\"../../../../assets/images/Layout.jpg\" class=\"img-fluid\" alt=\"layout1\" />\r\n              </label>\r\n              <figcaption>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"layout1\"\r\n                  name=\"layout\"\r\n                  class=\"custom-control-input layout-name\"\r\n                  [attr.checked]=\"true\"\r\n                  value=\"Layout 1\" />\r\n                <label class=\"custom-control-label mt-2 mb-0\" for=\"layout1\">Layout 1</label>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n\r\n<p-card styleClass=\"w-100 mt-3\">\r\n  <div class=\"customizer\" [formGroup]=\"configRegistrationForm\">\r\n    <h6 class=\"font-weight-bold mb-3\">Configure Login</h6>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"organizationName\">Organization Title</label>\r\n        <input\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"Title Name\"\r\n          id=\"organizationName\"\r\n          autocomplete=\"off\"\r\n          formControlName=\"organization_title\"\r\n          pInputText />\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels mb-0\" for=\"thumbnailBanner\">Upload Banner</label>\r\n        <div *ngIf=\"!thumbnailBanner\" id=\"thumbnailBanner\">\r\n          <figure class=\"mt-2 mb-0 pic-upload justify-content-md-center\">\r\n            <label for=\"file1\" class=\"btn btn-primary file-upload-btn mb-0\">\r\n              <span class=\"d-flex align-items-center justify-content-center\">\r\n                <span class=\"aterial-icon material-symbols-outlined text-white mr-2\">cloud_upload</span>\r\n                <span>Upload</span>\r\n              </span>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file1\"\r\n              aria-hidden=\"true\"\r\n              style=\"display: none\"\r\n              (change)=\"handleFileInputBanner($event)\" />\r\n          </figure>\r\n          <p><small>Image size max 1MB (min-width 1100px and min-height 800px)</small></p>\r\n        </div>\r\n        <div *ngIf=\"thumbnailBanner\">\r\n          <div class=\"d-flex align-items-center justify-content-between p-1 bg-light\">\r\n            <span role=\"button\" (click)=\"showUploadedBanner()\" title=\"Zoom\">\r\n              <img width=\"45\" height=\"45\" [src]=\"thumbnailBanner || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n            </span>\r\n            <span>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-search-plus fa-lg text-primary mr-2\"\r\n                (click)=\"showUploadedBanner()\"\r\n                title=\"Zoom\"></em>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-trash fa-lg text-danger mr-2\"\r\n                (click)=\"removeThumbnailBanner()\"\r\n                title=\"Delete\"></em>\r\n            </span>\r\n          </div>\r\n          <p-dialog header=\"Banner Preview\" [(visible)]=\"bannerVisible\" [style]=\"{ width: '50vw' }\">\r\n            <img class=\"img-fluid\" [attr.src]=\"thumbnailBanner || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n          </p-dialog>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-122 form-group\">\r\n        <label class=\"intake-form-labels mb-0\" for=\"thumbnailLogo\">Upload Logo</label>\r\n        <div *ngIf=\"!thumbnailLogo\" id=\"thumbnailLogo\">\r\n          <figure class=\"mt-2 mb-0 pic-upload justify-content-md-center\">\r\n            <label for=\"file\" class=\"btn btn-primary file-upload-btn mb-0\">\r\n              <span class=\"d-flex align-items-center justify-content-center\">\r\n                <span class=\"aterial-icon material-symbols-outlined text-white mr-2\">cloud_upload</span>\r\n                <span>Upload</span>\r\n              </span>\r\n            </label>\r\n            <input type=\"file\" id=\"file\" aria-hidden=\"true\" style=\"display: none\" (change)=\"handleFileInput($event)\" />\r\n          </figure>\r\n          <p><small>Image size max 120kb (min-width 400px and min-height 60px)</small></p>\r\n        </div>\r\n        <div *ngIf=\"thumbnailLogo\">\r\n          <div class=\"d-flex align-items-center justify-content-between p-1 bg-light\">\r\n            <span role=\"button\" (click)=\"showUploadedLogo()\" title=\"Zoom\">\r\n              <img width=\"45\" height=\"45\" [attr.src]=\"thumbnailLogo || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n            </span>\r\n            <span>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-search-plus fa-lg text-primary mr-2\"\r\n                (click)=\"showUploadedLogo()\"\r\n                title=\"Zoom\"></em>\r\n              <em\r\n                role=\"button\"\r\n                class=\"fa fa-trash fa-lg text-danger mr-2\"\r\n                (click)=\"removeThumbnail()\"\r\n                title=\"Delete\"></em>\r\n            </span>\r\n          </div>\r\n          <p-dialog header=\"Logo Preview\" [(visible)]=\"visible\" [style]=\"{ width: '50vw' }\">\r\n            <img class=\"img-fluid\" [src]=\"thumbnailLogo || 'assets/images/user-empty.png'\" alt=\"upload\" />\r\n          </p-dialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n\r\n<p-card styleClass=\"w-100 mt-3\">\r\n  <div class=\"customizer\" [formGroup]=\"configRegistrationForm\">\r\n    <h6 class=\"font-weight-bold mb-3\">Configure Registration</h6>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-sm-6 col-12 mb-md-4 mb-3\">\r\n        <p-checkbox inputId=\"registrationid\" [binary]=\"true\" formControlName=\"registration\"></p-checkbox>\r\n        <label class=\"intake-form-labels mb-0 ml-2\" for=\"registrationid\">Enable Registration?</label>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"selectOrganization\">Select Organization</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"organizations\"\r\n          placeholder=\"Select Role\"\r\n          id=\"selectOrganization\"\r\n          formControlName=\"organizationid\"\r\n          ariaLabelledBy=\"roleforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"roleforregistration\">Select Role</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"userRoles\"\r\n          placeholder=\"Select Role\"\r\n          id=\"roleforregistration\"\r\n          formControlName=\"role_for_registration\"\r\n          ariaLabelledBy=\"roleforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-6 col-12 form-group\">\r\n        <label class=\"intake-form-labels\" for=\"templateforregistration\">Select Template</label>\r\n        <p-dropdown\r\n          styleClass=\"w-100\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"id\"\r\n          [options]=\"emailTemplate\"\r\n          placeholder=\"Select Template\"\r\n          id=\"templateforregistration\"\r\n          formControlName=\"template_for_registration\"\r\n          ariaLabelledBy=\"templateforregistration\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class=\"text-md-right mt-2\">\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveConfig()\">\r\n        {{ updateButton ? 'Update' : 'Submit' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</p-card>\r\n", styles: ["@charset \"UTF-8\";:host ::ng-deep .p-card .p-card-body .p-card-content{padding:0}.customizer .custom-checkbox.custom-control,.customizer .custom-radio.custom-control{padding-left:0}.customizer .custom-checkbox.custom-control .theme-select,.customizer .custom-radio.custom-control .theme-select{border:2px solid #ddd;border-radius:7px}.customizer .custom-checkbox.custom-control .active .theme-select,.customizer .custom-radio.custom-control .active .theme-select{border-color:var(--primary)}.customizer .custom-checkbox .custom-control-input:checked~.custom-control-label:before,.customizer .custom-radio .custom-control-input:checked~.custom-control-label:before{content:\"\\f00c\";font-family:\"FontAwesome\",sans-serif;color:var(--hover-text);background-color:var(--btn);border-color:var(--btn);font-size:10px;display:flex;align-items:center;padding:2px}.customizer .custom-checkbox label,.customizer .custom-radio label{cursor:pointer}.customizer .custom-checkbox .font-box,.customizer .custom-radio .font-box{display:flex;justify-content:center;align-items:center;width:150px;height:120px;color:var(--text-dark)}.customizer .custom-checkbox .custom-control-label,.customizer .custom-radio .custom-control-label{position:relative;vertical-align:middle;font-size:var(--base-font-size);line-height:normal;color:var(--text-dark);cursor:pointer;padding-left:25px}.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:after{border-color:var(--btn)}.customizer .custom-checkbox .custom-control-label:before,.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:before,.customizer .custom-radio .custom-control-label:after{background-image:none;width:16px;height:16px;left:0;box-shadow:none;top:0}.customizer hr{border-color:var(--table-border)}.customizer .customizer-header{background:var(--background-color);color:var(--text-dark)}.customizer .customizer-header .customizer-close{position:absolute;right:.6rem;top:.6rem;padding:7px;width:auto;z-index:10;color:var(--text-dark);cursor:pointer}.customizer .customizer-header .customizer-close .material-icon{font-size:1.5rem}.customizer .customizer-header .customizer-close:hover{color:var(--btn)}.customizer h4{font-size:var(--font-15);font-weight:600;color:var(--text-dark)}.customizer h6{font-size:var(--font-14);color:var(--text-dark)}.customizer p{font-size:var(--base-font-size);font-weight:400;color:var(--text-dark)}.customizer .customizer-toggle{background:var(--btn);color:var(--hover-text);box-shadow:-3px 0 8px #22292f1a;border-top-left-radius:6px;border-bottom-left-radius:6px;position:absolute;top:50%;width:38px;height:38px;left:-39px;text-align:center;line-height:40px;border-left:1px solid var(--checkbox-border);cursor:pointer}.customizer .customizer-toggle .fa-cog{font-size:var(--font-15)}.customizer .customizer-toggle:hover{text-decoration:none}.customizer .customizer-styling-skin.skin .custom-control .custom-control-label{position:relative;padding-left:25px}.customizer .custom-control:first-child .font-box{font-size:var(--font-21);font-weight:400}.customizer .custom-control:last-child .font-box{font-size:var(--font-26);font-weight:600}\n"], components: [{ type: i5.AlertComponent, selector: "app-alert" }, { type: i6.Card, selector: "p-card", inputs: ["header", "subheader", "style", "styleClass"] }, { type: i7.Dialog, selector: "p-dialog", inputs: ["header", "draggable", "resizable", "positionLeft", "positionTop", "contentStyle", "contentStyleClass", "modal", "closeOnEscape", "dismissableMask", "rtl", "closable", "responsive", "appendTo", "breakpoints", "styleClass", "maskStyleClass", "showHeader", "breakpoint", "blockScroll", "autoZIndex", "baseZIndex", "minX", "minY", "focusOnShow", "maximizable", "keepInViewport", "focusTrap", "transitionOptions", "closeIcon", "closeAriaLabel", "closeTabindex", "minimizeIcon", "maximizeIcon", "visible", "style", "position"], outputs: ["onShow", "onHide", "visibleChange", "onResizeInit", "onResizeEnd", "onDragEnd", "onMaximize"] }, { type: i8.Checkbox, selector: "p-checkbox", inputs: ["value", "name", "disabled", "binary", "label", "ariaLabelledBy", "ariaLabel", "tabindex", "inputId", "style", "styleClass", "labelStyleClass", "formControl", "checkboxIcon", "readonly", "required", "trueValue", "falseValue"], outputs: ["onChange"] }, { type: i9.Dropdown, selector: "p-dropdown", inputs: ["scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "selectId", "dataKey", "filterBy", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "virtualScroll", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "disabled", "options", "filterValue"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear"] }], directives: [{ type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i10.InputText, selector: "[pInputText]" }, { type: i11.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ConfigLoginSettingsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-config-login-settings',
                    templateUrl: './config-login-settings.component.html',
                    styleUrls: ['./config-login-settings.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.AlertService }, { type: i2.FormBuilder }, { type: i3.ConfigurationSettingsService }, { type: i4.DataStoreService }]; } });
//# sourceMappingURL=data:application/json;base64,