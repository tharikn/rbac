import { AfterViewChecked, ChangeDetectorRef, Injector, OnInit } from '@angular/core';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { AlertService } from '../../../@core/services/alert.service';
import { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';
import { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';
import * as i0 from "@angular/core";
export declare class SearchParamsComponent implements OnInit, AfterViewChecked {
    private formBuilder;
    private cdRef;
    private alert;
    private route;
    private router;
    searchParamsForm: UntypedFormGroup;
    searchParams: any;
    fieldMapping: any[];
    formData: any;
    tableSchemaConfig: any;
    dynamicData: any;
    layout: any;
    id: any;
    baseQueryColumns: any;
    assetList: any;
    databaseType: any;
    columnText: any;
    jsonMode: any[];
    dropdownService: CommonDropdownsService;
    service: PageBuilderAddService;
    gridFieldList: any;
    constructor(injector: Injector, formBuilder: UntypedFormBuilder, cdRef: ChangeDetectorRef, alert: AlertService, route: ActivatedRoute, router: Router);
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    loadForm(): void;
    loadDropDown(): void;
    patchQueryParams(): void;
    formDataHandler(data: any): void;
    changeBaseQueryType(): void;
    parseSql(sql: any): any[];
    saveSearchParams(): void;
    checkSqlData(sqlData: any, baseQuery: any, searchDetails: any, formDetails: any): void;
    checkColumnText(baseQuery: any, searchDetails: any, formDetails: any): void;
    columnListCheck(baseQuery: any, searchDetails: any, formDetails: any): void;
    setPageJsonData(searchDetails: any, formDetails: any): void;
    formDataPageType(searchDetails: any): void;
    gridFieldListCondition(gridField: any, gridConfigFormArray: any, tempData: any): void;
    templateDataCheck(tempData: any, gridConfig: any, gridConfigList: any): void;
    formDataIdcheck(formDetails: any, gridConfigList: any): void;
    checkCreatePage(formDetails: any, searchDetails: any): void;
    resultCheckKey(result: any, data: any): void;
    saveAsset(columns: any): void;
    newAssetArrCheck(fieldArr: any, assetNameArr: any, tableCoulmn: any, activeArr: any): void;
    conditionCheckSaveAssests(_fieldArr: any): void;
    conditionCheckSave(fieldArr: any, activeArr: any, inactiveArr: any): void;
    getTableFields(tableList: any, searchDetails: any, formDetails: any): void;
    saveReportTable(result: any): void;
    dgpjsonMode(): void;
    modeChanges(jsonModeRefKey: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SearchParamsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SearchParamsComponent, "app-search-params", never, {}, {}, never, never, false, never>;
}
