import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { AppConstants } from '../../../@core/constants/app-constants';
import { AuthService } from '../../../@core/services/auth.service';
import { CommonDropdownsService } from '../../../@core/services/common-dropdowns.service';
import { LocalService } from '../../../@core/services/local.service';
import { PageBuilderAddService } from '../../../@core/services/page-builder-add.service';
import { PageBuilderService } from '../../page-builder-version/@core/page-builder.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../../../@core/services/alert.service";
import * as i3 from "@angular/router";
import * as i4 from "../../../@core/services/data-store.service";
import * as i5 from "@angular/common";
import * as i6 from "primeng/inputtext";
import * as i7 from "primeng/dropdown";
import * as i8 from "primeng/card";
import * as i9 from "../../../@core/directives/permission.directive";
export class TabConfigComponent {
    _formBuilder;
    _alert;
    _route;
    _router;
    _storeservice;
    tabsForm;
    formData;
    id = '';
    pageTypeList;
    dropdownService;
    pageList;
    filteredPageList;
    pageBuilderAddService;
    pageBuilderService;
    authService;
    orgSubs;
    orgId;
    fieldList = [];
    allFieldList = [];
    parentFieldList = [];
    tempList = [];
    pageErrorShow = false;
    tabErrorShow = false;
    basicPageInformation;
    localStore;
    httpService;
    RBACORG;
    constructor(injector, _formBuilder, _alert, _route, _router, _storeservice) {
        this._formBuilder = _formBuilder;
        this._alert = _alert;
        this._route = _route;
        this._router = _router;
        this._storeservice = _storeservice;
        this.pageBuilderAddService = injector.get(PageBuilderAddService);
        this.dropdownService = injector.get(CommonDropdownsService);
        this.pageBuilderService = injector.get(PageBuilderService);
        this.authService = injector.get(AuthService);
        this.localStore = injector.get(LocalService);
        this.id = this._route.snapshot.parent.paramMap.get('id');
        this._storeservice.currentStore.subscribe((res) => {
            if (res) {
                this.httpService = res['HTTPSERVICE'];
                this.RBACORG = res['RBACORG'];
                this.orgId = parseInt(this.RBACORG['orgID']);
                if (this.orgId) {
                    this.getAllPages();
                }
            }
        });
        this.basicPageInformation = this.localStore.getObj('PAGEDESIGN_BASICINFO');
    }
    ngOnInit() {
        if (!this.id) {
            const validation = this.validationPage();
            if (!validation) {
                this._router.navigate(['/pages/page-design/add/basic-info'], { relativeTo: this._route });
                return this._alert.error('Please fill in all the required fields.');
            }
        }
        this.getPageTypes();
        this.initTabConfigForm();
    }
    validationPage() {
        if (!this.basicPageInformation.pagename ||
            !this.basicPageInformation.pagetype ||
            !this.basicPageInformation.description) {
            return false;
        }
        else {
            return true;
        }
    }
    ngOnDestroy() {
        this.orgSubs.unsubscribe();
    }
    setCurrentFormData() {
        this.pageBuilderAddService.currentFormData.subscribe((data) => {
            this.formData = data;
            const tabConfig = this.formData ? JSON.parse(this.formData?.tabconfig) : null;
            if (tabConfig) {
                const tabsControl = this.tabsForm.controls['tabs'];
                tabsControl.controls = [];
                if (tabConfig?.length) {
                    tabConfig.forEach((val, index) => {
                        tabsControl.push(this._formBuilder.group({
                            id: val.id,
                            name: val.name,
                            field: val.field,
                            pfield: val.pfield,
                            icon: val.icon
                        }));
                        this.onChange(val.id, index);
                    });
                }
            }
        });
    }
    initTabConfigForm() {
        this.tabsForm = this._formBuilder.group({
            tabs: this._formBuilder.array([this.addTabGroup()])
        });
    }
    getPageTypes() {
        this.dropdownService.getDropDownValues('page').subscribe(result => {
            this.pageTypeList = result['data'];
        });
    }
    getAllPages() {
        this.pageBuilderAddService.getOrgList(this.orgId).subscribe((res) => {
            if (res) {
                this.pageList = res?.data?.filter(page => page?.pageTypeDetails?.key !== 'BTP');
                this.setCurrentFormData();
            }
        }, _err => this._alert.error(AppConstants.errorMessage));
    }
    // selectedPageType(event) {
    //   console.log(event);
    //   this.filteredPageList = this.pageList.filter(page => page.pageTypeDetails.id === event);
    // }
    addTabGroup() {
        return this._formBuilder.group({
            name: ['', [Validators.required]],
            id: ['', [Validators.required]],
            field: [''],
            pfield: [''],
            icon: [''],
            tableName: ['']
        });
    }
    get tabs() {
        return this.tabsForm.get('tabs').controls;
    }
    addTab() {
        const tabs = this.tabsForm.get('tabs').controls;
        tabs.push(this.addTabGroup());
        this.tabErrorShow = false;
        this.pageErrorShow = false;
    }
    // patchTab(tabValue) {
    //   const tabs = (this.tabsForm.get('tabs') as FormArray).controls;
    //   tabs.push(tabValue);
    // }
    // /**
    //  * Method to Remove tab
    //  * @param _index index of the tab to be removed
    //  */
    removeTab(_index) {
        const tabs = this.tabsForm.get('tabs');
        tabs.removeAt(_index);
    }
    // getPage(id?: any) {
    //   console.log(id);
    //   if (id && id !== '') {
    //     return this.pageList.filter(_ => _.pageTypeDetails.id == id);
    //   }
    // }
    cancel() {
        this.pageBuilderAddService.returnToList();
    }
    saveTabs(publish) {
        console.log(this.tabsForm.getRawValue());
        console.log(this.tabsForm.valid);
        // TODO: change to tabconfig
        const tabs = this.tabsForm.getRawValue().tabs;
        this.tabErrorShow = true;
        this.pageErrorShow = true;
        tabs.forEach(tab => {
            tab.type = this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.pageTypeDetails?.key;
            tab.tableName = JSON.parse(this.pageList.length && this.pageList.filter(page => page.id === tab.id)[0]?.activeVersion?.tableschemaconfig)?.tablelist;
            tab.parentTableName = tab.pfield?.split('.')[0];
        });
        this.formData.tabconfig = JSON.stringify(tabs);
        console.log('Saving....');
        console.log(this.formData);
        if (!this.id) {
            this.formData.published = publish;
            this.pageBuilderAddService.createPage(this.formData).subscribe(result => {
                const data = result['data'];
                this._router.navigate([`pages/page-design/versions/${data.id}`]);
                if (publish) {
                    this._alert.success(`Tab Page Version ${data.version || data.activeVersion.version}  is published successfully`);
                }
                else {
                    this._alert.success('Tab Page added successfully');
                }
            });
        }
        else {
            const formDetails = this.formData;
            formDetails.id = this.id;
            formDetails.published = publish;
            this.pageBuilderService.updatePageVersion(this.id, formDetails).subscribe(() => {
                this._router.navigate([`pages/page-design/versions/${formDetails.pageid}`]);
                this._alert.success('Tab Page updated successfully');
            });
        }
    }
    onChange(value, index) {
        if (value) {
            const selectedPage = this.pageList && this.pageList?.length ? this.pageList.find(x => x.id == value) : {};
            const fieldmapping = selectedPage.activeVersion
                ? JSON.parse(selectedPage?.activeVersion?.tableschemaconfig)?.fieldmapping
                : [];
            const data = fieldmapping && fieldmapping?.length
                ? fieldmapping.map(element => {
                    element.label = element.tablename + '.' + element.field;
                    return element;
                })
                : [];
            this.pageList[index].fieldmapping = data;
        }
        else {
            this.pageList[index].fieldmapping = [];
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TabConfigComponent, deps: [{ token: i0.Injector }, { token: i1.UntypedFormBuilder }, { token: i2.AlertService }, { token: i3.ActivatedRoute }, { token: i3.Router }, { token: i4.DataStoreService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TabConfigComponent, selector: "app-tab-config", ngImport: i0, template: "<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Tab Configuration</span>\r\n    </div>\r\n    <div class=\"p-fluid\">\r\n      <div class=\"\">\r\n        <form [formGroup]=\"tabsForm\">\r\n          <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n            <span class=\"report_head font-weight-bold\"></span>\r\n            <button class=\"btn btn-primary\" fieldKey=\"PAG_DES_TAB_CONFIG_ADD_TAB\" (click)=\"addTab()\">\r\n              <em class=\"fa fa-plus\" aria-hidden=\"true\"></em> Add Tab\r\n            </button>\r\n          </div>\r\n          <table aria-describedby=\"gridConfigTable\" class=\"table table-borderless actionadd mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Tab Name <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Icon</th>\r\n                <th scope=\"col\">Page <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Field Mapping</th>\r\n                <th scope=\"col\">Parent Field Mapping</th>\r\n                <th scope=\"col\">&#160;</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody formArrayName=\"tabs\" *ngFor=\"let item of tabs; let i = index\">\r\n              <tr [formGroupName]=\"i\">\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Tab Name\"\r\n                    pInputText\r\n                    required />\r\n                  <div\r\n                    *ngIf=\"\r\n                      tabErrorShow ? item.get('name').invalid : item.get('name').errors && item.get('name').touched\r\n                    \">\r\n                    <div class=\"p-error block mt-1\">Tab Name is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"icon\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Icon\"\r\n                    pInputText />\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.pageList\"\r\n                    placeholder=\"Select Page\"\r\n                    id=\"pagetype\"\r\n                    optionLabel=\"activeVersion.pagename\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"id\"\r\n                    formControlName=\"id\"\r\n                    [filter]=\"true\"\r\n                    (onChange)=\"onChange($event.value, i)\"\r\n                    [required]=\"true\">\r\n                  </p-dropdown>\r\n                  <div *ngIf=\"pageErrorShow ? item.get('id').invalid : item.get('id').errors && item.get('id').touched\">\r\n                    <div class=\"p-error block mt-1\">Page is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"pageList && pageList?.length ? pageList[i].fieldmapping : []\"\r\n                    placeholder=\"Select Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"field\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"field\"\r\n                    formControlName=\"field\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.parentFieldList[i]\"\r\n                    placeholder=\"Select Parent Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"label\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"label\"\r\n                    formControlName=\"pfield\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td class=\"text-center\" *ngIf=\"tabs.length > 1\">\r\n                  <a\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"text-danger trash-align\"\r\n                    title=\"Delete\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_DELETE\">\r\n                    <em class=\"pi pi-trash\" (click)=\"removeTab(i)\"></em>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n  <div class=\"formicon mt-3 text-right\">\r\n    <button class=\"mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    <button class=\"mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_PUBLISH\" (click)=\"saveTabs(true)\">\r\n      Publish\r\n    </button>\r\n    <button class=\"mb-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_SAVE_TABS\" (click)=\"saveTabs(false)\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: ["li{list-style:none}.page-design-basic-info .p-card-content{padding:0}.table.actionadd thead{background-color:var(--background-color)}.table.actionadd thead tr th{color:var(--text-dark);padding:10px 8px}.table.actionadd tbody tr td{padding-left:8px;padding-right:8px}.table thead{background-color:var(--background-color)}.text-danger{color:#d62f3f!important}.table{width:100%;margin-bottom:1rem;color:#212529;border:solid 1px #ddd}.trash-align .pi-trash{line-height:2}\n"], dependencies: [{ kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i1.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "directive", type: i1.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { kind: "directive", type: i6.InputText, selector: "[pInputText]" }, { kind: "component", type: i7.Dropdown, selector: "p-dropdown", inputs: ["id", "scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "dataKey", "filterBy", "filterFields", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "focusOnHover", "selectOnFocus", "autoOptionFocus", "autofocusFilter", "disabled", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "filterValue", "options"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear", "onLazyLoad"] }, { kind: "component", type: i8.Card, selector: "p-card", inputs: ["header", "subheader", "style", "styleClass"] }, { kind: "directive", type: i9.PermissionDirective, selector: "[fieldKey]", inputs: ["fieldKey"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TabConfigComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-tab-config', template: "<div class=\"page-design-basic-info\">\r\n  <p-card styleClass=\"rbac-card w-100 mb-2\">\r\n    <div class=\"strip_head page-designer toggleleft\">\r\n      <span class=\"report_head font-weight-bold\">Tab Configuration</span>\r\n    </div>\r\n    <div class=\"p-fluid\">\r\n      <div class=\"\">\r\n        <form [formGroup]=\"tabsForm\">\r\n          <div class=\"strip_head toggleleft page-designer d-flex justify-content-between mb-4\">\r\n            <span class=\"report_head font-weight-bold\"></span>\r\n            <button class=\"btn btn-primary\" fieldKey=\"PAG_DES_TAB_CONFIG_ADD_TAB\" (click)=\"addTab()\">\r\n              <em class=\"fa fa-plus\" aria-hidden=\"true\"></em> Add Tab\r\n            </button>\r\n          </div>\r\n          <table aria-describedby=\"gridConfigTable\" class=\"table table-borderless actionadd mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Tab Name <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Icon</th>\r\n                <th scope=\"col\">Page <span class=\"requiredfield text-danger\">*</span></th>\r\n                <th scope=\"col\">Field Mapping</th>\r\n                <th scope=\"col\">Parent Field Mapping</th>\r\n                <th scope=\"col\">&#160;</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody formArrayName=\"tabs\" *ngFor=\"let item of tabs; let i = index\">\r\n              <tr [formGroupName]=\"i\">\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Tab Name\"\r\n                    pInputText\r\n                    required />\r\n                  <div\r\n                    *ngIf=\"\r\n                      tabErrorShow ? item.get('name').invalid : item.get('name').errors && item.get('name').touched\r\n                    \">\r\n                    <div class=\"p-error block mt-1\">Tab Name is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"icon\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_TAB_NAME\"\r\n                    placeholder=\"Enter Icon\"\r\n                    pInputText />\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.pageList\"\r\n                    placeholder=\"Select Page\"\r\n                    id=\"pagetype\"\r\n                    optionLabel=\"activeVersion.pagename\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"id\"\r\n                    formControlName=\"id\"\r\n                    [filter]=\"true\"\r\n                    (onChange)=\"onChange($event.value, i)\"\r\n                    [required]=\"true\">\r\n                  </p-dropdown>\r\n                  <div *ngIf=\"pageErrorShow ? item.get('id').invalid : item.get('id').errors && item.get('id').touched\">\r\n                    <div class=\"p-error block mt-1\">Page is required </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"pageList && pageList?.length ? pageList[i].fieldmapping : []\"\r\n                    placeholder=\"Select Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"field\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"field\"\r\n                    formControlName=\"field\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown\r\n                    [options]=\"this.parentFieldList[i]\"\r\n                    placeholder=\"Select Parent Field\"\r\n                    id=\"field\"\r\n                    optionLabel=\"label\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_SELECT_PAGE\"\r\n                    optionValue=\"label\"\r\n                    formControlName=\"pfield\"\r\n                    [filter]=\"true\">\r\n                  </p-dropdown>\r\n                </td>\r\n                <td class=\"text-center\" *ngIf=\"tabs.length > 1\">\r\n                  <a\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"text-danger trash-align\"\r\n                    title=\"Delete\"\r\n                    fieldKey=\"PAG_DES_TAB_CONFIG_DELETE\">\r\n                    <em class=\"pi pi-trash\" (click)=\"removeTab(i)\"></em>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </p-card>\r\n  <div class=\"formicon mt-3 text-right\">\r\n    <button class=\"mb-2 mr-2 btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n    <button class=\"mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_PUBLISH\" (click)=\"saveTabs(true)\">\r\n      Publish\r\n    </button>\r\n    <button class=\"mb-2 btn btn-primary btncommon\" fieldKey=\"PAG_DES_TAB_CONFIG_SAVE_TABS\" (click)=\"saveTabs(false)\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: ["li{list-style:none}.page-design-basic-info .p-card-content{padding:0}.table.actionadd thead{background-color:var(--background-color)}.table.actionadd thead tr th{color:var(--text-dark);padding:10px 8px}.table.actionadd tbody tr td{padding-left:8px;padding-right:8px}.table thead{background-color:var(--background-color)}.text-danger{color:#d62f3f!important}.table{width:100%;margin-bottom:1rem;color:#212529;border:solid 1px #ddd}.trash-align .pi-trash{line-height:2}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.UntypedFormBuilder }, { type: i2.AlertService }, { type: i3.ActivatedRoute }, { type: i3.Router }, { type: i4.DataStoreService }]; } });
//# sourceMappingURL=data:application/json;base64,